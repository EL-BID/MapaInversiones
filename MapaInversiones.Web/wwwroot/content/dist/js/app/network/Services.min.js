define(["./urlsMap","../storage/Storage","app/utils/Modal","lib/jquery/mockjax"],function(n,t,i){function a(n){return n in document.documentElement.style}function u(n,t,u,f){if(f=f||y,typeof t=="string"&&(t=encodeURIComponent(t)),s){var e=$.ajax({url:n,data:t,settings:{cache:v(n,t)}});return e.pipe(function(n,t){if(n.status||t=="abort")t!="abort"&&"console"in window&&window.console.log("Harmless Warning: Request Aborted");else{var r=new i(l(n));r.show(),"console"in window&&window.console.log(n.message)}return n.status},function(n,t){return n.status||t=="abort"?t!="abort"&&"console"in window&&window.console.log("Harmless Warning: Request Aborted"):"console"in window&&window.console.log(n.message),!n.status}),e.fail(f).error(f),u&&e.done(u),e}return r.push({url:n,data:t,callback:u,errorCb:f,done:function(n){this.cb=this.cb||[],this.cb.push(n)}}),r[r.length-1]}function v(n,t){var i=n+"::"+JSON.stringify(t);return o[i]?!0:(o[i]=!0,!1)}function y(){}function h(i,r,f){var e=f&&f.lastUpdated?{lastUpdated:f.lastUpdated}:{};u(n[i],e,function(n){if(n.geojson&&n.geojson.features)try{c?r(n.geojson):(t.storeDataList(n),r(t.getDataList(i)))}catch(u){"console"in window&&(window.console.log("Harmless Warning: Quota Exceded!"),window.console.log("Harmless Warning: Quota exceded storing: "+n)),"localStorage"in window&&window.localStorage.clear(),r(n.geojson)}else r(f)})}function f(n,i){var r=t.getDataList(n);r.features.length?h(n,i,r):h(n,i)}function p(n){f("departments",n)}function w(n){f("regions",n)}function b(n){f("municipalities",n)}function k(){return u(n.filtersProjects)}function d(t){return u(n.searchProjects,t)}function g(t){return u(n.searchProjectsList,t)}function nt(t){return u(n.consolidated,t)}var e=!!$(document.body).attr("data-debug"),o={},s=!e,r=[],c=/*@cc_on!@*/!1||a("msTransform"),l=doT.compile('<div class="error"><h1>Error<\/h1><p>{{=it.message}}<\/p><div class="txt-right"><a class="button close">Cerrar<\/a><\/div><\/div>');return e&&require(["app/network/debugQueries"],function(){var n,t;if(s=!0,r.length)for(n=0;n<r.length;n++)t=u(r[n].url,r[n].data,r[n].callback,r[n].errorCb),r[n].cb&&t.done(r[n].cb)}),{polygons:{getDepartments:p,getRegions:w,getMunicipalities:b},filters:{forProjects:k},search:{projects:d,projectsList:g},infograph:{consolidated:nt}}});
//@ sourceMappingURL=Services.min.js.map