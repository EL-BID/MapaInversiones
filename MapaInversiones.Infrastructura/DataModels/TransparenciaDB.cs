//---------------------------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated by T4Model template for T4 (https://github.com/linq2db/linq2db).
//    Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
// </auto-generated>
//---------------------------------------------------------------------------------------------------

#pragma warning disable 1591

using System;
using System.Collections.Generic;
using System.Data;
using System.Linq;

using LinqToDB;
using LinqToDB.Common;
using LinqToDB.Configuration;
using LinqToDB.Data;
using LinqToDB.Mapping;

using Microsoft.SqlServer.Types;


namespace PlataformaTransparencia.Infrastructura.DataModels
{
	/// <summary>
	/// Database       : PISGR_PY_COVID19
	/// Data Source    : 00.55.00.170,5085
	/// Server Version : 14.00.3370
	/// </summary>
	public partial class TransparenciaDB : LinqToDB.Data.DataConnection
	{
    //Inicio: Nuevas tablas perfil de entidad
    public ITable<consulta_VinculacionIndicadoresPNDXEntidadesStp> VinculacionIndicadoresPNDXEntidadesStps0 { get { return this.GetTable<consulta_VinculacionIndicadoresPNDXEntidadesStp>(); } }
    public ITable<minhac_MisionVisionEntidad> MisionVisionEntidads { get { return this.GetTable<minhac_MisionVisionEntidad>(); } }
    public ITable<consulta_PresupuestoIndicadoresMinHacienda> PresupuestoIndicadoresMinHaciendas { get { return this.GetTable<consulta_PresupuestoIndicadoresMinHacienda>(); } }
    public ITable<minhac_ProyectoActividad> ProyectoActividads1 { get { return this.GetTable<minhac_ProyectoActividad>(); } }
    public ITable<stpPsgr_AlturaNivelEstructuraPresupuestaria> AlturaNivelEstructuraPresupuestarias { get { return this.GetTable<stpPsgr_AlturaNivelEstructuraPresupuestaria>(); } }
    public ITable<stpPsgr_OrganismoFinanciador> OrganismoFinanciadors0 { get { return this.GetTable<stpPsgr_OrganismoFinanciador>(); } }
    public ITable<stpPsgr_AlturaNivelPlane> AlturaNivelPlanes { get { return this.GetTable<stpPsgr_AlturaNivelPlane>(); } }
    public ITable<stpPsgr_TipoCatalogoBeneficiario> TipoCatalogoBeneficiarios { get { return this.GetTable<stpPsgr_TipoCatalogoBeneficiario>(); } }
    public ITable<stpPsgr_CatalogoBeneficiario> CatalogoBeneficiarios { get { return this.GetTable<stpPsgr_CatalogoBeneficiario>(); } }
    public ITable<consulta_CatalogoEntidade> CatalogoEntidades { get { return this.GetTable<consulta_CatalogoEntidade>(); } }
    public ITable<stpPsgr_ObjetoGasto> ObjetoGastoes0 { get { return this.GetTable<stpPsgr_ObjetoGasto>(); } }
    public ITable<stpPsgr_FuenteOrigen> FuenteOrigens { get { return this.GetTable<stpPsgr_FuenteOrigen>(); } }
    public ITable<stpPsgr_FuenteFinanciamiento> FuenteFinanciamientoes { get { return this.GetTable<stpPsgr_FuenteFinanciamiento>(); } }
    public ITable<stpPsgr_AsignacionAvanceFinanciero> AsignacionAvanceFinancieroes { get { return this.GetTable<stpPsgr_AsignacionAvanceFinanciero>(); } }
    public ITable<stpPsgr_AvanceFisico> AvanceFisicoes { get { return this.GetTable<stpPsgr_AvanceFisico>(); } }
    public ITable<stpPsgr_ActividadObra> ActividadObras { get { return this.GetTable<stpPsgr_ActividadObra>(); } }
    public ITable<stpPsgr_LOCALIZACION> Localizacions { get { return this.GetTable<stpPsgr_LOCALIZACION>(); } }
    public ITable<stpPsgr_MetaIndicador> MetaIndicadors { get { return this.GetTable<stpPsgr_MetaIndicador>(); } }
    public ITable<stpPsgr_PLANE> PLANES { get { return this.GetTable<stpPsgr_PLANE>(); } }
    public ITable<stpPsgr_ProyectoActividadXDistrito> ProyectoActividadXDistritoes { get { return this.GetTable<stpPsgr_ProyectoActividadXDistrito>(); } }
    public ITable<stpPsgr_ResultadoInmediato> ResultadoInmediatoes { get { return this.GetTable<stpPsgr_ResultadoInmediato>(); } }
    public ITable<stpPsgr_TipoIndicador> TipoIndicadors { get { return this.GetTable<stpPsgr_TipoIndicador>(); } }
    public ITable<stpPsgr_INDICADOR> Indicadors0 { get { return this.GetTable<stpPsgr_INDICADOR>(); } }
    public ITable<stpPsgr_PlanesXProyecto> PlanesXProyectoes { get { return this.GetTable<stpPsgr_PlanesXProyecto>(); } }
    public ITable<stpPsgr_ProyectoActividad> ProyectoActividads { get { return this.GetTable<stpPsgr_ProyectoActividad>(); } }
    public ITable<stpPsgr_SECTOR> Sectors0 { get { return this.GetTable<stpPsgr_SECTOR>(); } }
    public ITable<stpPsgr_UnidadResponsable> UnidadResponsables { get { return this.GetTable<stpPsgr_UnidadResponsable>(); } }
    public ITable<stpPsgr_UnidadJerarquica> UnidadJerarquicas { get { return this.GetTable<stpPsgr_UnidadJerarquica>(); } }
    public ITable<stpPsgr_EstructuraPresupuestaria> EstructuraPresupuestarias { get { return this.GetTable<stpPsgr_EstructuraPresupuestaria>(); } }
    //Fin: Nuevas tablas perfil de entidad
    public ITable<consulta_VinculacionIndicadoresPNDPresupuestoXEntidadesSTPV2> VinculacionIndicadoresPNDPresupuestoXEntidadesSTPV2 { get { return this.GetTable<consulta_VinculacionIndicadoresPNDPresupuestoXEntidadesSTPV2>(); } }
    public ITable<stp_VinculacionIndicadoresPNDPresupuestoXEntidadesStp> VinculacionIndicadoresPNDPresupuestoXEntidadesStp { get { return this.GetTable<stp_VinculacionIndicadoresPNDPresupuestoXEntidadesStp>(); } }
    public ITable<stp_VinculacionIndicadoresPNDXEntidadesStp> VinculacionIndicadoresPNDXEntidadesStp { get { return this.GetTable<stp_VinculacionIndicadoresPNDXEntidadesStp>(); } }
    public ITable<Actividad> Actividads { get { return this.GetTable<Actividad>(); } }
		public ITable<Actor> Actors { get { return this.GetTable<Actor>(); } }
		public ITable<ActorXProyecto> ActorXProyectos { get { return this.GetTable<ActorXProyecto>(); } }
		public ITable<AdendasXContrato> AdendasXContratos { get { return this.GetTable<AdendasXContrato>(); } }
		public ITable<Alerta> Alertas { get { return this.GetTable<Alerta>(); } }
		public ITable<Asociacioncomentario> Asociacioncomentarios { get { return this.GetTable<Asociacioncomentario>(); } }
		public ITable<Busqueda> Busquedas { get { return this.GetTable<Busqueda>(); } }
		public ITable<BusquedaCovid> BusquedaCovids { get { return this.GetTable<BusquedaCovid>(); } }
		public ITable<CabeceraMunicipio> CabeceraMunicipios { get { return this.GetTable<CabeceraMunicipio>(); } }
		public ITable<CampoOProyecto> CampoOProyectos { get { return this.GetTable<CampoOProyecto>(); } }
		public ITable<CampoOProyectoFiscalizacion> CampoOProyectoFiscalizacions { get { return this.GetTable<CampoOProyectoFiscalizacion>(); } }
		public ITable<CatalogoOrganismoFinanciador> CatalogoOrganismoFinanciadors { get { return this.GetTable<CatalogoOrganismoFinanciador>(); } }
		public ITable<Comentario> Comentarios { get { return this.GetTable<Comentario>(); } }
		public ITable<ContratistaContrato> ContratistaContratos { get { return this.GetTable<ContratistaContrato>(); } }
		public ITable<ContratistaContratoCancelado> ContratistaContratoCancelados { get { return this.GetTable<ContratistaContratoCancelado>(); } }
		public ITable<ContratistaContratoDetalle> ContratistaContratoDetalles { get { return this.GetTable<ContratistaContratoDetalle>(); } }
		public ITable<Contrato> Contratos { get { return this.GetTable<Contrato>(); } }
		public ITable<ContratoAvanceFinanciero> ContratoAvanceFinancieros { get { return this.GetTable<ContratoAvanceFinanciero>(); } }
		public ITable<ContratoAvanceFinancieroRetencione> ContratoAvanceFinancieroRetenciones { get { return this.GetTable<ContratoAvanceFinancieroRetencione>(); } }
		public ITable<Contratos2> Contratos2 { get { return this.GetTable<Contratos2>(); } }
		public ITable<ContratosBK> ContratosBks { get { return this.GetTable<ContratosBK>(); } }
		public ITable<ContratosEjecucionFinanciera> ContratosEjecucionFinancieras { get { return this.GetTable<ContratosEjecucionFinanciera>(); } }
		public ITable<ContratosOrden> ContratosOrdens { get { return this.GetTable<ContratosOrden>(); } }
		public ITable<DatosAdicionalesAprobacion> DatosAdicionalesAprobacions { get { return this.GetTable<DatosAdicionalesAprobacion>(); } }
		public ITable<DatosAdicionalesEjecutore> DatosAdicionalesEjecutores { get { return this.GetTable<DatosAdicionalesEjecutore>(); } }
		public ITable<Departamento> Departamentos { get { return this.GetTable<Departamento>(); } }
		public ITable<Distribucion> Distribucions { get { return this.GetTable<Distribucion>(); } }
		public ITable<DocumentosXContrato> DocumentosXContratos { get { return this.GetTable<DocumentosXContrato>(); } }
		public ITable<DonacionDistribucion> DonacionDistribucions { get { return this.GetTable<DonacionDistribucion>(); } }
		public ITable<DonacionProveedor> DonacionProveedors { get { return this.GetTable<DonacionProveedor>(); } }
		public ITable<DonacionRecepcion> DonacionRecepcions { get { return this.GetTable<DonacionRecepcion>(); } }
    public ITable<stp_EjeEstrategico> EjeEstrategicoes { get { return this.GetTable<stp_EjeEstrategico>(); } }
    public ITable<EnteTerritorial> EnteTerritorials { get { return this.GetTable<EnteTerritorial>(); } }
		public ITable<EntidadContrato> EntidadContratos { get { return this.GetTable<EntidadContrato>(); } }
		public ITable<EntidadesEjecutorasGesProy> EntidadesEjecutorasGesProys { get { return this.GetTable<EntidadesEjecutorasGesProy>(); } }
		public ITable<EsquemaFinanciacionProyecto> EsquemaFinanciacionProyectos { get { return this.GetTable<EsquemaFinanciacionProyecto>(); } }
		public ITable<Estado> Estados { get { return this.GetTable<Estado>(); } }
		public ITable<EstadoComentario> EstadoComentarios { get { return this.GetTable<EstadoComentario>(); } }
		public ITable<EstadoGesproyProyecto> EstadoGesproyProyectos { get { return this.GetTable<EstadoGesproyProyecto>(); } }
		public ITable<EstadoHomologado> EstadoHomologados { get { return this.GetTable<EstadoHomologado>(); } }
		public ITable<EstadoJuridicoCampoOProyecto> EstadoJuridicoCampoOProyectos { get { return this.GetTable<EstadoJuridicoCampoOProyecto>(); } }
		public ITable<EstructuraEntidade> EstructuraEntidades { get { return this.GetTable<EstructuraEntidade>(); } }
		public ITable<Etapa> Etapas { get { return this.GetTable<Etapa>(); } }
		public ITable<EtapaCampoOProyecto> EtapaCampoOProyectos { get { return this.GetTable<EtapaCampoOProyecto>(); } }
		public ITable<FacturacionXContrato> FacturacionXContratos { get { return this.GetTable<FacturacionXContrato>(); } }
		public ITable<Fase> Fases { get { return this.GetTable<Fase>(); } }
		public ITable<Fiscalizacion> Fiscalizacions { get { return this.GetTable<Fiscalizacion>(); } }
		public ITable<Foto> Fotos { get { return this.GetTable<Foto>(); } }
		public ITable<FotoUsuario> FotoUsuarios { get { return this.GetTable<FotoUsuario>(); } }
		public ITable<Fuente> Fuentes { get { return this.GetTable<Fuente>(); } }
		public ITable<FuenteDeLosRecurso> FuenteDeLosRecursos { get { return this.GetTable<FuenteDeLosRecurso>(); } }
		public ITable<FuenteFinancieraPrograma> FuenteFinancieraProgramas { get { return this.GetTable<FuenteFinancieraPrograma>(); } }
		public ITable<FuncionamientoSitio> FuncionamientoSitios { get { return this.GetTable<FuncionamientoSitio>(); } }
		public ITable<GeneroUsuario> GeneroUsuarios { get { return this.GetTable<GeneroUsuario>(); } }
		public ITable<Georreferenciacion> Georreferenciacions { get { return this.GetTable<Georreferenciacion>(); } }
		public ITable<Giro> Giros { get { return this.GetTable<Giro>(); } }
		public ITable<GratificacionCovid> GratificacionCovids { get { return this.GetTable<GratificacionCovid>(); } }
		public ITable<HistoriaEstado> HistoriaEstados { get { return this.GetTable<HistoriaEstado>(); } }
        public ITable<consulta_HistoricoAvanceIndicadoresPNDStp> HistoricoAvanceIndicadoresPNDStps { get { return this.GetTable<consulta_HistoricoAvanceIndicadoresPNDStp>(); } }
        public ITable<Idea> Ideas { get { return this.GetTable<Idea>(); } }
		public ITable<IdeaMejora> IdeaMejoras { get { return this.GetTable<IdeaMejora>(); } }
		public ITable<ImagenesXEnteTerritorial> ImagenesXEnteTerritorials { get { return this.GetTable<ImagenesXEnteTerritorial>(); } }
		public ITable<Indicadore> Indicadores { get { return this.GetTable<Indicadore>(); } }
		public ITable<Indicadores2021> Indicadores2021 { get { return this.GetTable<Indicadores2021>(); } }
		public ITable<IndicadoresTexto> IndicadoresTextos { get { return this.GetTable<IndicadoresTexto>(); } }
		public ITable<InformeAvanceFisicoProyecto> InformeAvanceFisicoProyectos { get { return this.GetTable<InformeAvanceFisicoProyecto>(); } }
		public ITable<Licitacione> Licitaciones { get { return this.GetTable<Licitacione>(); } }
		public ITable<Liquidacion> Liquidacions { get { return this.GetTable<Liquidacion>(); } }
		public ITable<MedioMapaIUsuario> MedioMapaIUsuarios { get { return this.GetTable<MedioMapaIUsuario>(); } }
		public ITable<MeGusta> MeGustas { get { return this.GetTable<MeGusta>(); } }
		public ITable<MetaIndicadorProducto> MetaIndicadorProductos { get { return this.GetTable<MetaIndicadorProducto>(); } }
		public ITable<Municipio> Municipios { get { return this.GetTable<Municipio>(); } }
		public ITable<ObjetivoEspecifico> ObjetivoEspecificos { get { return this.GetTable<ObjetivoEspecifico>(); } }
		public ITable<Opcione> Opciones { get { return this.GetTable<Opcione>(); } }
		public ITable<OpcionRespuesta> OpcionRespuestas { get { return this.GetTable<OpcionRespuesta>(); } }
		public ITable<ParametrizacionTitulo> ParametrizacionTitulos { get { return this.GetTable<ParametrizacionTitulo>(); } }
		public ITable<Periodicidad> Periodicidads { get { return this.GetTable<Periodicidad>(); } }
    public ITable<consulta_ObjetivosPndStp> consulta_ObjetivosPndStp { get { return this.GetTable<consulta_ObjetivosPndStp>(); } }
    public ITable<consulta_PndXEntidadesPresupuestoStp> PndXEntidadesPresupuestoStp { get { return this.GetTable<consulta_PndXEntidadesPresupuestoStp>(); } }
        public ITable<PreguntaCuestionario> PreguntaCuestionarios { get { return this.GetTable<PreguntaCuestionario>(); } }
		public ITable<Presupuesto> Presupuestos { get { return this.GetTable<Presupuesto>(); } }
		public ITable<PresupuestoObejetoGasto> PresupuestoObejetoGastos { get { return this.GetTable<PresupuestoObejetoGasto>(); } }
        public ITable<consulta_PresupuestoVigenteXSectorMinHacienda> PresupuestoVigenteXSectorMinHaciendas { get { return this.GetTable<consulta_PresupuestoVigenteXSectorMinHacienda>(); } }
        public ITable<consulta_PresupuestoXSectorMinHacienda> PresupuestoXSectorMinHaciendas { get { return this.GetTable<consulta_PresupuestoXSectorMinHacienda>(); } }
        public ITable<consulta_PresupuestoXVersionMinHacienta> PresupuestoXVersionMinHacientas { get { return this.GetTable<consulta_PresupuestoXVersionMinHacienta>(); } }
        public ITable<Proceso> Procesos { get { return this.GetTable<Proceso>(); } }
		public ITable<ProcesosBKsUrl> ProcesosBKsUrls { get { return this.GetTable<ProcesosBKsUrl>(); } }
		public ITable<Produccion> Produccions { get { return this.GetTable<Produccion>(); } }
		public ITable<ProduccionANH> ProduccionAnhs { get { return this.GetTable<ProduccionANH>(); } }
		public ITable<ProduccionANM> ProduccionAnms { get { return this.GetTable<ProduccionANM>(); } }
		public ITable<Producto> Productos { get { return this.GetTable<Producto>(); } }
		public ITable<Programa> Programas { get { return this.GetTable<Programa>(); } }
		public ITable<ProgramaEjecucionContable> ProgramaEjecucionContables { get { return this.GetTable<ProgramaEjecucionContable>(); } }
		public ITable<ProgramaEjecucionContrato> ProgramaEjecucionContratos { get { return this.GetTable<ProgramaEjecucionContrato>(); } }
		public ITable<ProgramaEjecucionPresupuestaria> ProgramaEjecucionPresupuestarias { get { return this.GetTable<ProgramaEjecucionPresupuestaria>(); } }
		public ITable<ProgramaMetasFinanciera> ProgramaMetasFinancieras { get { return this.GetTable<ProgramaMetasFinanciera>(); } }
		public ITable<ProgramaMetasFisica> ProgramaMetasFisicas { get { return this.GetTable<ProgramaMetasFisica>(); } }
		public ITable<ProgramaSalario> ProgramaSalarios { get { return this.GetTable<ProgramaSalario>(); } }
		public ITable<ProyeccionRecursosITEM> ProyeccionRecursosITEMS { get { return this.GetTable<ProyeccionRecursosITEM>(); } }
		public ITable<ProyeccionRecursosITEMS20210406> ProyeccionRecursosITEMS20210406 { get { return this.GetTable<ProyeccionRecursosITEMS20210406>(); } }
		public ITable<Proyecto> Proyectos { get { return this.GetTable<Proyecto>(); } }
		public ITable<ProyectoOrganismoFinanciador> ProyectoOrganismoFinanciadors { get { return this.GetTable<ProyectoOrganismoFinanciador>(); } }
		public ITable<ProyectosXContrato> ProyectosXContratos { get { return this.GetTable<ProyectosXContrato>(); } }
		public ITable<ProyectoXEntidadTerritorial> ProyectoXEntidadTerritorials { get { return this.GetTable<ProyectoXEntidadTerritorial>(); } }
		public ITable<PuntajeEvaluacionProyecto> PuntajeEvaluacionProyectos { get { return this.GetTable<PuntajeEvaluacionProyecto>(); } }
		public ITable<RecursoNatural> RecursoNaturals { get { return this.GetTable<RecursoNatural>(); } }
		public ITable<RecursoNaturalFiscalizacion> RecursoNaturalFiscalizacions { get { return this.GetTable<RecursoNaturalFiscalizacion>(); } }
		public ITable<RendimientosFinanciero> RendimientosFinancieros { get { return this.GetTable<RendimientosFinanciero>(); } }
		public ITable<RespuestaCuestionario> RespuestaCuestionarios { get { return this.GetTable<RespuestaCuestionario>(); } }
		public ITable<RespuestaCuestionarioTemp> RespuestaCuestionarioTemps { get { return this.GetTable<RespuestaCuestionarioTemp>(); } }
		public ITable<ResumenEstadisticasNacional> ResumenEstadisticasNacionals { get { return this.GetTable<ResumenEstadisticasNacional>(); } }
		public ITable<Rol> Rols { get { return this.GetTable<Rol>(); } }
		public ITable<RolUsuario> RolUsuarios { get { return this.GetTable<RolUsuario>(); } }
        public ITable<consulta_SearchResultParam> SearchResultParams { get { return this.GetTable<consulta_SearchResultParam>(); } }
        public ITable<Sector> Sectors { get { return this.GetTable<Sector>(); } }
		public ITable<SeguimientoEsquemaFinanciacionProyecto> SeguimientoEsquemaFinanciacionProyectos { get { return this.GetTable<SeguimientoEsquemaFinanciacionProyecto>(); } }
		public ITable<SeguimientoMetaIndicadorProducto> SeguimientoMetaIndicadorProductos { get { return this.GetTable<SeguimientoMetaIndicadorProducto>(); } }
		public ITable<Subsidio> Subsidios { get { return this.GetTable<Subsidio>(); } }
		public ITable<SubsidioArtista> SubsidioArtistas { get { return this.GetTable<SubsidioArtista>(); } }
		public ITable<SubsidioPytyvoV1> SubsidioPytyvoV1 { get { return this.GetTable<SubsidioPytyvoV1>(); } }
		public ITable<SubsidioPytyvoV1bak> SubsidioPytyvoV1baks { get { return this.GetTable<SubsidioPytyvoV1bak>(); } }
		public ITable<SubsidioPytyvoV2> SubsidioPytyvoV2 { get { return this.GetTable<SubsidioPytyvoV2>(); } }
		public ITable<SubsidiosConsolidado> SubsidiosConsolidados { get { return this.GetTable<SubsidiosConsolidado>(); } }
		public ITable<SubsidiosPytyvo> SubsidiosPytyvos { get { return this.GetTable<SubsidiosPytyvo>(); } }
		public ITable<Tiempo> Tiempos { get { return this.GetTable<Tiempo>(); } }
		public ITable<TipoActividadFiscalizacion> TipoActividadFiscalizacions { get { return this.GetTable<TipoActividadFiscalizacion>(); } }
		public ITable<TipoCampoOProyecto> TipoCampoOProyectos { get { return this.GetTable<TipoCampoOProyecto>(); } }
		public ITable<TipoComentario> TipoComentarios { get { return this.GetTable<TipoComentario>(); } }
		public ITable<TipoContraprestacion> TipoContraprestacions { get { return this.GetTable<TipoContraprestacion>(); } }
		public ITable<TipoDeFinanciacion> TipoDeFinanciacions { get { return this.GetTable<TipoDeFinanciacion>(); } }
		public ITable<TipoDeRecursoNatural> TipoDeRecursoNaturals { get { return this.GetTable<TipoDeRecursoNatural>(); } }
		public ITable<Tipologia> Tipologias { get { return this.GetTable<Tipologia>(); } }
		public ITable<TipologiasComentario> TipologiasComentarios { get { return this.GetTable<TipologiasComentario>(); } }
		public ITable<TipoPermiso> TipoPermisos { get { return this.GetTable<TipoPermiso>(); } }
		public ITable<TipoRespuesta> TipoRespuestas { get { return this.GetTable<TipoRespuesta>(); } }
		public ITable<TmpCahCreditosOtorgadosPresupuestoPropioInstitucional> TmpCahCreditosOtorgadosPresupuestoPropioInstitucionals { get { return this.GetTable<TmpCahCreditosOtorgadosPresupuestoPropioInstitucional>(); } }
		public ITable<TmpCahCreditosOtorgadosPresupuestoPropioInstitucional0> TmpCahCreditosOtorgadosPresupuestoPropioInstitucionals0 { get { return this.GetTable<TmpCahCreditosOtorgadosPresupuestoPropioInstitucional0>(); } }
		public ITable<TmpCreditosOtorgadosFondoCovidPrograma21deCreditoAgricolaDeHabilitacion> TmpCreditosOtorgadosFondoCovidPrograma21deCreditoAgricolaDeHabilitacions { get { return this.GetTable<TmpCreditosOtorgadosFondoCovidPrograma21deCreditoAgricolaDeHabilitacion>(); } }
		public ITable<TmpCreditosOtorgadosFondoCovidPrograma21DeCreditoAgricolaDeHabilitacion> TmpCreditosOtorgadosFondoCovidPrograma21DeCreditoAgricolaDeHabilitacions { get { return this.GetTable<TmpCreditosOtorgadosFondoCovidPrograma21DeCreditoAgricolaDeHabilitacion>(); } }
		public ITable<UnidadMedida> UnidadMedidas { get { return this.GetTable<UnidadMedida>(); } }
		public ITable<Usuario> Usuarios { get { return this.GetTable<Usuario>(); } }
		public ITable<UsuarioXEntidad> UsuarioXEntidads { get { return this.GetTable<UsuarioXEntidad>(); } }
        public ITable<minhac_VistaPresupuesto> VistaPresupuestoes { get { return this.GetTable<minhac_VistaPresupuesto>(); } }
        public ITable<VTmpDesembolsosProductosCovid19v1> VTmpDesembolsosProductosCovid19v1 { get { return this.GetTable<VTmpDesembolsosProductosCovid19v1>(); } }
		public ITable<VTmpDesembolsosProductosCovid19v2> VTmpDesembolsosProductosCovid19v2 { get { return this.GetTable<VTmpDesembolsosProductosCovid19v2>(); } }
		public ITable<VwAanaliticaPYProyectosContrato> VwAanaliticaPYProyectosContratos { get { return this.GetTable<VwAanaliticaPYProyectosContrato>(); } }
		public ITable<VwAanaliticaPYProyectosDetalle> VwAanaliticaPYProyectosDetalles { get { return this.GetTable<VwAanaliticaPYProyectosDetalle>(); } }
		public ITable<VwAanaliticaPYProyectosGeo> VwAanaliticaPYProyectosGeos { get { return this.GetTable<VwAanaliticaPYProyectosGeo>(); } }
		public ITable<VwAanaliticaPYProyectosSumanual> VwAanaliticaPYProyectosSumanuals { get { return this.GetTable<VwAanaliticaPYProyectosSumanual>(); } }
		public ITable<VwBonificacionesConsolidada> VwBonificacionesConsolidadas { get { return this.GetTable<VwBonificacionesConsolidada>(); } }
		public ITable<VwComentariosPorcentaje> VwComentariosPorcentajes { get { return this.GetTable<VwComentariosPorcentaje>(); } }
		public ITable<VwComentariosProyecto> VwComentariosProyectos { get { return this.GetTable<VwComentariosProyecto>(); } }
		public ITable<VwComponentesActividade> VwComponentesActividades { get { return this.GetTable<VwComponentesActividade>(); } }
		public ITable<VwContratosAdenda> VwContratosAdendas { get { return this.GetTable<VwContratosAdenda>(); } }
		public ITable<VwContratosCancelado> VwContratosCancelados { get { return this.GetTable<VwContratosCancelado>(); } }
		public ITable<VwContratosDocumentosRelacionado> VwContratosDocumentosRelacionados { get { return this.GetTable<VwContratosDocumentosRelacionado>(); } }
		public ITable<VwContratosFacturado> VwContratosFacturados { get { return this.GetTable<VwContratosFacturado>(); } }
		public ITable<VwContratosPerfilContratista> VwContratosPerfilContratistas { get { return this.GetTable<VwContratosPerfilContratista>(); } }
		public ITable<VwContratosPerfilContratistaInformacionContratacion> VwContratosPerfilContratistaInformacionContratacions { get { return this.GetTable<VwContratosPerfilContratistaInformacionContratacion>(); } }
		public ITable<VwContratosPerfilContratistaSinPrograma> VwContratosPerfilContratistaSinProgramas { get { return this.GetTable<VwContratosPerfilContratistaSinPrograma>(); } }
		public ITable<VwContratosPerfilContratistaSinProgramaXAnio> VwContratosPerfilContratistaSinProgramaXAnios { get { return this.GetTable<VwContratosPerfilContratistaSinProgramaXAnio>(); } }
		public ITable<VwContratosPerfilContratistaXAnio> VwContratosPerfilContratistaXAnios { get { return this.GetTable<VwContratosPerfilContratistaXAnio>(); } }
		public ITable<VwContratosPerfilContratistaXTipoProyecto> VwContratosPerfilContratistaXTipoProyectos { get { return this.GetTable<VwContratosPerfilContratistaXTipoProyecto>(); } }
		public ITable<VwContratosPerfilContratosCancelado> VwContratosPerfilContratosCancelados { get { return this.GetTable<VwContratosPerfilContratosCancelado>(); } }
		public ITable<VwContratosPerfilContratosProceso> VwContratosPerfilContratosProcesos { get { return this.GetTable<VwContratosPerfilContratosProceso>(); } }
		public ITable<VwDatosAbiertosBonificacione> VwDatosAbiertosBonificaciones { get { return this.GetTable<VwDatosAbiertosBonificacione>(); } }
		public ITable<VwDatosAbiertosCreditosCreditoAgricolaHabilitacion> VwDatosAbiertosCreditosCreditoAgricolaHabilitacions { get { return this.GetTable<VwDatosAbiertosCreditosCreditoAgricolaHabilitacion>(); } }
		public ITable<VwDatosAbiertosEjecucionContable> VwDatosAbiertosEjecucionContables { get { return this.GetTable<VwDatosAbiertosEjecucionContable>(); } }
		public ITable<VwDatosAbiertosEjecucionPresupuestaria> VwDatosAbiertosEjecucionPresupuestarias { get { return this.GetTable<VwDatosAbiertosEjecucionPresupuestaria>(); } }
		public ITable<VwDatosAbiertosProgramasIndicadore> VwDatosAbiertosProgramasIndicadores { get { return this.GetTable<VwDatosAbiertosProgramasIndicadore>(); } }
		public ITable<VwDatosAbiertosProgramasMetasFinanciera> VwDatosAbiertosProgramasMetasFinancieras { get { return this.GetTable<VwDatosAbiertosProgramasMetasFinanciera>(); } }
		public ITable<VwDatosAbiertosProgramasMetasFisica> VwDatosAbiertosProgramasMetasFisicas { get { return this.GetTable<VwDatosAbiertosProgramasMetasFisica>(); } }
		public ITable<VwDatosAbiertosProgramasSubsidio> VwDatosAbiertosProgramasSubsidios { get { return this.GetTable<VwDatosAbiertosProgramasSubsidio>(); } }
		public ITable<VwDatosAbiertosProgramasSubsidiosPytyvo> VwDatosAbiertosProgramasSubsidiosPytyvos { get { return this.GetTable<VwDatosAbiertosProgramasSubsidiosPytyvo>(); } }
		public ITable<VwDatosAbiertosProgramasSubsidiosTable> VwDatosAbiertosProgramasSubsidiosTables { get { return this.GetTable<VwDatosAbiertosProgramasSubsidiosTable>(); } }
		public ITable<VwDatosAbiertosSalario> VwDatosAbiertosSalarios { get { return this.GetTable<VwDatosAbiertosSalario>(); } }
		public ITable<VwDonacionesConsolidada> VwDonacionesConsolidadas { get { return this.GetTable<VwDonacionesConsolidada>(); } }
		public ITable<VwDonacionesConsolidadasListado> VwDonacionesConsolidadasListados { get { return this.GetTable<VwDonacionesConsolidadasListado>(); } }
		public ITable<VwDonacionesDonante> VwDonacionesDonantes { get { return this.GetTable<VwDonacionesDonante>(); } }
		public ITable<VwDonacionesEntidadesBeneficiaria> VwDonacionesEntidadesBeneficiarias { get { return this.GetTable<VwDonacionesEntidadesBeneficiaria>(); } }
		public ITable<VwDonacionesEntidadesBeneficiariasListado> VwDonacionesEntidadesBeneficiariasListados { get { return this.GetTable<VwDonacionesEntidadesBeneficiariasListado>(); } }
		public ITable<VwEntidadEjecutora> VwEntidadEjecutoras { get { return this.GetTable<VwEntidadEjecutora>(); } }
		public ITable<VwEstadoProyectosDeptoInv> VwEstadoProyectosDeptoInvs { get { return this.GetTable<VwEstadoProyectosDeptoInv>(); } }
		public ITable<VwEstadoProyectosInv> VwEstadoProyectosInvs { get { return this.GetTable<VwEstadoProyectosInv>(); } }
		public ITable<VwFuenteFinanciacion> VwFuenteFinanciacions { get { return this.GetTable<VwFuenteFinanciacion>(); } }
		public ITable<VwFuentesFinanciacion> VwFuentesFinanciacions { get { return this.GetTable<VwFuentesFinanciacion>(); } }
		public ITable<VwGaleriaEntidadesTerritorialesDepartamento> VwGaleriaEntidadesTerritorialesDepartamentos { get { return this.GetTable<VwGaleriaEntidadesTerritorialesDepartamento>(); } }
		public ITable<VwGaleriaEntidadesTerritorialesMunicipio> VwGaleriaEntidadesTerritorialesMunicipios { get { return this.GetTable<VwGaleriaEntidadesTerritorialesMunicipio>(); } }
		public ITable<VwGaleriaPrograma> VwGaleriaProgramas { get { return this.GetTable<VwGaleriaPrograma>(); } }
		public ITable<VwInformacionGeneralPerfilLocalizacion> VwInformacionGeneralPerfilLocalizacions { get { return this.GetTable<VwInformacionGeneralPerfilLocalizacion>(); } }
		public ITable<VwInformacionGeneralPerfilLocalizacionDepto> VwInformacionGeneralPerfilLocalizacionDeptos { get { return this.GetTable<VwInformacionGeneralPerfilLocalizacionDepto>(); } }
		public ITable<VwInformacionGeneralPerfilLocalizacionDeptoCovid> VwInformacionGeneralPerfilLocalizacionDeptoCovids { get { return this.GetTable<VwInformacionGeneralPerfilLocalizacionDeptoCovid>(); } }
		public ITable<VwInformacionGeneralPerfilSector> VwInformacionGeneralPerfilSectors { get { return this.GetTable<VwInformacionGeneralPerfilSector>(); } }
		public ITable<VwInformacionProcesoConYSinCodigoContratacion> VwInformacionProcesoConYSinCodigoContratacions { get { return this.GetTable<VwInformacionProcesoConYSinCodigoContratacion>(); } }
		public ITable<VwInformeAvanceFisicoProyecto> VwInformeAvanceFisicoProyectos { get { return this.GetTable<VwInformeAvanceFisicoProyecto>(); } }
		public ITable<VwLicitacione> VwLicitaciones { get { return this.GetTable<VwLicitacione>(); } }
    public ITable<consulta_PndXIndicadoresMetaAvanceStp> consulta_PndXIndicadoresMetaAvanceStp { get { return this.GetTable<consulta_PndXIndicadoresMetaAvanceStp>(); } }


    public ITable<VwMunicipioDepartamentoGeo> VwMunicipioDepartamentoGeos { get { return this.GetTable<VwMunicipioDepartamentoGeo>(); } }
		public ITable<VwNoComentario> VwNoComentarios { get { return this.GetTable<VwNoComentario>(); } }
		public ITable<VwNoProyectosComentario> VwNoProyectosComentarios { get { return this.GetTable<VwNoProyectosComentario>(); } }
        public ITable<stp_VwPND2030Stp> VwPND2030Stps { get { return this.GetTable<stp_VwPND2030Stp>(); } }
    public ITable<stpPsgr_VwObjetivosPNDStp> VwObjetivosPNDStp { get { return this.GetTable<stpPsgr_VwObjetivosPNDStp>(); } }
    public ITable<VwProcesoXAwardXContrato> VwProcesoXAwardXContratos { get { return this.GetTable<VwProcesoXAwardXContrato>(); } }
		public ITable<VwProduccionLiquidacion> VwProduccionLiquidacions { get { return this.GetTable<VwProduccionLiquidacion>(); } }
        public ITable<stp_VwProductoXresultadoInmediatoStp> VwProductoXresultadoInmediatoStps { get { return this.GetTable<stp_VwProductoXresultadoInmediatoStp>(); } }
        public ITable<VwProgramaCifrasConsolidadasCovid> VwProgramaCifrasConsolidadasCovids { get { return this.GetTable<VwProgramaCifrasConsolidadasCovid>(); } }
		public ITable<VwProgramaIndicadoresCovid> VwProgramaIndicadoresCovids { get { return this.GetTable<VwProgramaIndicadoresCovid>(); } }
		public ITable<VwProgramaLineaCompleta> VwProgramaLineaCompletas { get { return this.GetTable<VwProgramaLineaCompleta>(); } }
		public ITable<VwProgramaPorcentajeSalario> VwProgramaPorcentajeSalarios { get { return this.GetTable<VwProgramaPorcentajeSalario>(); } }
		public ITable<VwProgramaSalario> VwProgramaSalarios { get { return this.GetTable<VwProgramaSalario>(); } }
		public ITable<VwProyeccionProgramasRecursosLeyEmergencia> VwProyeccionProgramasRecursosLeyEmergencias { get { return this.GetTable<VwProyeccionProgramasRecursosLeyEmergencia>(); } }
		public ITable<VwProyeccionProgramasRecursosLeyEmergenciaITEM> VwProyeccionProgramasRecursosLeyEmergenciaITEMS { get { return this.GetTable<VwProyeccionProgramasRecursosLeyEmergenciaITEM>(); } }
		public ITable<VwProyeccionProgramasRecursosLeyEmergenciaOLD> VwProyeccionProgramasRecursosLeyEmergenciaOlds { get { return this.GetTable<VwProyeccionProgramasRecursosLeyEmergenciaOLD>(); } }
		public ITable<VwProyectosAprobado> VwProyectosAprobados { get { return this.GetTable<VwProyectosAprobado>(); } }
		public ITable<VwProyectosAprobadosInv> VwProyectosAprobadosInvs { get { return this.GetTable<VwProyectosAprobadosInv>(); } }
		public ITable<VwReporteComentariosParticipacion> VwReporteComentariosParticipacions { get { return this.GetTable<VwReporteComentariosParticipacion>(); } }
		public ITable<VwSectorListadoPorDeptoInv> VwSectorListadoPorDeptoInvs { get { return this.GetTable<VwSectorListadoPorDeptoInv>(); } }
		public ITable<VwSectorPerfilDeptoInv> VwSectorPerfilDeptoInvs { get { return this.GetTable<VwSectorPerfilDeptoInv>(); } }
		public ITable<VwSectorPerfilProyectosInv> VwSectorPerfilProyectosInvs { get { return this.GetTable<VwSectorPerfilProyectosInv>(); } }
		public ITable<VwSectorProyectosDeptoInv> VwSectorProyectosDeptoInvs { get { return this.GetTable<VwSectorProyectosDeptoInv>(); } }
		public ITable<VwSectorProyectosInv> VwSectorProyectosInvs { get { return this.GetTable<VwSectorProyectosInv>(); } }
		public ITable<VwSeguimientoProyectoAfinanciero> VwSeguimientoProyectoAfinancieros { get { return this.GetTable<VwSeguimientoProyectoAfinanciero>(); } }
		public ITable<VWSubsidioPytyvoV1> VWSubsidioPytyvoV1 { get { return this.GetTable<VWSubsidioPytyvoV1>(); } }
		public ITable<VWSubsidioPytyvoV2> VWSubsidioPytyvoV2 { get { return this.GetTable<VWSubsidioPytyvoV2>(); } }
		public ITable<VwSubsidiosConsolidado> VwSubsidiosConsolidados { get { return this.GetTable<VwSubsidiosConsolidado>(); } }
		public ITable<VWSubsidioSubsidioArtista> VWSubsidioSubsidioArtistas { get { return this.GetTable<VWSubsidioSubsidioArtista>(); } }
		public ITable<VwSubsidiosxLocalizacion> VwSubsidiosxLocalizacions { get { return this.GetTable<VwSubsidiosxLocalizacion>(); } }
		public ITable<VwSubsidiosxLocalizacionANT> VwSubsidiosxLocalizacionAnts { get { return this.GetTable<VwSubsidiosxLocalizacionANT>(); } }
		public ITable<VwSubsidiosxLocalizacionTable> VwSubsidiosxLocalizacionTables { get { return this.GetTable<VwSubsidiosxLocalizacionTable>(); } }
		public ITable<VwSubsidiosxLocalizacionTableOld> VwSubsidiosxLocalizacionTableOlds { get { return this.GetTable<VwSubsidiosxLocalizacionTableOld>(); } }
        public ITable<stp_VinculacionPNDPresupuestoXEntidadStp> StpVinculacionPNDPresupuestoXEntidadStp { get { return this.GetTable<stp_VinculacionPNDPresupuestoXEntidadStp>(); } }
        public ITable<consulta_VinculacionPNDPresupuestoXEntidadStp> ConsultaVinculacionPNDPresupuestoXEntidadStp { get { return this.GetTable<consulta_VinculacionPNDPresupuestoXEntidadStp>(); } }

        public TransparenciaDB()
		{
			InitDataContext();
			InitMappingSchema();
		}

		public TransparenciaDB(string configuration)
			: base(configuration)
		{
			InitDataContext();
			InitMappingSchema();
		}

		public TransparenciaDB(LinqToDbConnectionOptions options)
			: base(options)
		{
			InitDataContext();
			InitMappingSchema();
		}

		partial void InitDataContext();
		partial void InitMappingSchema();
	}


  [Table(Schema = "consulta", Name = "Vinculacion_IndicadoresPND_x_Entidades_STP")]
  public partial class consulta_VinculacionIndicadoresPNDXEntidadesStp
  {
    [Column("codEjeEstrategico"), Nullable] public int? CodEjeEstrategico { get; set; } // int
    [Column("nombreEjeEstrategico"), Nullable] public string NombreEjeEstrategico { get; set; } // varchar(255)
    [Column("descripcionEjeEstrategico"), Nullable] public string DescripcionEjeEstrategico { get; set; } // varchar(255)
    [Column("codObjetivoEstrategico"), Nullable] public int? CodObjetivoEstrategico { get; set; } // int
    [Column("nombreObjetivoEstrategico"), Nullable] public string NombreObjetivoEstrategico { get; set; } // varchar(255)
    [Column("descripcionObjetivoEstrategico"), Nullable] public string DescripcionObjetivoEstrategico { get; set; } // varchar(255)
    [Column("codObjetivoEspecifico"), Nullable] public int? CodObjetivoEspecifico { get; set; } // int
    [Column("nombreObjetivoEspecifico"), Nullable] public string NombreObjetivoEspecifico { get; set; } // varchar(255)
    [Column("idIndicador"), NotNull] public long IdIndicador { get; set; } // bigint
    [Column("indicador"), Nullable] public string Indicador { get; set; } // varchar(255)
    [Column("Unidad/Escala"), Nullable] public string UnidadEscala { get; set; } // varchar(255)
    [Column("añoBaseIndicador"), Nullable] public double? AñoBaseIndicador { get; set; } // float
    [Column("valorInidicador"), Nullable] public double? ValorInidicador { get; set; } // float
    [Column("Meta 2023"), Nullable] public double? Meta2023 { get; set; } // float
    [Column("Meta 2030"), Nullable] public double? Meta2030 { get; set; } // float
    [Column("avance"), Nullable] public double? Avance { get; set; } // float
    [Column("codNivelEntidad"), Nullable] public string CodNivelEntidad { get; set; } // varchar(255)
    [Column("nombreEntidad"), Nullable] public string NombreEntidad { get; set; } // varchar(255)
    [Column("fuente"), Nullable] public string Fuente { get; set; } // varchar(255)
  }

  [Table(Schema = "minhac", Name = "mision_vision_entidad")]
  public partial class minhac_MisionVisionEntidad
  {
    [Column("nivel"), Nullable] public double? Nivel { get; set; } // float
    [Column(), Nullable] public double? Entidad { get; set; } // float
    [Column("codNivelEntidad"), NotNull] public string CodNivelEntidad { get; set; } // varchar(47)
    [Column("nombreEntidad"), Nullable] public string NombreEntidad { get; set; } // varchar(255)
    [Column(), Nullable] public string Misión { get; set; } // varchar(1000)
    [Column(), Nullable] public string Visión { get; set; } // varchar(1000)
  }


    [Table(Schema = "consulta", Name = "Presupuesto_Indicadores_MinHacienda")]
    public partial class consulta_PresupuestoIndicadoresMinHacienda
    {
        [Column(), Nullable] public int? AnioPresupuesto { get; set; } // int
        [Column(), Nullable] public int? CodigoIndicador { get; set; } // int
        [Column(), Nullable] public string NombreIndicador { get; set; } // varchar(1000)
        [Column(), Nullable] public string DescripcionIndicador { get; set; } // varchar(1000)
        [Column("IND_FRECUEN"), Nullable] public string IndFrecuen { get; set; } // varchar(30)
        [Column("IND_ANIOBASE"), Nullable] public decimal? IndAniobase { get; set; } // numeric(4, 0)
        [Column("IND_FUENTE"), Nullable] public string IndFuente { get; set; } // varchar(1000)
        [Column("IND_NUMERADOR"), Nullable] public decimal? IndNumerador { get; set; } // numeric(22, 2)
        [Column("IND_DENOMINADOR"), Nullable] public decimal? IndDenominador { get; set; } // numeric(22, 2)
        [Column("IND_SUPUESTOS"), Nullable] public string IndSupuestos { get; set; } // varchar(1000)
        [Column("IND_METCALCULO"), Nullable] public string IndMetcalculo { get; set; } // varchar(1000)
        [Column("UN_MEDIDA_ANIO_BASE"), Nullable] public string UnMedidaAnioBase { get; set; } // varchar(1000)
        [Column(), Nullable] public string DescripcionPoblTotal { get; set; } // varchar(1000)
        [Column(), Nullable] public string UnidadMedidaTotal { get; set; } // varchar(1000)
        [Column(), Nullable] public decimal? TotalMetaHombres { get; set; } // numeric(22, 2)
        [Column(), Nullable] public decimal? TotalMetaMujeres { get; set; } // numeric(22, 2)
        [Column(), Nullable] public string DescripcionPoblPotencial { get; set; } // varchar(1000)
        [Column(), Nullable] public int? CodigoDepartamento { get; set; } // int
        [Column(), Nullable] public int? CodigoDistrito { get; set; } // int
        [Column(), Nullable] public string IdNegocioProyecto { get; set; } // varchar(19)
        [Column(), Nullable] public string CodNivelEntidad { get; set; } // varchar(7)
        [Column("IND_PORCMETA"), Nullable] public double? IndPorcmeta { get; set; } // float
        [Column("IND_PAVANCEUNITARIO"), Nullable] public double? IndPavanceunitario { get; set; } // float
        [Column("TIPO_INDICADOR"), Nullable] public string TipoIndicador { get; set; } // varchar(60)
    }


    [Table(Schema = "minhac", Name = "ProyectoActividad")]
  public partial class minhac_ProyectoActividad
  {
    [Column(), Nullable] public int? ANIOPRESUP { get; set; } // int
    [Column(), Nullable] public int? CodigoNivel { get; set; } // int
    [Column(), Nullable] public int? CodigoEntidad { get; set; } // int
    [Column(), Nullable] public int? CodigoTipo { get; set; } // int
    [Column(), Nullable] public int? CodigoPrograma { get; set; } // int
    [Column(), Nullable] public int? CodigoSubPrograma { get; set; } // int
    [Column(), Nullable] public int? CodigoProyecto { get; set; } // int
    [Column(), Nullable] public int? CodigoUnidResponsable { get; set; } // int
    [Column(), Nullable] public string NOMBRE { get; set; } // nvarchar(60)
    [Column(), Nullable] public string NOMABR { get; set; } // nvarchar(20)
    [Column(), Nullable] public string DESCRIP { get; set; } // nvarchar(1000)
    [Column(), Nullable] public DateTime? FCHING { get; set; } // datetime
    [Column(), Nullable] public string USRING { get; set; } // nvarchar(8)
    [Column(), Nullable] public DateTime? FCHACT { get; set; } // datetime
    [Column(), Nullable] public string USRACT { get; set; } // nvarchar(8)
    [Column("PAI_CODIGO"), Nullable] public int? PaiCodigo { get; set; } // int
    [Column("DPT_CODIGO"), Nullable] public int? DptCodigo { get; set; } // int
    [Column("CIU_CODIGO"), Nullable] public int? CiuCodigo { get; set; } // int
    [Column("PRY_OBJETIVO"), Nullable] public string PryObjetivo { get; set; } // nvarchar(2000)
    [Column(), Nullable] public string DIAGNOSTICO { get; set; } // nvarchar(1000)
    [Column(), Nullable] public DateTime? FCHCIERRE { get; set; } // datetime
    [Column(), Nullable] public string USRCIE { get; set; } // nvarchar(30)
    [Column(), Nullable] public DateTime? FCHCIE { get; set; } // datetime
    [Column(), Nullable] public string FISUSRCIE { get; set; } // nvarchar(30)
    [Column(), Nullable] public DateTime? FISFCHCIE { get; set; } // datetime
    [Column(), Nullable] public DateTime? FISFCHCIERRE { get; set; } // datetime
    [Column(), Nullable] public decimal? CodigoClasifFuncional { get; set; } // numeric(3, 0)
    [Column(), Nullable] public string Clasificacion { get; set; } // nvarchar(3)
  }


  [Table(Schema = "stpPsgr", Name = "UNIDAD_JERARQUICA")]
  public partial class stpPsgr_UnidadJerarquica
  {
    [Column("idUnidadJerarquica"), PrimaryKey, Identity] public int IdUnidadJerarquica { get; set; } // int
    [Column("idEntidadPresupuestaria"), Nullable] public int? IdEntidadPresupuestaria { get; set; } // int
    [Column("codUnidadJerarquica"), Nullable] public int? CodUnidadJerarquica { get; set; } // int
    [Column("nombre"), Nullable] public string Nombre { get; set; } // varchar(255)
    [Column("descripcion"), Nullable] public string Descripcion { get; set; } // varchar(255)
    [Column("año"), Nullable] public int? Año { get; set; } // int
    [Column("fechaCreacion"), Nullable] public DateTime? FechaCreacion { get; set; } // datetime
    [Column("fechaActualizacion"), Nullable] public DateTime? FechaActualizacion { get; set; } // datetime
    [Column("usuarioResponasble"), Nullable] public string UsuarioResponasble { get; set; } // varchar(255)

    #region Associations

    /// <summary>
    /// FK_UNIDAD_J_FK_ENTIDA_ESTRUCTU
    /// </summary>
    [Association(ThisKey = "IdEntidadPresupuestaria", OtherKey = "IdEstructuraPresupuestaria", CanBeNull = true, Relationship = LinqToDB.Mapping.Relationship.ManyToOne, KeyName = "FK_UNIDAD_J_FK_ENTIDA_ESTRUCTU", BackReferenceName = "Unidadjfkentidaestructus")]
    public stpPsgr_EstructuraPresupuestaria UNIDADJFKENTIDAESTRUCTU { get; set; }

    /// <summary>
    /// FK_UNIDAD_R_FK_UNIDAD_UNIDAD_J_BackReference
    /// </summary>
    [Association(ThisKey = "IdUnidadJerarquica", OtherKey = "IdUnidadJerarquica", CanBeNull = true, Relationship = LinqToDB.Mapping.Relationship.OneToMany, IsBackReference = true)]
    public IEnumerable<stpPsgr_UnidadResponsable> Unidadrfkunidadunidadjs { get; set; }

    #endregion
  }

  [Table(Schema = "stpPsgr", Name = "UNIDAD_RESPONSABLE")]
  public partial class stpPsgr_UnidadResponsable
  {
    [Column("idUnidadResponsable"), PrimaryKey, Identity] public int IdUnidadResponsable { get; set; } // int
    [Column("idUnidadJerarquica"), Nullable] public int? IdUnidadJerarquica { get; set; } // int
    [Column("nombre"), Nullable] public string Nombre { get; set; } // varchar(255)
    [Column("nombreCorto"), Nullable] public string NombreCorto { get; set; } // varchar(255)
    [Column("descripcion"), Nullable] public string Descripcion { get; set; } // varchar(255)
    [Column("año"), Nullable] public int? Año { get; set; } // int
    [Column("fechaCreacion"), Nullable] public DateTime? FechaCreacion { get; set; } // datetime
    [Column("fechaActualizacion"), Nullable] public DateTime? FechaActualizacion { get; set; } // datetime
    [Column("usuarioResponasble"), Nullable] public string UsuarioResponasble { get; set; } // varchar(255)

    #region Associations

    /// <summary>
    /// FK_PROYECTO_FK_UNIDAD_UNIDAD_R_BackReference
    /// </summary>
    [Association(ThisKey = "IdUnidadResponsable", OtherKey = "IdUnidadResponsable", CanBeNull = true, Relationship = LinqToDB.Mapping.Relationship.OneToMany, IsBackReference = true)]
    public IEnumerable<stpPsgr_ProyectoActividad> Proyectofkunidadunidadrs { get; set; }

    /// <summary>
    /// FK_UNIDAD_R_FK_UNIDAD_UNIDAD_J
    /// </summary>
    [Association(ThisKey = "IdUnidadJerarquica", OtherKey = "IdUnidadJerarquica", CanBeNull = true, Relationship = LinqToDB.Mapping.Relationship.ManyToOne, KeyName = "FK_UNIDAD_R_FK_UNIDAD_UNIDAD_J", BackReferenceName = "Unidadrfkunidadunidadjs")]
    public stpPsgr_UnidadJerarquica UNIDADRFKUNIDADUNIDADJ { get; set; }

    #endregion
  }


  [Table(Schema = "stpPsgr", Name = "ESTRUCTURA_PRESUPUESTARIA")]
  public partial class stpPsgr_EstructuraPresupuestaria
  {
    [Column("idEstructuraPresupuestaria"), PrimaryKey, Identity] public int IdEstructuraPresupuestaria { get; set; } // int
    [Column("idPadre"), Nullable] public int? IdPadre { get; set; } // int
    [Column("tipoPresupuesto"), Nullable] public int? TipoPresupuesto { get; set; } // int
    [Column("idFuenteFinanciamiento"), Nullable] public int? IdFuenteFinanciamiento { get; set; } // int
    [Column("codigoEstructura"), Nullable] public int? CodigoEstructura { get; set; } // int
    [Column("alturaNivel"), Nullable] public int? AlturaNivel { get; set; } // int
    [Column("idSector"), Nullable] public int? IdSector { get; set; } // int
    [Column("codPrograma_subPrograma"), Nullable] public int? CodProgramaSubPrograma { get; set; } // int
    [Column("nombre"), Nullable] public string Nombre { get; set; } // varchar(255)
    [Column("nombreCorto"), Nullable] public string NombreCorto { get; set; } // varchar(255)
    [Column("descripcion"), Nullable] public string Descripcion { get; set; } // varchar(255)
    [Column("año"), Nullable] public int? Año { get; set; } // int
    [Column("es_imputable"), Nullable] public short? EsImputable { get; set; } // smallint
    [Column("sigla"), Nullable] public string Sigla { get; set; } // varchar(255)
    [Column("baseLegal"), Nullable] public string BaseLegal { get; set; } // varchar(255)
    [Column("mision"), Nullable] public string Mision { get; set; } // varchar(255)
    [Column("vision"), Nullable] public string Vision { get; set; } // varchar(255)
    [Column("politica"), Nullable] public string Politica { get; set; } // varchar(255)
    [Column("objetivo"), Nullable] public string Objetivo { get; set; } // varchar(255)
    [Column("diagnostico"), Nullable] public string Diagnostico { get; set; } // varchar(255)
    [Column("ruc"), Nullable] public string Ruc { get; set; } // varchar(255)
    [Column("presupuestoDestinado"), Nullable] public decimal? PresupuestoDestinado { get; set; } // numeric(15, 2)
    [Column("resultadoEsperado"), Nullable] public string ResultadoEsperado { get; set; } // varchar(255)
    [Column("version"), Nullable] public int? Version { get; set; } // int
    [Column("fechaCreacion"), Nullable] public DateTime? FechaCreacion { get; set; } // datetime
    [Column("fechaActualizacion"), Nullable] public DateTime? FechaActualizacion { get; set; } // datetime
    [Column("usuarioResponasble"), Nullable] public string UsuarioResponasble { get; set; } // varchar(255)

    #region Associations

    /// <summary>
    /// FK_ALTURA_ESTRUCTURA
    /// </summary>
    [Association(ThisKey = "AlturaNivel", OtherKey = "IdAlturaNivelEstructura", CanBeNull = true, Relationship = LinqToDB.Mapping.Relationship.ManyToOne, KeyName = "FK_ALTURA_ESTRUCTURA", BackReferenceName = "Alturaestructuras")]
    public stpPsgr_AlturaNivelEstructuraPresupuestaria ALTURAESTRUCTURA { get; set; }

    /// <summary>
    /// FK_ESTRUCTU_FK_ESTRUC_ESTRUCTU
    /// </summary>
    [Association(ThisKey = "IdPadre", OtherKey = "IdEstructuraPresupuestaria", CanBeNull = true, Relationship = LinqToDB.Mapping.Relationship.ManyToOne, KeyName = "FK_ESTRUCTU_FK_ESTRUC_ESTRUCTU", BackReferenceName = "FkEstructuFkEstrucEstructuBackReferences")]
    public stpPsgr_EstructuraPresupuestaria ESTRUCTUFKESTRUCESTRUCTU { get; set; }

    /// <summary>
    /// FK_ESTRUCTU_FK_FUENTE_FUENTE_F
    /// </summary>
    [Association(ThisKey = "IdFuenteFinanciamiento", OtherKey = "IdFuenteFinanciamiento", CanBeNull = true, Relationship = LinqToDB.Mapping.Relationship.ManyToOne, KeyName = "FK_ESTRUCTU_FK_FUENTE_FUENTE_F", BackReferenceName = "Estructufkfuentefuentefs")]
    public stpPsgr_FuenteFinanciamiento ESTRUCTUFKFUENTEFUENTEF { get; set; }

    /// <summary>
    /// FK_ESTRUCTU_FK_TIPOPR_ESTRUCTU
    /// </summary>
    [Association(ThisKey = "TipoPresupuesto", OtherKey = "IdEstructuraPresupuestaria", CanBeNull = true, Relationship = LinqToDB.Mapping.Relationship.ManyToOne, KeyName = "FK_ESTRUCTU_FK_TIPOPR_ESTRUCTU", BackReferenceName = "FkEstructuFkTipoprEstructuBackReferences")]
    public stpPsgr_EstructuraPresupuestaria ESTRUCTUFKTIPOPRESTRUCTU { get; set; }

    /// <summary>
    /// FK_ESTRUCTU_FK_ESTRUC_ESTRUCTU_BackReference
    /// </summary>
    [Association(ThisKey = "IdEstructuraPresupuestaria", OtherKey = "IdPadre", CanBeNull = true, Relationship = LinqToDB.Mapping.Relationship.OneToMany, IsBackReference = true)]
    public IEnumerable<stpPsgr_EstructuraPresupuestaria> FkEstructuFkEstrucEstructuBackReferences { get; set; }

    /// <summary>
    /// FK_ESTRUCTU_FK_TIPOPR_ESTRUCTU_BackReference
    /// </summary>
    [Association(ThisKey = "IdEstructuraPresupuestaria", OtherKey = "TipoPresupuesto", CanBeNull = true, Relationship = LinqToDB.Mapping.Relationship.OneToMany, IsBackReference = true)]
    public IEnumerable<stpPsgr_EstructuraPresupuestaria> FkEstructuFkTipoprEstructuBackReferences { get; set; }

    /// <summary>
    /// FK_INDICADO_FK_ENTIDA_ESTRUCTU_BackReference
    /// </summary>
    [Association(ThisKey = "IdEstructuraPresupuestaria", OtherKey = "IdEntidadPresupuestaria", CanBeNull = true, Relationship = LinqToDB.Mapping.Relationship.OneToMany, IsBackReference = true)]
    public IEnumerable<stpPsgr_INDICADOR> Indicadofkentidaestructus { get; set; }

    /// <summary>
    /// FK_PROYECTO_FK_SUBPRO_ESTRUCTU_BackReference
    /// </summary>
    [Association(ThisKey = "IdEstructuraPresupuestaria", OtherKey = "IdEntidadPresupuestaria", CanBeNull = true, Relationship = LinqToDB.Mapping.Relationship.OneToMany, IsBackReference = true)]
    public IEnumerable<stpPsgr_ProyectoActividad> Proyectofksubproestructus { get; set; }

    /// <summary>
    /// FK_SECTOR_ESTRUCTURA
    /// </summary>
    [Association(ThisKey = "IdSector", OtherKey = "IdSector", CanBeNull = true, Relationship = LinqToDB.Mapping.Relationship.ManyToOne, KeyName = "FK_SECTOR_ESTRUCTURA", BackReferenceName = "Estructuras")]
    public stpPsgr_SECTOR SECTORESTRUCTURA { get; set; }

    /// <summary>
    /// FK_UNIDAD_J_FK_ENTIDA_ESTRUCTU_BackReference
    /// </summary>
    [Association(ThisKey = "IdEstructuraPresupuestaria", OtherKey = "IdEntidadPresupuestaria", CanBeNull = true, Relationship = LinqToDB.Mapping.Relationship.OneToMany, IsBackReference = true)]
    public IEnumerable<stpPsgr_UnidadJerarquica> Unidadjfkentidaestructus { get; set; }

    #endregion
  }

  [Table(Schema = "stpPsgr", Name = "ALTURA_NIVEL_ESTRUCTURA_PRESUPUESTARIA")]
  public partial class stpPsgr_AlturaNivelEstructuraPresupuestaria
  {
    [Column("idAlturaNivelEstructura"), PrimaryKey, NotNull] public int IdAlturaNivelEstructura { get; set; } // int
    [Column("nombre"), Nullable] public string Nombre { get; set; } // varchar(100)

    #region Associations

    /// <summary>
    /// FK_ALTURA_ESTRUCTURA_BackReference
    /// </summary>
    [Association(ThisKey = "IdAlturaNivelEstructura", OtherKey = "AlturaNivel", CanBeNull = true, Relationship = LinqToDB.Mapping.Relationship.OneToMany, IsBackReference = true)]
    public IEnumerable<stpPsgr_EstructuraPresupuestaria> Alturaestructuras { get; set; }

    #endregion
  }

  [Table(Schema = "stpPsgr", Name = "FUENTE_FINANCIAMIENTO_X_ORGANISMO_FINANCIADOR")]
  public partial class stpPsgr_FuenteFinanciamientoXOrganismoFinanciador
  {
    [Column("idFuenteFinanciamiento"), Nullable] public int? IdFuenteFinanciamiento { get; set; } // int
    [Column("idOrganismoFinanciador"), Nullable] public int? IdOrganismoFinanciador { get; set; } // int

    #region Associations

    /// <summary>
    /// FK_FUENTE_X_ORGANISMO
    /// </summary>
    [Association(ThisKey = "IdFuenteFinanciamiento", OtherKey = "IdFuenteFinanciamiento", CanBeNull = true, Relationship = LinqToDB.Mapping.Relationship.ManyToOne, KeyName = "FK_FUENTE_X_ORGANISMO", BackReferenceName = "Fuentexorganismoes")]
    public stpPsgr_FuenteFinanciamiento FUENTEXORGANISMO { get; set; }

    /// <summary>
    /// FK_ORGANISMO_X_FUENTE
    /// </summary>
    [Association(ThisKey = "IdOrganismoFinanciador", OtherKey = "IdOrganismoFinanciador", CanBeNull = true, Relationship = LinqToDB.Mapping.Relationship.ManyToOne, KeyName = "FK_ORGANISMO_X_FUENTE", BackReferenceName = "Organismoxfuentes")]
    public stpPsgr_OrganismoFinanciador ORGANISMOXFUENTE { get; set; }

    #endregion
  }

  [Table(Schema = "stpPsgr", Name = "ORGANISMO_FINANCIADOR")]
  public partial class stpPsgr_OrganismoFinanciador
  {
    [Column("idOrganismoFinanciador"), PrimaryKey, Identity] public int IdOrganismoFinanciador { get; set; } // int
    [Column("nombre"), Nullable] public string Nombre { get; set; } // varchar(255)
    [Column("descripcion"), Nullable] public string Descripcion { get; set; } // varchar(255)
    [Column("año"), Nullable] public int? Año { get; set; } // int
    [Column("fechaCreacion"), Nullable] public DateTime? FechaCreacion { get; set; } // datetime
    [Column("fechaModificacion"), Nullable] public DateTime? FechaModificacion { get; set; } // datetime
    [Column("usuarioResponsable"), Nullable] public string UsuarioResponsable { get; set; } // varchar(255)

    #region Associations

    /// <summary>
    /// FK_ORGANISMO_X_FUENTE_BackReference
    /// </summary>
    [Association(ThisKey = "IdOrganismoFinanciador", OtherKey = "IdOrganismoFinanciador", CanBeNull = true, Relationship = LinqToDB.Mapping.Relationship.OneToMany, IsBackReference = true)]
    public IEnumerable<stpPsgr_FuenteFinanciamientoXOrganismoFinanciador> Organismoxfuentes { get; set; }

    #endregion
  }



  [Table(Schema = "stpPsgr", Name = "INDICADOR")]
  public partial class stpPsgr_INDICADOR
  {
    [Column("idIndicador"), PrimaryKey, Identity] public int IdIndicador { get; set; } // int
    [Column("idTipoIndicador"), Nullable] public int? IdTipoIndicador { get; set; } // int
    [Column("idFuenteOrigen"), Nullable] public int? IdFuenteOrigen { get; set; } // int
    [Column("idEntidadPresupuestaria"), Nullable] public int? IdEntidadPresupuestaria { get; set; } // int
    [Column("codIndicador"), Nullable] public int? CodIndicador { get; set; } // int
    [Column("nombre"), Nullable] public string Nombre { get; set; } // varchar(255)
    [Column("descripcion"), Nullable] public string Descripcion { get; set; } // varchar(255)
    [Column("año"), Nullable] public int? Año { get; set; } // int
    [Column("frecuenciaMeses"), Nullable] public int? FrecuenciaMeses { get; set; } // int
    [Column("observaciones"), Nullable] public string Observaciones { get; set; } // varchar(255)
    [Column("metodoDeCalculo"), Nullable] public string MetodoDeCalculo { get; set; } // varchar(255)
    [Column("evaluacionHeci"), Nullable] public string EvaluacionHeci { get; set; } // varchar(255)
    [Column("fechaCreacion"), Nullable] public DateTime? FechaCreacion { get; set; } // datetime
    [Column("fechaModificacion"), Nullable] public DateTime? FechaModificacion { get; set; } // datetime
    [Column("usuarioResponsable"), Nullable] public string UsuarioResponsable { get; set; } // varchar(255)

    #region Associations

    /// <summary>
    /// FK_AVANCE_F_FK_INDICA_INDICADO_BackReference
    /// </summary>
    [Association(ThisKey = "IdIndicador", OtherKey = "IdIndicador", CanBeNull = true, Relationship = LinqToDB.Mapping.Relationship.OneToMany, IsBackReference = true)]
    public IEnumerable<stpPsgr_AvanceFisico> Avanceffkindicaindicadoes { get; set; }

    /// <summary>
    /// FK_INDICADO_FK_ENTIDA_ESTRUCTU
    /// </summary>
    [Association(ThisKey = "IdEntidadPresupuestaria", OtherKey = "IdEstructuraPresupuestaria", CanBeNull = true, Relationship = LinqToDB.Mapping.Relationship.ManyToOne, KeyName = "FK_INDICADO_FK_ENTIDA_ESTRUCTU", BackReferenceName = "Indicadofkentidaestructus")]
    public stpPsgr_EstructuraPresupuestaria INDICADOFKENTIDAESTRUCTU { get; set; }

    /// <summary>
    /// FK_INDICADO_FK_FUENTE_FUENTE_O
    /// </summary>
    [Association(ThisKey = "IdFuenteOrigen", OtherKey = "IdFuenteOrigen", CanBeNull = true, Relationship = LinqToDB.Mapping.Relationship.ManyToOne, KeyName = "FK_INDICADO_FK_FUENTE_FUENTE_O", BackReferenceName = "Indicadofkfuentefuenteos")]
    public stpPsgr_FuenteOrigen INDICADOFKFUENTEFUENTEO { get; set; }

    /// <summary>
    /// FK_INDICADO_FK_TIPO_I_TIPO_IND
    /// </summary>
    [Association(ThisKey = "IdTipoIndicador", OtherKey = "IdTipoIndicador", CanBeNull = true, Relationship = LinqToDB.Mapping.Relationship.ManyToOne, KeyName = "FK_INDICADO_FK_TIPO_I_TIPO_IND", BackReferenceName = "Indicadofktipoitipoinds")]
    public stpPsgr_TipoIndicador INDICADOFKTIPOITIPOIND { get; set; }

    /// <summary>
    /// FK_INDICADOR_META_BackReference
    /// </summary>
    [Association(ThisKey = "IdIndicador", OtherKey = "IdIndicador", CanBeNull = true, Relationship = LinqToDB.Mapping.Relationship.OneToMany, IsBackReference = true)]
    public IEnumerable<stpPsgr_MetaIndicador> Metas { get; set; }

    /// <summary>
    /// FK_INDICADOR_PLANES_BackReference
    /// </summary>
    [Association(ThisKey = "IdIndicador", OtherKey = "IdIndicador", CanBeNull = true, Relationship = LinqToDB.Mapping.Relationship.OneToMany, IsBackReference = true)]
    public IEnumerable<stpPsgr_PLANE> PLANES { get; set; }

    /// <summary>
    /// FK_RESULTAD_FK_INDICA_INDICADO_BackReference
    /// </summary>
    [Association(ThisKey = "IdIndicador", OtherKey = "IdIndicador", CanBeNull = true, Relationship = LinqToDB.Mapping.Relationship.OneToMany, IsBackReference = true)]
    public IEnumerable<stpPsgr_ResultadoInmediato> Resultadfkindicaindicadoes { get; set; }

    #endregion
  }

  [Table(Schema = "stpPsgr", Name = "FUENTE_ORIGEN")]
  public partial class stpPsgr_FuenteOrigen
  {
    [Column("idFuenteOrigen"), PrimaryKey, Identity] public int IdFuenteOrigen { get; set; } // int
    [Column("nombre"), Nullable] public string Nombre { get; set; } // varchar(255)
    [Column("descripcion"), Nullable] public string Descripcion { get; set; } // varchar(255)
    [Column("año"), Nullable] public int? Año { get; set; } // int

    #region Associations

    /// <summary>
    /// FK_ACTIVIDA_FK_FUENTE_FUENTE_O_BackReference
    /// </summary>
    [Association(ThisKey = "IdFuenteOrigen", OtherKey = "IdFuenteOrigen", CanBeNull = true, Relationship = LinqToDB.Mapping.Relationship.OneToMany, IsBackReference = true)]
    public IEnumerable<stpPsgr_ActividadObra> Actividafkfuentefuenteos { get; set; }

    /// <summary>
    /// FK_INDICADO_FK_FUENTE_FUENTE_O_BackReference
    /// </summary>
    [Association(ThisKey = "IdFuenteOrigen", OtherKey = "IdFuenteOrigen", CanBeNull = true, Relationship = LinqToDB.Mapping.Relationship.OneToMany, IsBackReference = true)]
    public IEnumerable<stpPsgr_INDICADOR> Indicadofkfuentefuenteos { get; set; }

    #endregion
  }


  [Table(Schema = "stpPsgr", Name = "AVANCE_FISICO")]
  public partial class stpPsgr_AvanceFisico
  {
    [Column("idAvanceFisico"), PrimaryKey, Identity] public int IdAvanceFisico { get; set; } // int
    [Column("idActividadObra"), Nullable] public int? IdActividadObra { get; set; } // int
    [Column("idIndicador"), Nullable] public int? IdIndicador { get; set; } // int
    [Column("año"), Nullable] public int? Año { get; set; } // int
    [Column("mes"), Nullable] public int? Mes { get; set; } // int
    [Column("meta"), Nullable] public decimal? Meta { get; set; } // numeric(3, 1)
    [Column("avance"), Nullable] public decimal? Avance { get; set; } // numeric(3, 1)
    [Column("fechaCreacion"), Nullable] public DateTime? FechaCreacion { get; set; } // datetime
    [Column("fechaActualizacion"), Nullable] public DateTime? FechaActualizacion { get; set; } // datetime
    [Column("usuarioResponasble"), Nullable] public string UsuarioResponasble { get; set; } // varchar(255)

    #region Associations

    /// <summary>
    /// FK_AVANCE_F_FK_ACTIVI_ACTIVIDA
    /// </summary>
    [Association(ThisKey = "IdActividadObra", OtherKey = "IdActividadObra", CanBeNull = true, Relationship = LinqToDB.Mapping.Relationship.ManyToOne, KeyName = "FK_AVANCE_F_FK_ACTIVI_ACTIVIDA", BackReferenceName = "Avanceffkactiviactividas")]
    public stpPsgr_ActividadObra AVANCEFFKACTIVIACTIVIDA { get; set; }

    /// <summary>
    /// FK_AVANCE_F_FK_INDICA_INDICADO
    /// </summary>
    [Association(ThisKey = "IdIndicador", OtherKey = "IdIndicador", CanBeNull = true, Relationship = LinqToDB.Mapping.Relationship.ManyToOne, KeyName = "FK_AVANCE_F_FK_INDICA_INDICADO", BackReferenceName = "Avanceffkindicaindicadoes")]
    public stpPsgr_INDICADOR AVANCEFFKINDICAINDICADO { get; set; }

    #endregion
  }

  [Table(Schema = "stpPsgr", Name = "META_INDICADOR")]
  public partial class stpPsgr_MetaIndicador
  {
    [Column("idMetaIndicador"), PrimaryKey, Identity] public int IdMetaIndicador { get; set; } // int
    [Column("idIndicador"), Nullable] public int? IdIndicador { get; set; } // int
    [Column("codMeta"), Nullable] public int? CodMeta { get; set; } // int
    [Column("cantidad"), Nullable] public decimal? Cantidad { get; set; } // numeric(15, 2)
    [Column("fechaVencimiento"), Nullable] public DateTime? FechaVencimiento { get; set; } // datetime
    [Column("ano"), Nullable] public int? Ano { get; set; } // int
    [Column("fechaCreacion"), Nullable] public DateTime? FechaCreacion { get; set; } // datetime
    [Column("fechaActualizacion"), Nullable] public DateTime? FechaActualizacion { get; set; } // datetime
    [Column("usuarioResponasble"), Nullable] public string UsuarioResponasble { get; set; } // varchar(255)

    #region Associations

    /// <summary>
    /// FK_INDICADOR_META
    /// </summary>
    [Association(ThisKey = "IdIndicador", OtherKey = "IdIndicador", CanBeNull = true, Relationship = LinqToDB.Mapping.Relationship.ManyToOne, KeyName = "FK_INDICADOR_META", BackReferenceName = "Metas")]
    public stpPsgr_INDICADOR INDICADORMETA { get; set; }

    #endregion
  }


  [Table(Schema = "stpPsgr", Name = "PLANES")]
  public partial class stpPsgr_PLANE
  {
    [Column("idPlan"), PrimaryKey, Identity] public int IdPlan { get; set; } // int
    [Column("idPadre"), Nullable] public int? IdPadre { get; set; } // int
    [Column("idPadre2"), Nullable] public int? IdPadre2 { get; set; } // int
    [Column("alturaNivel"), Nullable] public int? AlturaNivel { get; set; } // int
    [Column("idIndicador"), Nullable] public int? IdIndicador { get; set; } // int
    [Column("codigoEstructura"), Nullable] public int? CodigoEstructura { get; set; } // int
    [Column("nombre"), Nullable] public string Nombre { get; set; } // varchar(255)
    [Column("descripcion"), Nullable] public string Descripcion { get; set; } // varchar(255)
    [Column("detalle"), Nullable] public string Detalle { get; set; } // varchar(255)
    [Column("año"), Nullable] public int? Año { get; set; } // int
    [Column("fechaInicio"), Nullable] public DateTime? FechaInicio { get; set; } // datetime
    [Column("fechaFin"), Nullable] public DateTime? FechaFin { get; set; } // datetime
    [Column("fechaCreacion"), Nullable] public DateTime? FechaCreacion { get; set; } // datetime
    [Column("fechaActualizacion"), Nullable] public DateTime? FechaActualizacion { get; set; } // datetime
    [Column("usuarioResponasble"), Nullable] public string UsuarioResponasble { get; set; } // varchar(255)

    #region Associations

    /// <summary>
    /// FK_PLANES_ALTURA
    /// </summary>
    [Association(ThisKey = "AlturaNivel", OtherKey = "IdAlturaNivelPlanes", CanBeNull = true, Relationship = LinqToDB.Mapping.Relationship.ManyToOne, KeyName = "FK_PLANES_ALTURA", BackReferenceName = "Planesalturas")]
    public stpPsgr_AlturaNivelPlane ALTURA { get; set; }

    /// <summary>
    /// FK_PLANES_PADRE2
    /// </summary>
    [Association(ThisKey = "IdPadre2", OtherKey = "IdPlan", CanBeNull = true, Relationship = LinqToDB.Mapping.Relationship.ManyToOne, KeyName = "FK_PLANES_PADRE2", BackReferenceName = "FkPlanesPADRE2BackReferences")]
    public stpPsgr_PLANE FkPlanesPADRE2 { get; set; }

    /// <summary>
    /// FK_PLANES_PADRE2_BackReference
    /// </summary>
    [Association(ThisKey = "IdPlan", OtherKey = "IdPadre2", CanBeNull = true, Relationship = LinqToDB.Mapping.Relationship.OneToMany, IsBackReference = true)]
    public IEnumerable<stpPsgr_PLANE> FkPlanesPADRE2BackReferences { get; set; }

    /// <summary>
    /// FK_PLANES_PADRE_BackReference
    /// </summary>
    [Association(ThisKey = "IdPlan", OtherKey = "IdPadre", CanBeNull = true, Relationship = LinqToDB.Mapping.Relationship.OneToMany, IsBackReference = true)]
    public IEnumerable<stpPsgr_PLANE> FkPlanesPadreBackReferences { get; set; }

    /// <summary>
    /// FK_INDICADOR_PLANES
    /// </summary>
    [Association(ThisKey = "IdIndicador", OtherKey = "IdIndicador", CanBeNull = true, Relationship = LinqToDB.Mapping.Relationship.ManyToOne, KeyName = "FK_INDICADOR_PLANES", BackReferenceName = "PLANES")]
    public stpPsgr_INDICADOR INDICADOR { get; set; }

    /// <summary>
    /// FK_PLANES_PADRE
    /// </summary>
    [Association(ThisKey = "IdPadre", OtherKey = "IdPlan", CanBeNull = true, Relationship = LinqToDB.Mapping.Relationship.ManyToOne, KeyName = "FK_PLANES_PADRE", BackReferenceName = "FkPlanesPadreBackReferences")]
    public stpPsgr_PLANE PADRE { get; set; }

    /// <summary>
    /// FK_PLANES_X_FK_OBJ_ES_PLANES_BackReference
    /// </summary>
    [Association(ThisKey = "IdPlan", OtherKey = "IdPlan", CanBeNull = true, Relationship = LinqToDB.Mapping.Relationship.OneToMany, IsBackReference = true)]
    public IEnumerable<stpPsgr_PlanesXProyecto> XFKOBJES { get; set; }

    #endregion
  }

  [Table(Schema = "stpPsgr", Name = "ALTURA_NIVEL_PLANES")]
  public partial class stpPsgr_AlturaNivelPlane
  {
    [Column("idAlturaNivelPlanes"), PrimaryKey, NotNull] public int IdAlturaNivelPlanes { get; set; } // int
    [Column("nombre"), Nullable] public string Nombre { get; set; } // varchar(100)

    #region Associations

    /// <summary>
    /// FK_PLANES_ALTURA_BackReference
    /// </summary>
    [Association(ThisKey = "IdAlturaNivelPlanes", OtherKey = "AlturaNivel", CanBeNull = true, Relationship = LinqToDB.Mapping.Relationship.OneToMany, IsBackReference = true)]
    public IEnumerable<stpPsgr_PLANE> Planesalturas { get; set; }

    #endregion
  }


  [Table(Schema = "stpPsgr", Name = "RESULTADO_INMEDIATO")]
  public partial class stpPsgr_ResultadoInmediato
  {
    [Column("idResultadoInmediato"), PrimaryKey, Identity] public int IdResultadoInmediato { get; set; } // int
    [Column("idIndicador"), Nullable] public int? IdIndicador { get; set; } // int
    [Column("idActividadObra"), Nullable] public int? IdActividadObra { get; set; } // int
    [Column("nombre"), Nullable] public string Nombre { get; set; } // varchar(255)
    [Column("descripcion"), Nullable] public string Descripcion { get; set; } // varchar(255)
    [Column("fechaCreacion"), Nullable] public DateTime? FechaCreacion { get; set; } // datetime
    [Column("fechaActualizacion"), Nullable] public DateTime? FechaActualizacion { get; set; } // datetime
    [Column("usuarioResponasble"), Nullable] public string UsuarioResponasble { get; set; } // varchar(255)

    #region Associations

    /// <summary>
    /// FK_RESULTAD_FK_INDICA_INDICADO
    /// </summary>
    [Association(ThisKey = "IdIndicador", OtherKey = "IdIndicador", CanBeNull = true, Relationship = LinqToDB.Mapping.Relationship.ManyToOne, KeyName = "FK_RESULTAD_FK_INDICA_INDICADO", BackReferenceName = "Resultadfkindicaindicadoes")]
    public stpPsgr_INDICADOR RESULTADFKINDICAINDICADO { get; set; }

    /// <summary>
    /// FK_RESULTAD_FK_RESULT_ACTIVIDA
    /// </summary>
    [Association(ThisKey = "IdActividadObra", OtherKey = "IdActividadObra", CanBeNull = true, Relationship = LinqToDB.Mapping.Relationship.ManyToOne, KeyName = "FK_RESULTAD_FK_RESULT_ACTIVIDA", BackReferenceName = "Resultadfkresultactividas")]
    public stpPsgr_ActividadObra RESULTADFKRESULTACTIVIDA { get; set; }

    #endregion
  }

  [Table(Schema = "stpPsgr", Name = "ACTIVIDAD_OBRA")]
  public partial class stpPsgr_ActividadObra
  {
    [Column("idActividadObra"), PrimaryKey, Identity] public int IdActividadObra { get; set; } // int
    [Column("idProyectoActividad"), Nullable] public int? IdProyectoActividad { get; set; } // int
    [Column("idFuenteOrigen"), Nullable] public int? IdFuenteOrigen { get; set; } // int
    [Column("codActividad"), Nullable] public int? CodActividad { get; set; } // int
    [Column("nombre"), Nullable] public string Nombre { get; set; } // varchar(255)
    [Column("descripcion"), Nullable] public string Descripcion { get; set; } // varchar(255)
    [Column("año"), Nullable] public int? Año { get; set; } // int
    [Column("categoria"), Nullable] public string Categoria { get; set; } // varchar(255)
    [Column("version"), Nullable] public int? Version { get; set; } // int
    [Column("fechaCreacion"), Nullable] public DateTime? FechaCreacion { get; set; } // datetime
    [Column("fechaModificacion"), Nullable] public DateTime? FechaModificacion { get; set; } // datetime
    [Column("usuarioResponsable"), Nullable] public string UsuarioResponsable { get; set; } // varchar(255)

    #region Associations

    /// <summary>
    /// FK_ACTIVIDA_FK_FUENTE_FUENTE_O
    /// </summary>
    [Association(ThisKey = "IdFuenteOrigen", OtherKey = "IdFuenteOrigen", CanBeNull = true, Relationship = LinqToDB.Mapping.Relationship.ManyToOne, KeyName = "FK_ACTIVIDA_FK_FUENTE_FUENTE_O", BackReferenceName = "Actividafkfuentefuenteos")]
    public stpPsgr_FuenteOrigen ACTIVIDAFKFUENTEFUENTEO { get; set; }

    /// <summary>
    /// FK_ACTIVIDA_FK_PROYEC_PROYECTO
    /// </summary>
    [Association(ThisKey = "IdProyectoActividad", OtherKey = "IdProyectoActividad", CanBeNull = true, Relationship = LinqToDB.Mapping.Relationship.ManyToOne, KeyName = "FK_ACTIVIDA_FK_PROYEC_PROYECTO", BackReferenceName = "Actividafkproyecproyectoes")]
    public stpPsgr_ProyectoActividad ACTIVIDAFKPROYECPROYECTO { get; set; }

    /// <summary>
    /// FK_ASIGNACI_FK_ACTIVI_ACTIVIDA_BackReference
    /// </summary>
    [Association(ThisKey = "IdActividadObra", OtherKey = "IdActividadObra", CanBeNull = true, Relationship = LinqToDB.Mapping.Relationship.OneToMany, IsBackReference = true)]
    public IEnumerable<stpPsgr_AsignacionAvanceFinanciero> Asignacifkactiviactividas { get; set; }

    /// <summary>
    /// FK_AVANCE_F_FK_ACTIVI_ACTIVIDA_BackReference
    /// </summary>
    [Association(ThisKey = "IdActividadObra", OtherKey = "IdActividadObra", CanBeNull = true, Relationship = LinqToDB.Mapping.Relationship.OneToMany, IsBackReference = true)]
    public IEnumerable<stpPsgr_AvanceFisico> Avanceffkactiviactividas { get; set; }

    /// <summary>
    /// FK_CATALOGO_FK_ACTIVI_ACTIVIDA_BackReference
    /// </summary>
    [Association(ThisKey = "IdActividadObra", OtherKey = "IdActividadObra", CanBeNull = true, Relationship = LinqToDB.Mapping.Relationship.OneToMany, IsBackReference = true)]
    public IEnumerable<stpPsgr_CatalogoBeneficiario> Catalogofkactiviactividas { get; set; }

    /// <summary>
    /// FK_RESULTAD_FK_RESULT_ACTIVIDA_BackReference
    /// </summary>
    [Association(ThisKey = "IdActividadObra", OtherKey = "IdActividadObra", CanBeNull = true, Relationship = LinqToDB.Mapping.Relationship.OneToMany, IsBackReference = true)]
    public IEnumerable<stpPsgr_ResultadoInmediato> Resultadfkresultactividas { get; set; }

    #endregion
  }

  [Table(Schema = "stpPsgr", Name = "CATALOGO_BENEFICIARIO")]
  public partial class stpPsgr_CatalogoBeneficiario
  {
    [Column("idCatalogoBeneficiario"), PrimaryKey, Identity] public int IdCatalogoBeneficiario { get; set; } // int
    [Column("idActividadObra"), Nullable] public int? IdActividadObra { get; set; } // int
    [Column("idObjetoGasto"), Nullable] public int? IdObjetoGasto { get; set; } // int
    [Column("idTipoCatalogoBeneficiario"), Nullable] public int? IdTipoCatalogoBeneficiario { get; set; } // int
    [Column("nombre"), Nullable] public string Nombre { get; set; } // varchar(255)
    [Column("descripcion"), Nullable] public string Descripcion { get; set; } // varchar(255)
    [Column("fechaCreacion"), Nullable] public DateTime? FechaCreacion { get; set; } // datetime
    [Column("fechaActualizacion"), Nullable] public DateTime? FechaActualizacion { get; set; } // datetime
    [Column("usuarioResponasble"), Nullable] public string UsuarioResponasble { get; set; } // varchar(255)

    #region Associations

    /// <summary>
    /// FK_CATALOGO_FK_ACTIVI_ACTIVIDA
    /// </summary>
    [Association(ThisKey = "IdActividadObra", OtherKey = "IdActividadObra", CanBeNull = true, Relationship = LinqToDB.Mapping.Relationship.ManyToOne, KeyName = "FK_CATALOGO_FK_ACTIVI_ACTIVIDA", BackReferenceName = "Catalogofkactiviactividas")]
    public stpPsgr_ActividadObra CATALOGOFKACTIVIACTIVIDA { get; set; }

    /// <summary>
    /// FK_CATALOGO_FK_OBJETO_OBJETO_G
    /// </summary>
    [Association(ThisKey = "IdObjetoGasto", OtherKey = "IdObjetoGasto", CanBeNull = true, Relationship = LinqToDB.Mapping.Relationship.ManyToOne, KeyName = "FK_CATALOGO_FK_OBJETO_OBJETO_G", BackReferenceName = "Catalogofkobjetoobjetogs")]
    public stpPsgr_ObjetoGasto CATALOGOFKOBJETOOBJETOG { get; set; }

    /// <summary>
    /// FK_CATALOGO_FK_TIPO_C_TIPO_CAT
    /// </summary>
    [Association(ThisKey = "IdTipoCatalogoBeneficiario", OtherKey = "IdTipoCatalogoBeneficiario", CanBeNull = true, Relationship = LinqToDB.Mapping.Relationship.ManyToOne, KeyName = "FK_CATALOGO_FK_TIPO_C_TIPO_CAT", BackReferenceName = "Catalogofktipoctipocats")]
    public stpPsgr_TipoCatalogoBeneficiario CATALOGOFKTIPOCTIPOCAT { get; set; }

    #endregion
  }

    [Table(Schema = "consulta", Name = "CatalogoEntidades")]
    public partial class consulta_CatalogoEntidade
    {
        [Column("codNivelEntidad"), Nullable] public string CodNivelEntidad { get; set; } // varchar(47)
        [Column("nombreEntidad"), Nullable] public string NombreEntidad { get; set; } // varchar(255)
        [Column("siglaEntidad"), Nullable] public string SiglaEntidad { get; set; } // varchar(255)
        [Column(), Nullable] public string URL { get; set; } // varchar(60)
        [Column("mision"), Nullable] public string Mision { get; set; } // varchar(1000)
        [Column("vision"), Nullable] public string Vision { get; set; } // varchar(1000)
        [Column("nombreNivel"), Nullable] public string NombreNivel { get; set; } // varchar(255)
        [Column("numSector"), Nullable] public int? NumSector { get; set; } // int
        [Column("nombreSector"), Nullable] public string NombreSector { get; set; } // varchar(100)
        [Column("clasificacionSector"), Nullable] public string ClasificacionSector { get; set; } // varchar(100)
    }

    [Table(Schema = "stpPsgr", Name = "TIPO_CATALOGO_BENEFICIARIO")]
  public partial class stpPsgr_TipoCatalogoBeneficiario
  {
    [Column("idTipoCatalogoBeneficiario"), PrimaryKey, Identity] public int IdTipoCatalogoBeneficiario { get; set; } // int
    [Column("nombre"), Nullable] public string Nombre { get; set; } // varchar(255)
    [Column("descripcion"), Nullable] public string Descripcion { get; set; } // varchar(255)
    [Column("fechaCreacion"), Nullable] public DateTime? FechaCreacion { get; set; } // datetime
    [Column("fechaActualizacion"), Nullable] public DateTime? FechaActualizacion { get; set; } // datetime
    [Column("usuarioResponasble"), Nullable] public string UsuarioResponasble { get; set; } // varchar(255)

    #region Associations

    /// <summary>
    /// FK_CATALOGO_FK_TIPO_C_TIPO_CAT_BackReference
    /// </summary>
    [Association(ThisKey = "IdTipoCatalogoBeneficiario", OtherKey = "IdTipoCatalogoBeneficiario", CanBeNull = true, Relationship = LinqToDB.Mapping.Relationship.OneToMany, IsBackReference = true)]
    public IEnumerable<stpPsgr_CatalogoBeneficiario> Catalogofktipoctipocats { get; set; }

    #endregion
  }


  [Table(Schema = "stpPsgr", Name = "ASIGNACION_AVANCE_FINANCIERO")]
  public partial class stpPsgr_AsignacionAvanceFinanciero
  {
    [Column("idAsignacionFinanciera"), PrimaryKey, Identity] public int IdAsignacionFinanciera { get; set; } // int
    [Column("idFuenteFinanciamiento"), Nullable] public int? IdFuenteFinanciamiento { get; set; } // int
    [Column("idActividadObra"), Nullable] public int? IdActividadObra { get; set; } // int
    [Column("idRegion"), Nullable] public int? IdRegion { get; set; } // int
    [Column("idDepartamento"), Nullable] public int? IdDepartamento { get; set; } // int
    [Column("idDistrito"), Nullable] public int? IdDistrito { get; set; } // int
    [Column("idObjetoGasto"), Nullable] public int? IdObjetoGasto { get; set; } // int
    [Column("año"), Nullable] public int? Año { get; set; } // int
    [Column("mes"), Nullable] public int? Mes { get; set; } // int
    [Column("valorPlanificado"), Nullable] public decimal? ValorPlanificado { get; set; } // numeric(15, 2)
    [Column("valorEjecutado"), Nullable] public decimal? ValorEjecutado { get; set; } // numeric(15, 2)
    [Column("version"), Nullable] public int? Version { get; set; } // int
    [Column("fechaCreacion"), Nullable] public DateTime? FechaCreacion { get; set; } // datetime
    [Column("fechaActualizacion"), Nullable] public DateTime? FechaActualizacion { get; set; } // datetime
    [Column("usuarioResponasble"), Nullable] public string UsuarioResponasble { get; set; } // varchar(255)

    #region Associations

    /// <summary>
    /// FK_ASIGNACI_FK_ACTIVI_ACTIVIDA
    /// </summary>
    [Association(ThisKey = "IdActividadObra", OtherKey = "IdActividadObra", CanBeNull = true, Relationship = LinqToDB.Mapping.Relationship.ManyToOne, KeyName = "FK_ASIGNACI_FK_ACTIVI_ACTIVIDA", BackReferenceName = "Asignacifkactiviactividas")]
    public stpPsgr_ActividadObra ASIGNACIFKACTIVIACTIVIDA { get; set; }

    /// <summary>
    /// FK_ASIGNACI_FK_FUENTE_FUENTE_F
    /// </summary>
    [Association(ThisKey = "IdFuenteFinanciamiento", OtherKey = "IdFuenteFinanciamiento", CanBeNull = true, Relationship = LinqToDB.Mapping.Relationship.ManyToOne, KeyName = "FK_ASIGNACI_FK_FUENTE_FUENTE_F", BackReferenceName = "Asignacifkfuentefuentefs")]
    public stpPsgr_FuenteFinanciamiento ASIGNACIFKFUENTEFUENTEF { get; set; }

    /// <summary>
    /// FK_ASIGNACI_FK_LOCALI_LOCALIZA
    /// </summary>
    [Association(ThisKey = "IdRegion, IdDepartamento, IdDistrito", OtherKey = "IdRegion, IdDepartamento, IdDistrito", CanBeNull = true, Relationship = LinqToDB.Mapping.Relationship.ManyToOne, KeyName = "FK_ASIGNACI_FK_LOCALI_LOCALIZA", BackReferenceName = "Asignacifklocalilocalizas")]
    public stpPsgr_LOCALIZACION ASIGNACIFKLOCALILOCALIZA { get; set; }

    /// <summary>
    /// FK_OBJT_GASTO_ASIGNACION_FINAN
    /// </summary>
    [Association(ThisKey = "IdObjetoGasto", OtherKey = "IdObjetoGasto", CanBeNull = true, Relationship = LinqToDB.Mapping.Relationship.ManyToOne, KeyName = "FK_OBJT_GASTO_ASIGNACION_FINAN", BackReferenceName = "Objtgastoasignacionfinans")]
    public stpPsgr_ObjetoGasto OBJTGASTOASIGNACIONFINAN { get; set; }

    #endregion
  }

  [Table(Schema = "stpPsgr", Name = "OBJETO_GASTO")]
  public partial class stpPsgr_ObjetoGasto
  {
    [Column("idObjetoGasto"), PrimaryKey, Identity] public int IdObjetoGasto { get; set; } // int
    [Column("nombre"), Nullable] public string Nombre { get; set; } // varchar(255)
    [Column("nombreCorto"), Nullable] public string NombreCorto { get; set; } // varchar(255)
    [Column("descripcion"), Nullable] public string Descripcion { get; set; } // varchar(255)
    [Column("año"), Nullable] public int? Año { get; set; } // int
    [Column("gasto"), Nullable] public decimal? Gasto { get; set; } // numeric(15, 2)
    [Column("es_imputable"), Nullable] public short? EsImputable { get; set; } // smallint
    [Column("fechaCreacion"), Nullable] public DateTime? FechaCreacion { get; set; } // datetime
    [Column("fechaActualizacion"), Nullable] public DateTime? FechaActualizacion { get; set; } // datetime
    [Column("usuarioResponasble"), Nullable] public string UsuarioResponasble { get; set; } // varchar(255)

    #region Associations

    /// <summary>
    /// FK_CATALOGO_FK_OBJETO_OBJETO_G_BackReference
    /// </summary>
    [Association(ThisKey = "IdObjetoGasto", OtherKey = "IdObjetoGasto", CanBeNull = true, Relationship = LinqToDB.Mapping.Relationship.OneToMany, IsBackReference = true)]
    public IEnumerable<stpPsgr_CatalogoBeneficiario> Catalogofkobjetoobjetogs { get; set; }

    /// <summary>
    /// FK_OBJT_GASTO_ASIGNACION_FINAN_BackReference
    /// </summary>
    [Association(ThisKey = "IdObjetoGasto", OtherKey = "IdObjetoGasto", CanBeNull = true, Relationship = LinqToDB.Mapping.Relationship.OneToMany, IsBackReference = true)]
    public IEnumerable<stpPsgr_AsignacionAvanceFinanciero> Objtgastoasignacionfinans { get; set; }

    #endregion
  }

  [Table(Schema = "stpPsgr", Name = "FUENTE_FINANCIAMIENTO")]
  public partial class stpPsgr_FuenteFinanciamiento
  {
    [Column("idFuenteFinanciamiento"), PrimaryKey, Identity] public int IdFuenteFinanciamiento { get; set; } // int
    [Column("nombre"), Nullable] public string Nombre { get; set; } // varchar(255)
    [Column("descripcion"), Nullable] public string Descripcion { get; set; } // varchar(255)
    [Column("año"), Nullable] public int? Año { get; set; } // int
    [Column("fechaCreacion"), Nullable] public DateTime? FechaCreacion { get; set; } // datetime
    [Column("fechaModificacion"), Nullable] public DateTime? FechaModificacion { get; set; } // datetime
    [Column("usuarioResponsable"), Nullable] public string UsuarioResponsable { get; set; } // varchar(255)

    #region Associations

    /// <summary>
    /// FK_ASIGNACI_FK_FUENTE_FUENTE_F_BackReference
    /// </summary>
    [Association(ThisKey = "IdFuenteFinanciamiento", OtherKey = "IdFuenteFinanciamiento", CanBeNull = true, Relationship = LinqToDB.Mapping.Relationship.OneToMany, IsBackReference = true)]
    public IEnumerable<stpPsgr_AsignacionAvanceFinanciero> Asignacifkfuentefuentefs { get; set; }

    /// <summary>
    /// FK_ESTRUCTU_FK_FUENTE_FUENTE_F_BackReference
    /// </summary>
    [Association(ThisKey = "IdFuenteFinanciamiento", OtherKey = "IdFuenteFinanciamiento", CanBeNull = true, Relationship = LinqToDB.Mapping.Relationship.OneToMany, IsBackReference = true)]
    public IEnumerable<stpPsgr_EstructuraPresupuestaria> Estructufkfuentefuentefs { get; set; }

    /// <summary>
    /// FK_FUENTE_X_ORGANISMO_BackReference
    /// </summary>
    [Association(ThisKey = "IdFuenteFinanciamiento", OtherKey = "IdFuenteFinanciamiento", CanBeNull = true, Relationship = LinqToDB.Mapping.Relationship.OneToMany, IsBackReference = true)]
    public IEnumerable<stpPsgr_FuenteFinanciamientoXOrganismoFinanciador> Fuentexorganismoes { get; set; }

    #endregion
  }


  [Table(Schema = "stpPsgr", Name = "TIPO_INDICADOR")]
  public partial class stpPsgr_TipoIndicador
  {
    [Column("idTipoIndicador"), PrimaryKey, Identity] public int IdTipoIndicador { get; set; } // int
    [Column("nombre"), Nullable] public string Nombre { get; set; } // varchar(255)
    [Column("descripcion"), Nullable] public string Descripcion { get; set; } // varchar(255)
    [Column("fechaCreacion"), Nullable] public DateTime? FechaCreacion { get; set; } // datetime
    [Column("fechaActualizacion"), Nullable] public DateTime? FechaActualizacion { get; set; } // datetime
    [Column("usuarioResponasble"), Nullable] public string UsuarioResponasble { get; set; } // varchar(255)

    #region Associations

    /// <summary>
    /// FK_INDICADO_FK_TIPO_I_TIPO_IND_BackReference
    /// </summary>
    [Association(ThisKey = "IdTipoIndicador", OtherKey = "IdTipoIndicador", CanBeNull = true, Relationship = LinqToDB.Mapping.Relationship.OneToMany, IsBackReference = true)]
    public IEnumerable<stpPsgr_INDICADOR> Indicadofktipoitipoinds { get; set; }

    #endregion
  }


  [Table(Schema = "stpPsgr", Name = "PROYECTO_ACTIVIDAD")]
  public partial class stpPsgr_ProyectoActividad
  {
    [Column("idProyectoActividad"), PrimaryKey, Identity] public int IdProyectoActividad { get; set; } // int
    [Column("idUnidadResponsable"), Nullable] public int? IdUnidadResponsable { get; set; } // int
    [Column("idEntidadPresupuestaria"), Nullable] public int? IdEntidadPresupuestaria { get; set; } // int
    [Column("codProyecto"), Nullable] public int? CodProyecto { get; set; } // int
    [Column("nombre"), Nullable] public string Nombre { get; set; } // varchar(255)
    [Column("nombreCorto"), Nullable] public string NombreCorto { get; set; } // varchar(255)
    [Column("descripcion"), Nullable] public string Descripcion { get; set; } // varchar(255)
    [Column("año"), Nullable] public int? Año { get; set; } // int
    [Column("diagnostico"), Nullable] public string Diagnostico { get; set; } // varchar(255)
    [Column("resultadoEsperado"), Nullable] public string ResultadoEsperado { get; set; } // varchar(255)
    [Column("fechaCreacion"), Nullable] public DateTime? FechaCreacion { get; set; } // datetime
    [Column("fechaModificacion"), Nullable] public DateTime? FechaModificacion { get; set; } // datetime
    [Column("usuarioResponsable"), Nullable] public string UsuarioResponsable { get; set; } // varchar(255)

    #region Associations

    /// <summary>
    /// FK_ACTIVIDA_FK_PROYEC_PROYECTO_BackReference
    /// </summary>
    [Association(ThisKey = "IdProyectoActividad", OtherKey = "IdProyectoActividad", CanBeNull = true, Relationship = LinqToDB.Mapping.Relationship.OneToMany, IsBackReference = true)]
    public IEnumerable<stpPsgr_ActividadObra> Actividafkproyecproyectoes { get; set; }

    /// <summary>
    /// FK_PLANES_X_FK_PROYEC_PROYECTO_BackReference
    /// </summary>
    [Association(ThisKey = "IdProyectoActividad", OtherKey = "IdProyecto", CanBeNull = true, Relationship = LinqToDB.Mapping.Relationship.OneToMany, IsBackReference = true)]
    public IEnumerable<stpPsgr_PlanesXProyecto> Planesxfkproyecproyectoes { get; set; }

    /// <summary>
    /// FK_PROYECTO_FK_PROY_A_PROYECTO_BackReference
    /// </summary>
    [Association(ThisKey = "IdProyectoActividad", OtherKey = "IdProyectoActividad", CanBeNull = true, Relationship = LinqToDB.Mapping.Relationship.OneToMany, IsBackReference = true)]
    public IEnumerable<stpPsgr_ProyectoActividadXDistrito> Proyectofkproyaproyectoes { get; set; }

    /// <summary>
    /// FK_PROYECTO_FK_SUBPRO_ESTRUCTU
    /// </summary>
    [Association(ThisKey = "IdEntidadPresupuestaria", OtherKey = "IdEstructuraPresupuestaria", CanBeNull = true, Relationship = LinqToDB.Mapping.Relationship.ManyToOne, KeyName = "FK_PROYECTO_FK_SUBPRO_ESTRUCTU", BackReferenceName = "Proyectofksubproestructus")]
    public stpPsgr_EstructuraPresupuestaria PROYECTOFKSUBPROESTRUCTU { get; set; }

    /// <summary>
    /// FK_PROYECTO_FK_UNIDAD_UNIDAD_R
    /// </summary>
    [Association(ThisKey = "IdUnidadResponsable", OtherKey = "IdUnidadResponsable", CanBeNull = true, Relationship = LinqToDB.Mapping.Relationship.ManyToOne, KeyName = "FK_PROYECTO_FK_UNIDAD_UNIDAD_R", BackReferenceName = "Proyectofkunidadunidadrs")]
    public stpPsgr_UnidadResponsable PROYECTOFKUNIDADUNIDADR { get; set; }

    #endregion
  }
  [Table(Schema = "stpPsgr", Name = "PROYECTO_ACTIVIDAD_X_DISTRITO")]
  public partial class stpPsgr_ProyectoActividadXDistrito
  {
    [Column("idProyectoActividad"), Nullable] public int? IdProyectoActividad { get; set; } // int
    [Column("idRegion"), Nullable] public int? IdRegion { get; set; } // int
    [Column("idDepartamento"), Nullable] public int? IdDepartamento { get; set; } // int
    [Column("idDistrito"), Nullable] public int? IdDistrito { get; set; } // int

    #region Associations

    /// <summary>
    /// FK_PROYECTO_FK_DISTRI_LOCALIZA
    /// </summary>
    [Association(ThisKey = "IdRegion, IdDepartamento, IdDistrito", OtherKey = "IdRegion, IdDepartamento, IdDistrito", CanBeNull = true, Relationship = LinqToDB.Mapping.Relationship.ManyToOne, KeyName = "FK_PROYECTO_FK_DISTRI_LOCALIZA", BackReferenceName = "Proyectofkdistrilocalizas")]
    public stpPsgr_LOCALIZACION PROYECTOFKDISTRILOCALIZA { get; set; }

    /// <summary>
    /// FK_PROYECTO_FK_PROY_A_PROYECTO
    /// </summary>
    [Association(ThisKey = "IdProyectoActividad", OtherKey = "IdProyectoActividad", CanBeNull = true, Relationship = LinqToDB.Mapping.Relationship.ManyToOne, KeyName = "FK_PROYECTO_FK_PROY_A_PROYECTO", BackReferenceName = "Proyectofkproyaproyectoes")]
    public stpPsgr_ProyectoActividad PROYECTOFKPROYAPROYECTO { get; set; }

    #endregion
  }


  [Table(Schema = "stpPsgr", Name = "LOCALIZACION")]
  public partial class stpPsgr_LOCALIZACION
  {
    [Column("idRegion"), PrimaryKey(1), NotNull] public int IdRegion { get; set; } // int
    [Column("idDepartamento"), PrimaryKey(2), NotNull] public int IdDepartamento { get; set; } // int
    [Column("idDistrito"), PrimaryKey(3), NotNull] public int IdDistrito { get; set; } // int
    [Column("nombreRegion"), Nullable] public string NombreRegion { get; set; } // varchar(60)
    [Column("nombreCortoRegion"), Nullable] public string NombreCortoRegion { get; set; } // varchar(60)
    [Column("nombreDepartamento"), Nullable] public string NombreDepartamento { get; set; } // varchar(60)
    [Column("nombreCortoDepartamento"), Nullable] public string NombreCortoDepartamento { get; set; } // varchar(60)
    [Column("nombreDistrito"), Nullable] public string NombreDistrito { get; set; } // varchar(60)
    [Column("nombreCortoDistrito"), Nullable] public string NombreCortoDistrito { get; set; } // varchar(60)
    [Column("fechaCreacion"), Nullable] public DateTime? FechaCreacion { get; set; } // datetime
    [Column("fechaModificacion"), Nullable] public DateTime? FechaModificacion { get; set; } // datetime
    [Column("usuarioResponsable"), Nullable] public string UsuarioResponsable { get; set; } // varchar(255)

    #region Associations

    /// <summary>
    /// FK_ASIGNACI_FK_LOCALI_LOCALIZA_BackReference
    /// </summary>
    [Association(ThisKey = "IdRegion, IdDepartamento, IdDistrito", OtherKey = "IdRegion, IdDepartamento, IdDistrito", CanBeNull = true, Relationship = LinqToDB.Mapping.Relationship.OneToMany, IsBackReference = true)]
    public IEnumerable<stpPsgr_AsignacionAvanceFinanciero> Asignacifklocalilocalizas { get; set; }

    /// <summary>
    /// FK_PROYECTO_FK_DISTRI_LOCALIZA_BackReference
    /// </summary>
    [Association(ThisKey = "IdRegion, IdDepartamento, IdDistrito", OtherKey = "IdRegion, IdDepartamento, IdDistrito", CanBeNull = true, Relationship = LinqToDB.Mapping.Relationship.OneToMany, IsBackReference = true)]
    public IEnumerable<stpPsgr_ProyectoActividadXDistrito> Proyectofkdistrilocalizas { get; set; }

    #endregion
  }


  [Table(Schema = "stpPsgr", Name = "PLANES_X_PROYECTO")]
  public partial class stpPsgr_PlanesXProyecto
  {
    [Column("idProyecto"), Nullable] public int? IdProyecto { get; set; } // int
    [Column("idPlan"), Nullable] public int? IdPlan { get; set; } // int

    #region Associations

    /// <summary>
    /// FK_PLANES_X_FK_OBJ_ES_PLANES
    /// </summary>
    [Association(ThisKey = "IdPlan", OtherKey = "IdPlan", CanBeNull = true, Relationship = LinqToDB.Mapping.Relationship.ManyToOne, KeyName = "FK_PLANES_X_FK_OBJ_ES_PLANES", BackReferenceName = "XFKOBJES")]
    public stpPsgr_PLANE PLANESXFKOBJESPLANE { get; set; }

    /// <summary>
    /// FK_PLANES_X_FK_PROYEC_PROYECTO
    /// </summary>
    [Association(ThisKey = "IdProyecto", OtherKey = "IdProyectoActividad", CanBeNull = true, Relationship = LinqToDB.Mapping.Relationship.ManyToOne, KeyName = "FK_PLANES_X_FK_PROYEC_PROYECTO", BackReferenceName = "Planesxfkproyecproyectoes")]
    public stpPsgr_ProyectoActividad PLANESXFKPROYECPROYECTO { get; set; }

    #endregion
  }

  [Table(Schema = "stpPsgr", Name = "SECTOR")]
  public partial class stpPsgr_SECTOR
  {
    [Column("idSector"), PrimaryKey, Identity] public int IdSector { get; set; } // int
    [Column("numSector"), Nullable] public int? NumSector { get; set; } // int
    [Column("nombre"), Nullable] public string Nombre { get; set; } // varchar(100)
    [Column("clasificacion"), Nullable] public string Clasificacion { get; set; } // varchar(100)

    #region Associations

    /// <summary>
    /// FK_SECTOR_ESTRUCTURA_BackReference
    /// </summary>
    [Association(ThisKey = "IdSector", OtherKey = "IdSector", CanBeNull = true, Relationship = LinqToDB.Mapping.Relationship.OneToMany, IsBackReference = true)]
    public IEnumerable<stpPsgr_EstructuraPresupuestaria> Estructuras { get; set; }

    #endregion
  }

  [Table(Schema = "consulta", Name = "Vinculacion_IndicadoresPND_Presupuesto_x_Entidades_STPV2")]
  public partial class consulta_VinculacionIndicadoresPNDPresupuestoXEntidadesSTPV2
  {
    [Column("codEjeEstrategico"), Nullable] public int? CodEjeEstrategico { get; set; } // int
    [Column("nombreEjeEstrategico"), Nullable] public string NombreEjeEstrategico { get; set; } // varchar(255)
    [Column("codObjetivoEstrategico"), Nullable] public int? CodObjetivoEstrategico { get; set; } // int
    [Column("nombreObjetivoEstrategico"), Nullable] public string NombreObjetivoEstrategico { get; set; } // varchar(255)
    [Column("codObjetivoEspecifico"), Nullable] public int? CodObjetivoEspecifico { get; set; } // int
    [Column("nombreObjetivoEspecifico"), Nullable] public string NombreObjetivoEspecifico { get; set; } // varchar(255)
    [Column("codODS"), Nullable] public int? CodODS { get; set; } // int
    [Column("nombreODS"), Nullable] public string NombreODS { get; set; } // varchar(255)
    [Column("descripcionODS"), Nullable] public string DescripcionODS { get; set; } // varchar(255)
    [Column("indicador"), Nullable] public string Indicador { get; set; } // varchar(255)
    [Column("Unidad/Escala"), Nullable] public string UnidadEscala { get; set; } // varchar(255)
    [Column("añoBaseIndicador"), Nullable] public double? AñoBaseIndicador { get; set; } // float
    [Column("valorInidicador"), Nullable] public double? ValorInidicador { get; set; } // float
    [Column("Meta 2023"), Nullable] public double? Meta2023 { get; set; } // float
    [Column("Meta 2030"), Nullable] public double? Meta2030 { get; set; } // float
    [Column("entidadReporta"), Nullable] public string EntidadReporta { get; set; } // varchar(255)
    [Column("fuente"), Nullable] public string Fuente { get; set; } // varchar(255)
    [Column("entidad"), Nullable] public string Entidad { get; set; } // varchar(255)
    [Column("codNivelEntidad"), Nullable] public string CodNivelEntidad { get; set; } // varchar(5)
    [Column(), Nullable] public string IdNegocioProyecto { get; set; } // varchar(255)
    [Column("nombreProyecto"), Nullable] public string NombreProyecto { get; set; } // varchar(255)
    [Column("aportePorcentualAlObjetivo"), Nullable] public double? AportePorcentualAlObjetivo { get; set; } // float
    [Column("aportePresupuestalAlObjetivo"), Nullable] public double? AportePresupuestalAlObjetivo { get; set; } // float
    [Column(), NotNull] public int AnioPresupuesto { get; set; } // int
    [Column("version"), NotNull] public int Version { get; set; } // int
    [Column("descripcionEjeEstrategico"), Nullable] public string DescripcionEjeEstrategico { get; set; } // varchar(255)
    [Column("descripcionObjetivoEstrategico"), Nullable] public string DescripcionObjetivoEstrategico { get; set; } // varchar(255)
    [Column("avance"), Nullable] public double? Avance { get; set; } // float
  }

  [Table(Schema = "stp", Name = "Vinculacion_IndicadoresPND_Presupuesto_x_Entidades_STP")]
  public partial class stp_VinculacionIndicadoresPNDPresupuestoXEntidadesStp
  {
    [Column("codEjeEstrategico"), Nullable] public int? CodEjeEstrategico { get; set; } // int
    [Column("nombreEjeEstrategico"), Nullable] public string NombreEjeEstrategico { get; set; } // varchar(255)
    [Column("codObjetivoEstrategico"), Nullable] public int? CodObjetivoEstrategico { get; set; } // int
    [Column("nombreObjetivoEstrategico"), Nullable] public string NombreObjetivoEstrategico { get; set; } // varchar(255)
    [Column("codObjetivoEspecifico"), Nullable] public int? CodObjetivoEspecifico { get; set; } // int
    [Column("nombreObjetivoEspecifico"), Nullable] public string NombreObjetivoEspecifico { get; set; } // varchar(255)
    [Column("indicador"), Nullable] public string Indicador { get; set; } // varchar(255)
    [Column("Unidad/Escala"), Nullable] public string UnidadEscala { get; set; } // varchar(255)
    //[Column("codODS"), Nullable] public int? CodODS { get; set; } // big int
    //[Column("nombreODS"), Nullable] public string NombreODS { get; set; } // varchar(255)
    [Column("añoBaseIndicador"), Nullable] public double? AñoBaseIndicador { get; set; } // float
    [Column("valorInidicador"), Nullable] public double? ValorInidicador { get; set; } // float
    [Column("Meta 2023"), Nullable] public double? Meta2023 { get; set; } // float
    [Column("Meta 2030"), Nullable] public double? Meta2030 { get; set; } // float
    [Column("entidadReporta"), Nullable] public string EntidadReporta { get; set; } // varchar(255)
    [Column("fuente"), Nullable] public string Fuente { get; set; } // varchar(255)
    [Column("entidad"), Nullable] public string Entidad { get; set; } // varchar(255)
    [Column("codNivelEntidad"), Nullable] public string CodNivelEntidad { get; set; } // varchar(5)
    [Column(), Nullable] public string IdNegocioProyecto { get; set; } // varchar(255)
    [Column("nombreProyecto"), Nullable] public string NombreProyecto { get; set; } // varchar(255)
    [Column("aportePorcentualAlObjetivo"), Nullable] public double? AportePorcentualAlObjetivo { get; set; } // float
    [Column("aportePresupuestalAlObjetivo"), Nullable] public double? AportePresupuestalAlObjetivo { get; set; } // float
    [Column(), NotNull] public int AnioPresupuesto { get; set; } // int
    [Column("version"), NotNull] public int Version { get; set; } // int
  }


  [Table(Schema = "stp", Name = "Vinculacion_IndicadoresPND_x_Entidades_STP")]
  public partial class stp_VinculacionIndicadoresPNDXEntidadesStp
  {
    [Column("codEjeEstrategico"), Nullable] public int? CodEjeEstrategico { get; set; } // int
    [Column("nombreEjeEstrategico"), Nullable] public string NombreEjeEstrategico { get; set; } // varchar(255)
    [Column("descripcionEjeEstrategico"), Nullable] public string DescripcionEjeEstrategico { get; set; } // varchar(255)
    [Column("codObjetivoEstrategico"), Nullable] public int? CodObjetivoEstrategico { get; set; } // int
    [Column("nombreObjetivoEstrategico"), Nullable] public string NombreObjetivoEstrategico { get; set; } // varchar(255)
    [Column("descripcionObjetivoEstrategico"), Nullable] public string DescripcionObjetivoEstrategico { get; set; } // varchar(255)
    [Column("codObjetivoEspecifico"), Nullable] public int? CodObjetivoEspecifico { get; set; } // int
    [Column("nombreObjetivoEspecifico"), Nullable] public string NombreObjetivoEspecifico { get; set; } // varchar(255)
    [Column("indicador"), Nullable] public string Indicador { get; set; } // varchar(255)
    [Column("Unidad/Escala"), Nullable] public string UnidadEscala { get; set; } // varchar(255)
    [Column("añoBaseIndicador"), Nullable] public double? AñoBaseIndicador { get; set; } // float
    [Column("valorInidicador"), Nullable] public double? ValorInidicador { get; set; } // float
    [Column("Meta 2023"), Nullable] public double? Meta2023 { get; set; } // float
    [Column("Meta 2030"), Nullable] public double? Meta2030 { get; set; } // float
    [Column("avance"), Nullable] public double? Avance { get; set; } // float
    [Column("codNivelEntidad"), Nullable] public string CodNivelEntidad { get; set; } // varchar(255)
    [Column("nombreEntidad"), Nullable] public string NombreEntidad { get; set; } // varchar(255)
    [Column("fuente"), Nullable] public string Fuente { get; set; } // varchar(255)
  }


  [Table(Schema = "dbo", Name = "Actividad")]
	public partial class Actividad
	{
		[PrimaryKey, NotNull] public int IdActividad { get; set; } // int
		[Column, NotNull] public int IdProducto { get; set; } // int
		[Column, NotNull] public string DescripcionActividad { get; set; } // varchar(max)
		[Column, NotNull] public DateTime FechaUltimaModificacion { get; set; } // datetime
		[Column, NotNull] public int ConsecutivoCarga { get; set; } // int
		[Column, NotNull] public string Modificadopor { get; set; } // varchar(30)
		[Column, Nullable] public string CodigoActividad { get; set; } // varchar(10)

		#region Associations

		/// <summary>
		/// Fk_ActividadXProducto
		/// </summary>
		[Association(ThisKey = "IdProducto", OtherKey = "IdProducto", CanBeNull = false, Relationship = LinqToDB.Mapping.Relationship.ManyToOne, KeyName = "Fk_ActividadXProducto", BackReferenceName = "FkActividadXProductoes")]
		public Producto FkActividadXProducto { get; set; }

		#endregion
	}

	[Table(Schema = "dbo", Name = "Actor")]
	public partial class Actor
	{
		[PrimaryKey(1), NotNull] public string IdActor { get; set; } // varchar(100)
		[Column, NotNull] public string NombreActor { get; set; } // varchar(200)
		[PrimaryKey(2), NotNull] public int IDRol { get; set; } // int
		[Column, NotNull] public DateTime FechaUltimaModificacion { get; set; } // datetime
		[Column, NotNull] public int ConsecutivoCarga { get; set; } // int
		[Column, NotNull] public string ModificadoPor { get; set; } // varchar(30)

		#region Associations

		/// <summary>
		/// FK_ActorXProyecto_Actor_BackReference
		/// </summary>
		[Association(ThisKey = "IdActor, IDRol", OtherKey = "IDActor, IDRol", CanBeNull = true, Relationship = LinqToDB.Mapping.Relationship.OneToMany, IsBackReference = true)]
		public IEnumerable<ActorXProyecto> ActorXProyectos { get; set; }

		/// <summary>
		/// FK_ActorXRol
		/// </summary>
		[Association(ThisKey = "IDRol", OtherKey = "IdRol", CanBeNull = false, Relationship = LinqToDB.Mapping.Relationship.ManyToOne, KeyName = "FK_ActorXRol", BackReferenceName = "ActorXRols")]
		public Rol ActorXRol { get; set; }

		#endregion
	}

	[Table(Schema = "dbo", Name = "ActorXProyecto")]
	public partial class ActorXProyecto
	{
		[PrimaryKey(1), NotNull] public string IDActor { get; set; } // varchar(100)
		[PrimaryKey(2), NotNull] public int IDProyecto { get; set; } // int
		[Column, NotNull] public DateTime FechaUltimaModificacion { get; set; } // datetime
		[Column, NotNull] public int ConsecutivoCarga { get; set; } // int
		[Column, NotNull] public string ModificadoPor { get; set; } // varchar(30)
		[PrimaryKey(3), NotNull] public int IDRol { get; set; } // int

		#region Associations

		/// <summary>
		/// FK_ActorXProyecto_Actor
		/// </summary>
		[Association(ThisKey = "IDActor, IDRol", OtherKey = "IdActor, IDRol", CanBeNull = false, Relationship = LinqToDB.Mapping.Relationship.ManyToOne, KeyName = "FK_ActorXProyecto_Actor", BackReferenceName = "ActorXProyectoes")]
		public Actor Actor { get; set; }

		/// <summary>
		/// FK_ActorXProyecto_Proyecto
		/// </summary>
		[Association(ThisKey = "IDProyecto", OtherKey = "IdProyecto", CanBeNull = false, Relationship = LinqToDB.Mapping.Relationship.ManyToOne, KeyName = "FK_ActorXProyecto_Proyecto", BackReferenceName = "ActorXProyectoes")]
		public Proyecto Proyecto { get; set; }

		#endregion
	}

	[Table(Schema = "dbo", Name = "Adendas_X_Contrato")]
	public partial class AdendasXContrato
	{
		[Column("codigo_BPIN"), Nullable] public string CodigoBpin { get; set; } // varchar(50)
		[Column("Id_Contrato"), Nullable] public string IdContrato { get; set; } // varchar(50)
		[Column("Fecha_Adenda"), Nullable] public DateTime? FechaAdenda { get; set; } // datetime2(7)
		[Column(), Nullable] public string Descripcion { get; set; } // varchar(150)
		[Column("Id_Adenda"), Nullable] public string IdAdenda { get; set; } // varchar(50)
		[Column("Valor_Adenda"), Nullable] public long? ValorAdenda { get; set; } // bigint
		[Column("Moneda_Adenda"), Nullable] public string MonedaAdenda { get; set; } // varchar(10)
	}

	[Table(Schema = "dbo", Name = "Alertas")]
	public partial class Alerta
	{
		[PrimaryKey, NotNull] public string NombreAlerta { get; set; } // varchar(75)
		[Column, NotNull] public bool Habilitada { get; set; } // bit
	}

	[Table(Schema = "dbo", Name = "Asociacioncomentario")]
	public partial class Asociacioncomentario
	{
		[PrimaryKey, Identity] public int IdAsociacion { get; set; } // int
		[Column, NotNull] public string TipoAsociacion { get; set; } // varchar(100)
	}

	[Table(Schema = "dbo", Name = "Busqueda")]
	public partial class Busqueda
	{
		[Column, NotNull] public string Categoria { get; set; } // varchar(20)
		[Column, NotNull] public string Id { get; set; } // varchar(20)
		[Column, NotNull] public string Nombre { get; set; } // varchar(max)
	}

	[Table(Schema = "dbo", Name = "BusquedaCovid")]
	public partial class BusquedaCovid
	{
		[Column, NotNull] public string Categoria { get; set; } // varchar(20)
		[Column, NotNull] public string Id { get; set; } // varchar(20)
		[Column, NotNull] public string Nombre { get; set; } // varchar(max)
	}

	[Table(Schema = "dbo", Name = "CabeceraMunicipio")]
	public partial class CabeceraMunicipio
	{
		[Column, Nullable] public string DEPARTAMENTO { get; set; } // nvarchar(4000)
		[Column, NotNull] public string MUNICIPIO { get; set; } // nvarchar(4000)
		[Column, NotNull] public decimal Latitud { get; set; } // decimal(18, 10)
		[Column, NotNull] public decimal LONGITUD { get; set; } // decimal(18, 10)
		[PrimaryKey, NotNull] public string CodigoDane { get; set; } // varchar(10)
		[Column, Nullable] public SqlGeography PuntoUbicacion { get; set; } // geography

		#region Associations

		/// <summary>
		/// FK_CabeceraMunicipio_EnteTerritorial
		/// </summary>
		[Association(ThisKey = "CodigoDane", OtherKey = "IdMunicipio", CanBeNull = false, Relationship = LinqToDB.Mapping.Relationship.OneToOne, KeyName = "FK_CabeceraMunicipio_EnteTerritorial", BackReferenceName = "CabeceraMunicipio")]
		public EnteTerritorial EnteTerritorial { get; set; }

		#endregion
	}

	[Table(Schema = "dbo", Name = "CampoOProyecto")]
	public partial class CampoOProyecto
	{
		[PrimaryKey(1), NotNull] public string IdCampoOProyecto { get; set; } // nvarchar(50)
		/// <summary>
		/// Titulo Minero o Pozo Petrolifero
		/// </summary>
		[PrimaryKey(2), NotNull] public string IdTipoCampoOProyecto { get; set; } // nvarchar(50)
		[Column, NotNull] public string NombreCampoOProyecto { get; set; } // varchar(250)
		[Column, NotNull] public DateTime FechaUltimaModificacion { get; set; } // datetime
		[Column, NotNull] public int ConsecutivoCarga { get; set; } // int

		#region Associations

		/// <summary>
		/// FK_Liquidacion_CampoOProyecto_BackReference
		/// </summary>
		[Association(ThisKey = "IdCampoOProyecto, IdTipoCampoOProyecto", OtherKey = "IdCampoOProyecto, IdTipoCampoOProyecto", CanBeNull = true, Relationship = LinqToDB.Mapping.Relationship.OneToMany, IsBackReference = true)]
		public IEnumerable<Liquidacion> Liquidacions { get; set; }

		/// <summary>
		/// FK_Produccion_CampoOProyecto_BackReference
		/// </summary>
		[Association(ThisKey = "IdCampoOProyecto, IdTipoCampoOProyecto", OtherKey = "IdCampoOProyecto, IdTipoCampoOProyecto", CanBeNull = true, Relationship = LinqToDB.Mapping.Relationship.OneToMany, IsBackReference = true)]
		public IEnumerable<Produccion> Produccions { get; set; }

		/// <summary>
		/// FK_CampoOProyecto_TipoCampoOProyecto
		/// </summary>
		[Association(ThisKey = "IdTipoCampoOProyecto", OtherKey = "IdTipoCampoOProyecto", CanBeNull = false, Relationship = LinqToDB.Mapping.Relationship.ManyToOne, KeyName = "FK_CampoOProyecto_TipoCampoOProyecto", BackReferenceName = "CampoOProyectoes")]
		public TipoCampoOProyecto TipoCampoOProyecto { get; set; }

		#endregion
	}

	[Table(Schema = "dbo", Name = "CampoOProyectoFiscalizacion")]
	public partial class CampoOProyectoFiscalizacion
	{
		[PrimaryKey(1), NotNull] public string IdCampoOProyecto { get; set; } // nvarchar(50)
		/// <summary>
		/// Titulo Minero o Pozo Petrolifero
		/// </summary>
		[PrimaryKey(2), NotNull] public string IdTipoCampoOProyecto { get; set; } // nvarchar(50)
		[Column, NotNull] public string NombreCampoOProyecto { get; set; } // varchar(250)
		[Column, NotNull] public DateTime FechaUltimaModificacion { get; set; } // datetime
		[Column, NotNull] public int ConsecutivoCarga { get; set; } // int

		#region Associations

		/// <summary>
		/// FK_EstadoJuridicoCampoOProyecto_CampoOProyectoFiscalizacion_BackReference
		/// </summary>
		[Association(ThisKey = "IdCampoOProyecto, IdTipoCampoOProyecto", OtherKey = "IdCampoOProyecto, IdTipoCampoOProyecto", CanBeNull = true, Relationship = LinqToDB.Mapping.Relationship.OneToMany, IsBackReference = true)]
		public IEnumerable<EstadoJuridicoCampoOProyecto> EstadoJuridicoCampoOProyectos { get; set; }

		/// <summary>
		/// FK_EtapaCampoOProyecto_CampoOProyectoFiscalizacion_BackReference
		/// </summary>
		[Association(ThisKey = "IdCampoOProyecto, IdTipoCampoOProyecto", OtherKey = "IdCampoOProyecto, IdTipoCampoOProyecto", CanBeNull = true, Relationship = LinqToDB.Mapping.Relationship.OneToMany, IsBackReference = true)]
		public IEnumerable<EtapaCampoOProyecto> EtapaCampoOProyectos { get; set; }

		/// <summary>
		/// FK_Fiscalizacion_CampoOProyectoFiscalizacion_BackReference
		/// </summary>
		[Association(ThisKey = "IdCampoOProyecto, IdTipoCampoOProyecto", OtherKey = "IdCampoOProyecto, IdTipoCampoOProyecto", CanBeNull = true, Relationship = LinqToDB.Mapping.Relationship.OneToMany, IsBackReference = true)]
		public IEnumerable<Fiscalizacion> Fiscalizacions { get; set; }

		/// <summary>
		/// FK_CampoOProyectoFiscalizacion_TipoCampoOProyecto
		/// </summary>
		[Association(ThisKey = "IdTipoCampoOProyecto", OtherKey = "IdTipoCampoOProyecto", CanBeNull = false, Relationship = LinqToDB.Mapping.Relationship.ManyToOne, KeyName = "FK_CampoOProyectoFiscalizacion_TipoCampoOProyecto", BackReferenceName = "CampoOProyectoFiscalizacions")]
		public TipoCampoOProyecto TipoCampoOProyecto { get; set; }

		#endregion
	}

	[Table(Schema = "dbo", Name = "CatalogoOrganismoFinanciador", IsView = true)]
	public partial class CatalogoOrganismoFinanciador
	{
		[Column, NotNull] public string IdOrganismoFinanciador { get; set; } // varchar(30)
		[Column, NotNull] public string OrganismoFinanciador { get; set; } // varchar(200)
	}

	[Table(Schema = "dbo", Name = "Comentario")]
	public partial class Comentario
	{
		[Column(), PrimaryKey, Identity] public int IdComentario { get; set; } // int
		[Column(), Nullable] public int? IdAsociacion { get; set; } // int
		[Column(), NotNull] public int IdTipoComentario { get; set; } // int
		[Column(), Nullable] public int? IdPrograma { get; set; } // int
		[Column(), Nullable] public int? IdProyecto { get; set; } // int
		[Column(), Nullable] public int? CodEnteTerritorialBeneficiario { get; set; } // int
		[Column(), Nullable] public string IdDepartamento { get; set; } // varchar(10)
		[Column(), Nullable] public string IdMunicipio { get; set; } // varchar(10)
		[Column(), NotNull] public int IdUsuario { get; set; } // int
		[Column("fechaCreacion"), NotNull] public DateTime FechaCreacion { get; set; } // datetime
		[Column(), NotNull] public int IdEstado { get; set; } // int
		[Column(), Nullable] public string ComentarioOriginal { get; set; } // varchar(max)
		[Column(), Nullable] public string ComentarioModerado { get; set; } // varchar(max)
		[Column("fechaPublicacion"), Nullable] public DateTime? FechaPublicacion { get; set; } // datetime
		[Column(), Nullable] public int? IdTipoRespuesta { get; set; } // int
		[Column(), Nullable] public int? ComentarioRelacionado { get; set; } // int
		[Column(), Nullable] public bool? Anonimo { get; set; } // bit
		[Column(), Nullable] public string JustificacionParaNoPublicar { get; set; } // varchar(max)
		[Column("codigocontrato"), Nullable] public string Codigocontrato { get; set; } // varchar(30)

		#region Associations

		/// <summary>
		/// FK_Comentario_TipoComentario
		/// </summary>
		[Association(ThisKey = "IdTipoComentario", OtherKey = "Id", CanBeNull = false, Relationship = LinqToDB.Mapping.Relationship.ManyToOne, KeyName = "FK_Comentario_TipoComentario", BackReferenceName = "Comentarios")]
		public TipoComentario TipoComentario { get; set; }

		#endregion
	}

	[Table(Schema = "dbo", Name = "ContratistaContrato")]
	public partial class ContratistaContrato
	{
		[Column(), NotNull] public string OCID { get; set; } // varchar(30)
		[Column(), NotNull] public string AwardId { get; set; } // varchar(250)
		[Column(), Nullable] public string Estado { get; set; } // varchar(30)
		[Column(), Nullable] public long? Valor { get; set; } // bigint
		[Column(), Nullable] public string MonedaValor { get; set; } // varchar(5)
		[Column(), Nullable] public string Proveedor { get; set; } // varchar(250)
		[Column(), NotNull] public string CodigoProveedor { get; set; } // varchar(40)
		[Column(), Nullable] public DateTime? FechaModificacion { get; set; } // datetime
		[Column("esCovid"), Nullable] public int? EsCovid { get; set; } // int
	}

	[Table(Schema = "dbo", Name = "ContratistaContratoCancelados")]
	public partial class ContratistaContratoCancelado
	{
		[Column(), NotNull] public string OCID { get; set; } // varchar(30)
		[Column(), NotNull] public string AwardId { get; set; } // varchar(250)
		[Column(), Nullable] public string Estado { get; set; } // varchar(30)
		[Column(), Nullable] public long? Valor { get; set; } // bigint
		[Column(), Nullable] public string MonedaValor { get; set; } // varchar(5)
		[Column(), Nullable] public string Proveedor { get; set; } // varchar(250)
		[Column(), NotNull] public string CodigoProveedor { get; set; } // varchar(40)
		[Column(), Nullable] public DateTime? FechaModificacion { get; set; } // datetime
		[Column("esCovid"), Nullable] public int? EsCovid { get; set; } // int
	}

	[Table(Schema = "dbo", Name = "ContratistaContratoDetalle")]
	public partial class ContratistaContratoDetalle
	{
		[Column, NotNull] public string OCID { get; set; } // varchar(30)
		[Column, NotNull] public string AwardId { get; set; } // varchar(250)
		[Column, NotNull] public string ItemId { get; set; } // varchar(50)
		[Column, Nullable] public string Descripcion { get; set; } // varchar(250)
		[Column, Nullable] public string DescripcionId { get; set; } // varchar(50)
		[Column, Nullable] public long? Cantidad { get; set; } // bigint
		[Column, Nullable] public string UnidadNombre { get; set; } // varchar(50)
		[Column, Nullable] public string UnidadId { get; set; } // varchar(50)
		[Column, Nullable] public long? UnidadValor { get; set; } // bigint
		[Column, Nullable] public string UnidadMoneda { get; set; } // varchar(5)
	}

	[Table(Schema = "dbo", Name = "Contratos")]
	public partial class Contrato
	{
		[Column(), PrimaryKey, NotNull] public string CodigoContrato { get; set; } // varchar(30)
		[Column("awardID"), Nullable] public string AwardID { get; set; } // varchar(59)
		[Column(), Nullable] public string EstadoContrato { get; set; } // varchar(250)
		[Column(), Nullable] public string TipoContrato { get; set; } // varchar(250)
		[Column(), Nullable] public string DocumentoNombre { get; set; } // varchar(250)
		[Column(), Nullable] public long? ValorContrato { get; set; } // bigint
		[Column(), Nullable] public string MonedaContrato { get; set; } // varchar(5)
		[Column(), Nullable] public DateTime? FechaFirmaContrato { get; set; } // datetime2(7)
		[Column(), Nullable] public int? DuracionContrato { get; set; } // int
		[Column("codigo_BPIN"), Nullable] public string CodigoBpin { get; set; } // varchar(50)
		[Column(), NotNull] public DateTime FechaUltimaActualizacion { get; set; } // datetime
		[Column(), NotNull] public bool RegistroActivo { get; set; } // bit
	}

	[Table(Schema = "dbo", Name = "ContratoAvanceFinanciero")]
	public partial class ContratoAvanceFinanciero
	{
		[Column("codigo_BPIN"), Nullable] public string CodigoBpin { get; set; } // varchar(50)
		[Column(), Nullable] public string CodigoContrato { get; set; } // varchar(50)
		[Column(), Nullable] public DateTime? FechaAvanceFinanciero { get; set; } // datetime2(7)
		[Column(), Nullable] public string NombreContratista { get; set; } // varchar(50)
		[Column(), Nullable] public string CodigoContratista { get; set; } // varchar(50)
		[Column(), Nullable] public DateTime? FechaFactura { get; set; } // datetime2(7)
		[Column(), Nullable] public string MonedaFactura { get; set; } // varchar(10)
		[Column(), Nullable] public string SistemaPago { get; set; } // varchar(20)
		[Column(), Nullable] public DateTime? FechaSolicitudFactura { get; set; } // datetime2(7)
		[Column("codigoFinanciero"), Nullable] public string CodigoFinanciero { get; set; } // varchar(20)
		[Column("idAvanceFinanciero"), Nullable] public string IdAvanceFinanciero { get; set; } // varchar(100)
		[Column(), Nullable] public string MonedaValorPagado { get; set; } // varchar(10)
		[Column(), Nullable] public string NombrePagador { get; set; } // varchar(250)
		[Column(), Nullable] public string CodigoPagador { get; set; } // varchar(25)
		[Column(), Nullable] public string NumeroFactura { get; set; } // varchar(60)
		[Column(), Nullable] public string TipoDocumento { get; set; } // varchar(60)
		[Column(), Nullable] public long? ValorFactura { get; set; } // bigint
		[Column(), Nullable] public long? ValorPagado { get; set; } // bigint
	}

	[Table(Schema = "dbo", Name = "ContratoAvanceFinancieroRetenciones")]
	public partial class ContratoAvanceFinancieroRetencione
	{
		[Column("codigo_BPIN"), Nullable] public string CodigoBpin { get; set; } // varchar(50)
		[Column("codigoContrato"), Nullable] public string CodigoContrato { get; set; } // varchar(50)
		[Column(), Nullable] public string NumeroFactura { get; set; } // varchar(60)
		[Column(), Nullable] public string NombreRetencion { get; set; } // varchar(10)
		[Column(), Nullable] public int? IdRetencion { get; set; } // int
		[Column(), Nullable] public string TipoRetencion { get; set; } // varchar(10)
		[Column(), Nullable] public long? ValorRetencion { get; set; } // bigint
		[Column(), Nullable] public string MonedaRetencion { get; set; } // varchar(10)
		[Column("idAvanceFinanciero"), Nullable] public string IdAvanceFinanciero { get; set; } // varchar(250)
	}

	[Table(Schema = "dbo", Name = "Contratos2")]
	public partial class Contratos2
	{
		[Column("codigoproceso"), Nullable] public string Codigoproceso { get; set; } // nvarchar(200)
		[Column(), Nullable] public string DescripcionProceso { get; set; } // nvarchar(200)
		[Column("codigocontrato"), Nullable] public string Codigocontrato { get; set; } // nvarchar(200)
		[Column(), Nullable] public string DescripcionContrato { get; set; } // nvarchar(500)
		[Column(), Nullable] public string MonedaContrato { get; set; } // varchar(100)
		[Column(), Nullable] public string MonedaProceso { get; set; } // varchar(100)
		[Column("valorcontratado"), Nullable] public decimal? Valorcontratado { get; set; } // numeric(38, 6)
		[Column(), Nullable] public string RPE { get; set; } // varchar(100)
		[Column("razonsocial"), NotNull] public string Razonsocial { get; set; } // nvarchar(150)
		[Column("tipodocumento"), NotNull] public string Tipodocumento { get; set; } // varchar(32)
		[Column("numerodocumento"), Nullable] public string Numerodocumento { get; set; } // varchar(100)
		[Column("esmipyme"), Nullable] public bool? Esmipyme { get; set; } // bit
		[Column("genero"), Nullable] public char? Genero { get; set; } // varchar(1)
		[Column(), Nullable] public string EstadoContrato { get; set; } // varchar(100)
		[Column("fechaInicioContrato"), Nullable] public DateTime? FechaInicioContrato { get; set; } // datetime2(7)
		[Column("fechaFinContrato"), Nullable] public DateTime? FechaFinContrato { get; set; } // datetime2(7)
		[Column("Fecha_inicio_ejecucion_contrato"), Nullable] public DateTime? FechaInicioEjecucionContrato { get; set; } // datetime2(7)
		[Column("Fecha_fin_ejecucion_contrato"), Nullable] public DateTime? FechaFinEjecucionContrato { get; set; } // datetime2(7)
		[Column("Certificate_code"), Nullable] public string CertificateCode { get; set; } // varchar(150)
		[Column(), Nullable] public string UnidadCompra { get; set; } // nvarchar(150)
		[Column(), Nullable] public string CodigoSNIP { get; set; } // varchar(100)
		[Column("FCH_INICIO_PUBLICACION"), Nullable] public DateTime? FchInicioPublicacion { get; set; } // datetime2(7)
		[Column("FCH_INICIO_RECEP_OFERTAS"), Nullable] public DateTime? FchInicioRecepOfertas { get; set; } // datetime2(7)
		[Column("FCH_ESTIMADA_ADJUDICACION"), Nullable] public DateTime? FchEstimadaAdjudicacion { get; set; } // datetime2(7)
		[Column(), Nullable] public decimal? MontoEstimado { get; set; } // numeric(38, 6)
		[Column(), Nullable] public string EstadoProceso { get; set; } // varchar(100)
		[Column(), Nullable] public string URL { get; set; } // varchar(145)
		[Column(), Nullable] public string CodigoUnidadCompra { get; set; } // varchar(100)
		[Column(), NotNull] public DateTime FechaUltimaModificacion { get; set; } // datetime
	}

	[Table(Schema = "dbo", Name = "ContratosBK")]
	public partial class ContratosBK
	{
		[Column(), Nullable] public string NumeroLicitacion { get; set; } // nvarchar(200)
		[Column(), Nullable] public DateTime? FechaLicitacion { get; set; } // datetime2(7)
		[Column(), Nullable] public string EntidadContratanteOferta { get; set; } // nvarchar(200)
		[Column(), Nullable] public string IdEntidadContratanteOferta { get; set; } // nvarchar(200)
		[Column(), Nullable] public string CategoriaContratacion { get; set; } // nvarchar(500)
		[Column(), Nullable] public string EstadoDetalle { get; set; } // varchar(100)
		[Column(), Nullable] public string IdOferta { get; set; } // varchar(100)
		[Column(), Nullable] public string DescripcionOferta { get; set; } // varchar(300)
		[Column(), Nullable] public string MetodoContratacion { get; set; } // varchar(300)
		[Column(), Nullable] public int? OfertaPeriodoDuracion { get; set; } // int
		[Column(), Nullable] public DateTime? OfertaPeriodoFechaInicio { get; set; } // datetime2(7)
		[Column(), Nullable] public DateTime? OfertaPeriodoFechaFin { get; set; } // datetime2(7)
		[Column(), Nullable] public string IdGanador { get; set; } // varchar(250)
		[Column(), NotNull] public string IdProveedor { get; set; } // nvarchar(150)
		[Column(), NotNull] public string ProveedorNombre { get; set; } // nvarchar(150)
		[Column(), NotNull] public string IdQuejas { get; set; } // nvarchar(10)
		[Column(), Nullable] public string IdContratos { get; set; } // varchar(100)
		[Column("ocid"), Nullable] public string Ocid { get; set; } // varchar(100)
		[Column(), Nullable] public string Comprador { get; set; } // varchar(150)
		[Column(), Nullable] public string CompradorId { get; set; } // varchar(150)
		[Column(), Nullable] public DateTime? LanzamientoFecha { get; set; } // datetime2(7)
		[Column("urlApi"), NotNull] public string UrlApi { get; set; } // nvarchar(150)
		[Column("urlLicitacion"), NotNull] public string UrlLicitacion { get; set; } // nvarchar(150)
		[Column(), NotNull] public DateTime FechaUltimaModificacion { get; set; } // datetime
		[Column(), Nullable] public long? ValorContrato { get; set; } // bigint
		[Column(), Nullable] public DateTime? FechaFirmaContrato { get; set; } // datetime
		[Column(), Nullable] public string MonedaContrato { get; set; } // varchar(5)
		[Column(), Nullable] public string EstadoContrato { get; set; } // varchar(50)
		[Column(), Nullable] public string TipoDocumentoContrato { get; set; } // varchar(90)
		[Column("codigo_BPIN"), Nullable] public string CodigoBpin { get; set; } // varchar(50)
		[Column("Es_Covid"), Nullable] public int? EsCovid { get; set; } // int
	}

	[Table(Schema = "dbo", Name = "ContratosEjecucionFinanciera")]
	public partial class ContratosEjecucionFinanciera
	{
		[PrimaryKey(1), NotNull] public string CodigoContrato { get; set; } // varchar(30)
		[PrimaryKey(12), NotNull] public int TipoPrograma { get; set; } // int
		[PrimaryKey(5), NotNull] public int ObjetoGasto { get; set; } // int
		[PrimaryKey(3), NotNull] public int SubPrograma { get; set; } // int
		[PrimaryKey(7), NotNull] public int FuenteFinanciamiento { get; set; } // int
		[PrimaryKey(8), NotNull] public int CodigoEntidad { get; set; } // int
		[PrimaryKey(2), NotNull] public int CodigoPrograma { get; set; } // int
		[PrimaryKey(4), NotNull] public int CodigoProyecto { get; set; } // int
		[PrimaryKey(9), NotNull] public string CodigoDepartamento { get; set; } // varchar(10)
		[Column, Nullable] public int? CodigoNivel { get; set; } // int
		[PrimaryKey(10), NotNull] public int AnioContrato { get; set; } // int
		[PrimaryKey(6), NotNull] public int CodigoFinanciador { get; set; } // int
		[Column, Nullable] public string IdProceso { get; set; } // varchar(150)
		[Column, Nullable] public DateTime? FechaFinalizacionContrato { get; set; } // datetime2(7)
		[Column, Nullable] public DateTime? FechaInicioContrato { get; set; } // datetime2(7)
		[Column, Nullable] public long? MontoAUtilizar { get; set; } // bigint
		[PrimaryKey(11), NotNull] public string CodigoFinanciero { get; set; } // varchar(30)
		[Column, Nullable] public DateTime? FechaModificacion { get; set; } // datetime
		[Column, Nullable] public bool? RegistroActivo { get; set; } // bit
	}

	[Table(Schema = "dbo", Name = "contratosOrden")]
	public partial class ContratosOrden
	{
		[Column("unidadCompra"), Nullable] public string UnidadCompra { get; set; } // varchar(300)
		[Column("orden"), Nullable] public short? Orden { get; set; } // smallint
	}

	[Table(Schema = "dbo", Name = "DatosAdicionalesAprobacion")]
	public partial class DatosAdicionalesAprobacion
	{
		[PrimaryKey, Identity] public int IdDatoAdicional { get; set; } // int
		[Column, NotNull] public string CodigoBPIN { get; set; } // varchar(500)
		[Column, NotNull] public int IdProyecto { get; set; } // int
		[Column, NotNull] public int IdOcad { get; set; } // int
		[Column, NotNull] public string CodigoOcad { get; set; } // varchar(500)
		[Column, NotNull] public string NombreOcad { get; set; } // varchar(500)
		[Column, Nullable] public string NumeroAcuerdo { get; set; } // varchar(500)
		[Column, Nullable] public DateTime? FechaAprobacionInicial { get; set; } // datetime
		[Column, Nullable] public DateTime? FechaUltimaAprobacion { get; set; } // datetime
		[Column, Nullable] public int? IdOcadAprueba { get; set; } // int
		[Column, Nullable] public string CodigoOcadAprueba { get; set; } // varchar(500)
		[Column, Nullable] public string NombreOcadAprueba { get; set; } // varchar(500)
		[Column, NotNull] public DateTime FechaUltimaModificacion { get; set; } // datetime
		[Column, NotNull] public int ConsecutivoCarga { get; set; } // int

		#region Associations

		/// <summary>
		/// FK_DatosAdicionalesAprobacion_Proyecto
		/// </summary>
		[Association(ThisKey = "IdProyecto", OtherKey = "IdProyecto", CanBeNull = false, Relationship = LinqToDB.Mapping.Relationship.ManyToOne, KeyName = "FK_DatosAdicionalesAprobacion_Proyecto", BackReferenceName = "DatosAdicionalesAprobacions")]
		public Proyecto Proyecto { get; set; }

		#endregion
	}

	[Table(Schema = "dbo", Name = "DatosAdicionalesEjecutores")]
	public partial class DatosAdicionalesEjecutore
	{
		[PrimaryKey(1), NotNull] public int IdProyecto { get; set; } // int
		[Column, Nullable] public string CodigoBPIN { get; set; } // varchar(500)
		[PrimaryKey(2), NotNull] public string NitEjecutor { get; set; } // nvarchar(15)
		[Column, Nullable] public string NombreEjecutor { get; set; } // nvarchar(300)
		[Column, Nullable] public string NitInterventor { get; set; } // nvarchar(15)
		[Column, Nullable] public string NombreInterventor { get; set; } // nvarchar(300)
		[Column, Nullable] public DateTime? FechaUltimaModificacion { get; set; } // datetime
		[Column, Nullable] public int? ConsecutivoCarga { get; set; } // int
	}

	[Table(Schema = "dbo", Name = "Departamento")]
	public partial class Departamento
	{
		[Column, NotNull] public string IdDepartamento { get; set; } // varchar(20)
		[Column, NotNull] public string NombreDepartamento { get; set; } // varchar(100)
		[Column, NotNull] public DateTime FechaUltimaModificacion { get; set; } // datetime
		[Column, NotNull] public int ConsecutivoCarga { get; set; } // int
		[Column, NotNull] public string ModificadoPor { get; set; } // varchar(50)
	}

	[Table(Schema = "dbo", Name = "Distribucion")]
	public partial class Distribucion
	{
		[PrimaryKey(1), NotNull] public int IdTipoRecurso { get; set; } // int
		[PrimaryKey(2), NotNull] public int IdTipoEntidad { get; set; } // int
		[PrimaryKey(3), NotNull] public string IdEntidad { get; set; } // varchar(30)
		[Column, NotNull] public decimal Monto { get; set; } // decimal(18, 2)
		[Column, NotNull] public DateTime FechaInicioDistribucion { get; set; } // smalldatetime
		[Column, NotNull] public DateTime FechaFinDistribucion { get; set; } // smalldatetime
		[PrimaryKey(4), NotNull] public int MesDistribucion { get; set; } // int
		[PrimaryKey(5), NotNull] public int AñoDistribucion { get; set; } // int
		[Column, Nullable] public string IdDepartamento { get; set; } // varchar(10)
		[Column, Nullable] public string IdMunicipio { get; set; } // varchar(10)
		[Column, NotNull] public int IdTipoDeFinanciacion { get; set; } // int
		[Column, NotNull] public DateTime FechaUltimaModificacion { get; set; } // datetime
		[Column, NotNull] public int ConsecutivoCarga { get; set; } // int

		#region Associations

		/// <summary>
		/// FK_Disribucion_EnteTerritorial
		/// </summary>
		[Association(ThisKey = "IdDepartamento, IdMunicipio", OtherKey = "IdDepartamento, IdMunicipio", CanBeNull = true, Relationship = LinqToDB.Mapping.Relationship.ManyToOne, KeyName = "FK_Disribucion_EnteTerritorial", BackReferenceName = "Disribucions")]
		public EnteTerritorial DisribucionEnteTerritorial { get; set; }

		/// <summary>
		/// FK_Disribucion_Fuente
		/// </summary>
		[Association(ThisKey = "IdTipoRecurso, IdTipoEntidad, IdEntidad", OtherKey = "IdTipoRecurso, IdTipoEntidad, IdEntidad", CanBeNull = false, Relationship = LinqToDB.Mapping.Relationship.ManyToOne, KeyName = "FK_Disribucion_Fuente", BackReferenceName = "Disribucions")]
		public Fuente DisribucionFuente { get; set; }

		/// <summary>
		/// FK_Distribucion_TipoDeFinanciacion
		/// </summary>
		[Association(ThisKey = "IdTipoDeFinanciacion", OtherKey = "IdTipoFinanciacion", CanBeNull = false, Relationship = LinqToDB.Mapping.Relationship.ManyToOne, KeyName = "FK_Distribucion_TipoDeFinanciacion", BackReferenceName = "Distribucions")]
		public TipoDeFinanciacion TipoDeFinanciacion { get; set; }

		#endregion
	}

	[Table(Schema = "dbo", Name = "Documentos_X_Contrato")]
	public partial class DocumentosXContrato
	{
		[Column("Codigo_BPIN"), Nullable] public string CodigoBpin { get; set; } // varchar(50)
		[Column("Id_Contrato"), Nullable] public string IdContrato { get; set; } // varchar(50)
		[Column("Fecha_Publicacon"), Nullable] public DateTime? FechaPublicacon { get; set; } // datetime2(7)
		[Column(), Nullable] public string Documento { get; set; } // varchar(250)
		[Column("Tipo_Documento"), Nullable] public string TipoDocumento { get; set; } // varchar(250)
		[Column(), Nullable] public string Lenguaje { get; set; } // varchar(25)
		[Column("Id_Documento"), Nullable] public string IdDocumento { get; set; } // varchar(250)
		[Column(), Nullable] public string Titulo { get; set; } // varchar(250)
		[Column("url_Documento"), Nullable] public string UrlDocumento { get; set; } // varchar(150)
	}

	[Table(Schema = "dbo", Name = "DonacionDistribucion")]
	public partial class DonacionDistribucion
	{
		[Column(), Nullable] public int? IdProveedor { get; set; } // int
		[Column(), Nullable] public int? NumeroRegistros { get; set; } // int
		[Column(), Nullable] public int? CodigoAdjudicacion { get; set; } // int
		[Column(), Nullable] public int? CodigoLaboratorio { get; set; } // int
		[Column(), Nullable] public int? CodigoMedicamento { get; set; } // int
		[Column(), Nullable] public string FechaHora { get; set; } // nvarchar(50)
		[Column(), Nullable] public string FechaVencimiento { get; set; } // nvarchar(50)
		[Column(), Nullable] public string FuenteDestino { get; set; } // nvarchar(50)
		[Column(), Nullable] public string Llamado { get; set; } // nvarchar(50)
		[Column(), Nullable] public int? Monto { get; set; } // int
		[Column(), Nullable] public string NumeroLote { get; set; } // nvarchar(50)
		[Column(), Nullable] public int? PrecioUnitario { get; set; } // int
		[Column(), Nullable] public string Producto { get; set; } // nvarchar(500)
		[Column(), Nullable] public string Sucursal { get; set; } // nvarchar(500)
		[Column("fechaModificacion"), Nullable] public DateTime? FechaModificacion { get; set; } // datetime
		[Column(), Nullable] public int? Cantidad { get; set; } // int
	}

	[Table(Schema = "dbo", Name = "DonacionProveedor")]
	public partial class DonacionProveedor
	{
		[Column("id"), PrimaryKey, Identity] public int Id { get; set; } // int
		[Column(), NotNull] public string Proveedor { get; set; } // varchar(500)
		[Column(), NotNull] public DateTime FechaModificacion { get; set; } // datetime
	}

	[Table(Schema = "dbo", Name = "DonacionRecepcion")]
	public partial class DonacionRecepcion
	{
		[Column, Nullable] public int? IdProveedor { get; set; } // int
		[Column, Nullable] public int? NumeroRegistros { get; set; } // int
		[Column, Nullable] public int? CodigoMedicamento { get; set; } // int
		[Column, Nullable] public string Llamado { get; set; } // varchar(50)
		[Column, Nullable] public string NumeroLote { get; set; } // varchar(50)
		[Column, Nullable] public int? PrecioUnitario { get; set; } // int
		[Column, Nullable] public string Producto { get; set; } // varchar(500)
		[Column, Nullable] public string Sucursal { get; set; } // varchar(500)
		[Column, Nullable] public int? CantidadActual { get; set; } // int
		[Column, Nullable] public int? CantidadRecibida { get; set; } // int
		[Column, Nullable] public string FechaMovimiento { get; set; } // varchar(50)
		[Column, Nullable] public int? MontoRecepcion { get; set; } // int
		[Column, Nullable] public string Vencimiento { get; set; } // varchar(50)
		[Column, Nullable] public DateTime? FechaModificacion { get; set; } // datetime
	}

    [Table(Schema = "stp", Name = "eje_estrategico")]
    public partial class stp_EjeEstrategico
    {
        [Column("id"), Nullable] public int? Id { get; set; } // int
        [Column("nombre"), Nullable] public string Nombre { get; set; } // varchar(max)
        [Column("descripcion"), Nullable] public string Descripcion { get; set; } // varchar(max)
        [Column("version"), Nullable] public int? Version { get; set; } // int
        [Column("anho"), Nullable] public int? Anho { get; set; } // int
        [Column("borrado"), Nullable] public string Borrado { get; set; } // varchar(5)
        [Column("fecha_actualizacion"), Nullable] public DateTime? FechaActualizacion { get; set; } // datetime2(6)
        [Column("fecha_insercion"), Nullable] public DateTime? FechaInsercion { get; set; } // datetime2(6)
        [Column("usuario_responsable"), Nullable] public string UsuarioResponsable { get; set; } // varchar(max)
        [Column("plan_id"), Nullable] public int? PlanId { get; set; } // int
    }

    [Table(Schema = "dbo", Name = "EnteTerritorial")]
	public partial class EnteTerritorial
	{
		[Column, Nullable] public string IdRegion { get; set; } // varchar(10)
		[PrimaryKey(1), NotNull] public string IdDepartamento { get; set; } // varchar(10)
		[PrimaryKey(2), NotNull] public string IdMunicipio { get; set; } // varchar(10)
		[Column, Nullable] public string NombreRegion { get; set; } // varchar(50)
		[Column, NotNull] public string NombreDepartamento { get; set; } // varchar(50)
		[Column, NotNull] public string NombreMunicipio { get; set; } // varchar(50)
		[Column, Nullable] public SqlGeography GeoPoligonoEntidadTerritorial { get; set; } // geography
		[Column, Nullable] public string CodigoDANE { get; set; } // varchar(15)
		[Column, NotNull] public DateTime FechaUltimaModificacion { get; set; } // datetime
		[Column, NotNull] public string Modificadopor { get; set; } // varchar(30)
		[Column, NotNull] public int ConsecutivoCarga { get; set; } // int
		[Column, Nullable] public SqlGeography TopLeft { get; set; } // geography
		[Column, Nullable] public SqlGeography BottomRight { get; set; } // geography
		[Column, Nullable] public string Tipo { get; set; } // varchar(50)
		[Column, Nullable] public int? Version { get; set; } // int
		[Column, Nullable] public SqlGeography Centroide { get; set; } // geography
		[Column, Nullable] public string Geojson { get; set; } // varchar(max)

		#region Associations

		/// <summary>
		/// FK_CabeceraMunicipio_EnteTerritorial_BackReference
		/// </summary>
		[Association(ThisKey = "IdMunicipio", OtherKey = "CodigoDane", CanBeNull = true, Relationship = LinqToDB.Mapping.Relationship.OneToOne, IsBackReference = true)]
		public CabeceraMunicipio CabeceraMunicipio { get; set; }

		/// <summary>
		/// FK_Disribucion_EnteTerritorial_BackReference
		/// </summary>
		[Association(ThisKey = "IdDepartamento, IdMunicipio", OtherKey = "IdDepartamento, IdMunicipio", CanBeNull = true, Relationship = LinqToDB.Mapping.Relationship.OneToMany, IsBackReference = true)]
		public IEnumerable<Distribucion> Disribucions { get; set; }

		/// <summary>
		/// FK_Fiscalizacion_EnteTerritorial_BackReference
		/// </summary>
		[Association(ThisKey = "IdDepartamento, IdMunicipio", OtherKey = "IdDepartamento, IdMunicipio", CanBeNull = true, Relationship = LinqToDB.Mapping.Relationship.OneToMany, IsBackReference = true)]
		public IEnumerable<Fiscalizacion> Fiscalizacions { get; set; }

		/// <summary>
		/// Fk_FotoUsuarioXEnteTerritorial_BackReference
		/// </summary>
		[Association(ThisKey = "IdDepartamento, IdMunicipio", OtherKey = "IdDepartamento, IdMunicipio", CanBeNull = true, Relationship = LinqToDB.Mapping.Relationship.OneToMany, IsBackReference = true)]
		public IEnumerable<FotoUsuario> FkFotoUsuarioXEnteTerritorials { get; set; }

		/// <summary>
		/// Fk_ProyectoXEnteTerritorial_BackReference
		/// </summary>
		[Association(ThisKey = "IdDepartamento, IdMunicipio", OtherKey = "IdDepartamento, IdMunicipio", CanBeNull = true, Relationship = LinqToDB.Mapping.Relationship.OneToMany, IsBackReference = true)]
		public IEnumerable<ProyectoXEntidadTerritorial> FkProyectoXEnteTerritorials { get; set; }

		/// <summary>
		/// Fk_RespuestaCuestionarioXEnteTerritorial_BackReference
		/// </summary>
		[Association(ThisKey = "IdDepartamento, IdMunicipio", OtherKey = "IdDepartamento, IdMunicipio", CanBeNull = true, Relationship = LinqToDB.Mapping.Relationship.OneToMany, IsBackReference = true)]
		public IEnumerable<RespuestaCuestionario> FkRespuestaCuestionarioXEnteTerritorials { get; set; }

		/// <summary>
		/// Fk_UsuarioXEntidadXEnteTerritorial_BackReference
		/// </summary>
		[Association(ThisKey = "IdDepartamento, IdMunicipio", OtherKey = "IdDepartamento, IdMunicipio", CanBeNull = true, Relationship = LinqToDB.Mapping.Relationship.OneToMany, IsBackReference = true)]
		public IEnumerable<UsuarioXEntidad> FkUsuarioXEntidadXEnteTerritorials { get; set; }

		/// <summary>
		/// FK_Fuente_EnteTerritorialMunicipio_BackReference
		/// </summary>
		[Association(ThisKey = "IdDepartamento, IdMunicipio", OtherKey = "IdDepartamento, IdMunicipio", CanBeNull = true, Relationship = LinqToDB.Mapping.Relationship.OneToMany, IsBackReference = true)]
		public IEnumerable<Fuente> FuenteEnteTerritorialMunicipios { get; set; }

		/// <summary>
		/// FK_Giro_EnteTerritorial_BackReference
		/// </summary>
		[Association(ThisKey = "IdDepartamento, IdMunicipio", OtherKey = "IdDepartamento, IdMunicipio", CanBeNull = true, Relationship = LinqToDB.Mapping.Relationship.OneToMany, IsBackReference = true)]
		public IEnumerable<Giro> Giros { get; set; }

		/// <summary>
		/// FK_LiquidacionProduccionANH_EnteTerritorial_BackReference
		/// </summary>
		[Association(ThisKey = "IdDepartamento, IdMunicipio", OtherKey = "IdDepartamento, IdMunicipio", CanBeNull = true, Relationship = LinqToDB.Mapping.Relationship.OneToMany, IsBackReference = true)]
		public IEnumerable<Liquidacion> LiquidacionProduccionAnhs { get; set; }

		/// <summary>
		/// FK_Produccion_EnteTerritorial_BackReference
		/// </summary>
		[Association(ThisKey = "IdDepartamento, IdMunicipio", OtherKey = "IdDepartamento, IdMunicipio", CanBeNull = true, Relationship = LinqToDB.Mapping.Relationship.OneToMany, IsBackReference = true)]
		public IEnumerable<Produccion> Produccions { get; set; }

		/// <summary>
		/// FK_RendimientosFinancieros_EnteTerritorial_BackReference
		/// </summary>
		[Association(ThisKey = "IdDepartamento, IdMunicipio", OtherKey = "IdDepartamento, IdMunicipio", CanBeNull = true, Relationship = LinqToDB.Mapping.Relationship.OneToMany, IsBackReference = true)]
		public IEnumerable<RendimientosFinanciero> RendimientosFinancieros { get; set; }

		#endregion
	}

	[Table(Schema = "dbo", Name = "EntidadContrato")]
	public partial class EntidadContrato
	{
		[PrimaryKey, NotNull] public string Codigo { get; set; } // varchar(30)
		[Column, NotNull] public string Nombre { get; set; } // varchar(150)

		#region Associations

		/// <summary>
		/// FK_Proceso_EntidadContrato2_BackReference
		/// </summary>
		[Association(ThisKey = "Codigo", OtherKey = "CodigoProveedor", CanBeNull = true, Relationship = LinqToDB.Mapping.Relationship.OneToMany, IsBackReference = true)]
		public IEnumerable<Proceso> FkProcesoEntidadContrato2BackReferences { get; set; }

		/// <summary>
		/// FK_Proceso_EntidadContrato1_BackReference
		/// </summary>
		[Association(ThisKey = "Codigo", OtherKey = "CodigoComprador", CanBeNull = true, Relationship = LinqToDB.Mapping.Relationship.OneToMany, IsBackReference = true)]
		public IEnumerable<Proceso> ProcesoEntidadContratos { get; set; }

		/// <summary>
		/// FK_Proceso_EntidadContrato_BackReference
		/// </summary>
		[Association(ThisKey = "Codigo", OtherKey = "CodigoEntidadConvocante", CanBeNull = true, Relationship = LinqToDB.Mapping.Relationship.OneToMany, IsBackReference = true)]
		public IEnumerable<Proceso> Procesos { get; set; }

		#endregion
	}

	[Table(Schema = "dbo", Name = "EntidadesEjecutorasGesProy")]
	public partial class EntidadesEjecutorasGesProy
	{
		[PrimaryKey(1), NotNull] public string NIT { get; set; } // varchar(11)
		[PrimaryKey(2), NotNull] public char DigitoVerificacion { get; set; } // varchar(1)
		[Column, NotNull] public string NombreEntidad { get; set; } // varchar(500)
		[Column, NotNull] public string TipoEntidad { get; set; } // varchar(500)
		[Column, NotNull] public decimal CodigoEntidad { get; set; } // decimal(18, 0)
		[Column, NotNull] public DateTime FechaUltimaModificacion { get; set; } // datetime
		[Column, NotNull] public int ConsecutivoCarga { get; set; } // int
	}

	[Table(Schema = "dbo", Name = "EsquemaFinanciacionProyecto")]
	public partial class EsquemaFinanciacionProyecto
	{
		[PrimaryKey, Identity] public int IdEsquemaFinanciacion { get; set; } // int
		[Column, NotNull] public int IdProyecto { get; set; } // int
		[Column, NotNull] public decimal ValorAprobado { get; set; } // decimal(18, 2)
		[Column, NotNull] public int IdTipoRecurso { get; set; } // int
		[Column, NotNull] public int IdTipoEntidad { get; set; } // int
		[Column, NotNull] public string IdEntidad { get; set; } // varchar(30)
		[Column, NotNull] public DateTime FechaInicioVigencia { get; set; } // datetime
		[Column, NotNull] public DateTime FechaFinalVigencia { get; set; } // datetime
		[Column, NotNull] public DateTime FechaUltimaModificacion { get; set; } // datetime
		[Column, NotNull] public int ConsecutivoCarga { get; set; } // int
		[Column, NotNull] public string Modificadopor { get; set; } // varchar(30)
		[Column, Nullable] public string IdDepartamento { get; set; } // varchar(10)
		[Column, Nullable] public string IdMunicipio { get; set; } // varchar(10)
		[Column, NotNull] public int IdEtapa { get; set; } // int

		#region Associations

		/// <summary>
		/// FK_EsquemaFinanciacionProyecto_Etapa
		/// </summary>
		[Association(ThisKey = "IdEtapa", OtherKey = "IdEtapa", CanBeNull = false, Relationship = LinqToDB.Mapping.Relationship.ManyToOne, KeyName = "FK_EsquemaFinanciacionProyecto_Etapa", BackReferenceName = "EsquemaFinanciacionProyectoes")]
		public Etapa Etapa { get; set; }

		/// <summary>
		/// Fk_EsquemaFinanciacionProyectoXProyecto
		/// </summary>
		[Association(ThisKey = "IdProyecto", OtherKey = "IdProyecto", CanBeNull = false, Relationship = LinqToDB.Mapping.Relationship.ManyToOne, KeyName = "Fk_EsquemaFinanciacionProyectoXProyecto", BackReferenceName = "FkEsquemaFinanciacionProyectoXProyectoes")]
		public Proyecto FkEsquemaFinanciacionProyectoXProyecto { get; set; }

		/// <summary>
		/// FK_EsquemaFinanciacionProyecto_Fuente
		/// </summary>
		[Association(ThisKey = "IdTipoRecurso, IdTipoEntidad, IdEntidad", OtherKey = "IdTipoRecurso, IdTipoEntidad, IdEntidad", CanBeNull = false, Relationship = LinqToDB.Mapping.Relationship.ManyToOne, KeyName = "FK_EsquemaFinanciacionProyecto_Fuente", BackReferenceName = "EsquemaFinanciacionProyectoes")]
		public Fuente Fuente { get; set; }

		#endregion
	}

	[Table(Schema = "dbo", Name = "Estado")]
	public partial class Estado
	{
		[PrimaryKey, NotNull] public int IdEstado { get; set; } // int
		[Column, NotNull] public string NombreEstado { get; set; } // varchar(30)
		[Column, NotNull] public DateTime FechaUltimaModificacion { get; set; } // datetime
		[Column, NotNull] public int ConsecutivoCarga { get; set; } // int
		[Column, NotNull] public string Modificadopor { get; set; } // varchar(30)

		#region Associations

		/// <summary>
		/// Fk_HistoriaEstadoXEstado_BackReference
		/// </summary>
		[Association(ThisKey = "IdEstado", OtherKey = "IdEstado", CanBeNull = true, Relationship = LinqToDB.Mapping.Relationship.OneToMany, IsBackReference = true)]
		public IEnumerable<HistoriaEstado> FkHistoriaEstadoXEstados { get; set; }

		#endregion
	}

	[Table(Schema = "dbo", Name = "EstadoComentario")]
	public partial class EstadoComentario
	{
		[Column(), PrimaryKey, Identity] public int Id { get; set; } // int
		[Column("EstadoComentario"), NotNull] public string EstadoComentarioColumn { get; set; } // varchar(100)
	}

	[Table(Schema = "dbo", Name = "EstadoGesproyProyectos")]
	public partial class EstadoGesproyProyecto
	{
		[Column(), NotNull] public string BPIN { get; set; } // varchar(500)
		[Column("ID_ESTADO"), NotNull] public int IdEstado { get; set; } // int
		[Column("NOMBRE_ESTADO"), NotNull] public string NombreEstado { get; set; } // varchar(500)
		[Column(), NotNull] public DateTime FechaUltimaModificacion { get; set; } // datetime
		[Column(), NotNull] public int ConsecutivoCarga { get; set; } // int
		[Column(), PrimaryKey, NotNull] public int IdProyecto { get; set; } // int

		#region Associations

		/// <summary>
		/// FK_EstadoGesproyProyectos_Proyecto
		/// </summary>
		[Association(ThisKey = "IdProyecto", OtherKey = "IdProyecto", CanBeNull = false, Relationship = LinqToDB.Mapping.Relationship.OneToOne, KeyName = "FK_EstadoGesproyProyectos_Proyecto", BackReferenceName = "EstadoGesproyProyecto")]
		public Proyecto Proyecto { get; set; }

		#endregion
	}

	[Table(Schema = "dbo", Name = "EstadoHomologado")]
	public partial class EstadoHomologado
	{
		[PrimaryKey, Identity] public int IdEstado { get; set; } // int
		[Column, NotNull] public string NombreEstado { get; set; } // varchar(30)
		[Column, NotNull] public int IdEstadoProyecto { get; set; } // int

		#region Associations

		/// <summary>
		/// Fk_PreguntaCuestionarioxEstadoHomologado_BackReference
		/// </summary>
		[Association(ThisKey = "IdEstado", OtherKey = "IdEstado", CanBeNull = true, Relationship = LinqToDB.Mapping.Relationship.OneToMany, IsBackReference = true)]
		public IEnumerable<PreguntaCuestionario> FkPreguntaCuestionarioxEstadoHomologados { get; set; }

		#endregion
	}

	[Table(Schema = "dbo", Name = "EstadoJuridicoCampoOProyecto")]
	public partial class EstadoJuridicoCampoOProyecto
	{
		[PrimaryKey(1), NotNull] public string IdCampoOProyecto { get; set; } // nvarchar(50)
		[PrimaryKey(2), NotNull] public string IdTipoCampoOProyecto { get; set; } // nvarchar(50)
		[PrimaryKey(3), NotNull] public string IdEstadoJuridicoCampoOProyecto { get; set; } // varchar(5)
		[Column, NotNull] public string NombreEstadoJuridicoCampoOProyecto { get; set; } // varchar(100)

		#region Associations

		/// <summary>
		/// FK_EstadoJuridicoCampoOProyecto_CampoOProyectoFiscalizacion
		/// </summary>
		[Association(ThisKey = "IdCampoOProyecto, IdTipoCampoOProyecto", OtherKey = "IdCampoOProyecto, IdTipoCampoOProyecto", CanBeNull = false, Relationship = LinqToDB.Mapping.Relationship.ManyToOne, KeyName = "FK_EstadoJuridicoCampoOProyecto_CampoOProyectoFiscalizacion", BackReferenceName = "EstadoJuridicoCampoOProyectoes")]
		public CampoOProyectoFiscalizacion CampoOProyectoFiscalizacion { get; set; }

		#endregion
	}

	[Table(Schema = "dbo", Name = "EstructuraEntidades")]
	public partial class EstructuraEntidade
	{
		[Column, Nullable] public int? CodigoNivel { get; set; } // int
		[Column, Nullable] public int? CodigoEntidad { get; set; } // int
		[Column, Nullable] public string NombreEntidad { get; set; } // varchar(255)
		[Column, Nullable] public int? CodigoClasePograma { get; set; } // int
		[Column, Nullable] public string ClasePrograma { get; set; } // varchar(255)
		[Column, Nullable] public int? CodigoPrograma { get; set; } // int
		[Column, Nullable] public string NombrePrograma { get; set; } // varchar(255)
		[Column, Nullable] public string DescripcionActividadSegunClasificacion { get; set; } // varchar(255)
		[Column, Nullable] public int? CodigoActividad { get; set; } // int
		[Column, Nullable] public string NombreActividad { get; set; } // varchar(255)
		[Column, Nullable] public int? CodigoObjetoGasto { get; set; } // int
		[Column, Nullable] public string NombreOG { get; set; } // varchar(255)
		[Column, Nullable] public int? CodigoOrganismoFinanciador { get; set; } // int
		[Column, Nullable] public string NombreOF { get; set; } // varchar(255)
		[Column, Nullable] public int? CodigoFuenteFinanciamiento { get; set; } // int
		[Column, Nullable] public string NombreFF { get; set; } // varchar(255)
	}

	[Table(Schema = "dbo", Name = "Etapa")]
	public partial class Etapa
	{
		[PrimaryKey, NotNull] public int IdEtapa { get; set; } // int
		[Column, NotNull] public string NombreEtapa { get; set; } // varchar(30)
		[Column, NotNull] public DateTime FechaUltimaModificacion { get; set; } // datetime
		[Column, NotNull] public int ConsecutivoCarga { get; set; } // int
		[Column, NotNull] public string ModificadoPor { get; set; } // varchar(50)

		#region Associations

		/// <summary>
		/// FK_EsquemaFinanciacionProyecto_Etapa_BackReference
		/// </summary>
		[Association(ThisKey = "IdEtapa", OtherKey = "IdEtapa", CanBeNull = true, Relationship = LinqToDB.Mapping.Relationship.OneToMany, IsBackReference = true)]
		public IEnumerable<EsquemaFinanciacionProyecto> EsquemaFinanciacionProyectos { get; set; }

		#endregion
	}

	[Table(Schema = "dbo", Name = "EtapaCampoOProyecto")]
	public partial class EtapaCampoOProyecto
	{
		[PrimaryKey(1), NotNull] public string IdCampoOProyecto { get; set; } // nvarchar(50)
		[PrimaryKey(2), NotNull] public string IdTipoCampoOProyecto { get; set; } // nvarchar(50)
		[PrimaryKey(3), NotNull] public int IdEtapaCampoOProyecto { get; set; } // int
		[Column, NotNull] public string NombreEtapaCampoOProyecto { get; set; } // varchar(100)

		#region Associations

		/// <summary>
		/// FK_EtapaCampoOProyecto_CampoOProyectoFiscalizacion
		/// </summary>
		[Association(ThisKey = "IdCampoOProyecto, IdTipoCampoOProyecto", OtherKey = "IdCampoOProyecto, IdTipoCampoOProyecto", CanBeNull = false, Relationship = LinqToDB.Mapping.Relationship.ManyToOne, KeyName = "FK_EtapaCampoOProyecto_CampoOProyectoFiscalizacion", BackReferenceName = "EtapaCampoOProyectoes")]
		public CampoOProyectoFiscalizacion CampoOProyectoFiscalizacion { get; set; }

		#endregion
	}

	[Table(Schema = "dbo", Name = "Facturacion_X_Contrato")]
	public partial class FacturacionXContrato
	{
		[Column("Codigo_Bpin"), Nullable] public string CodigoBpin { get; set; } // varchar(50)
		[Column(), Nullable] public string IdContracto { get; set; } // varchar(30)
		[Column("Fecha_Transaccion"), Nullable] public DateTime? FechaTransaccion { get; set; } // datetime2(7)
		[Column("Nombre_Beneficiario"), Nullable] public string NombreBeneficiario { get; set; } // varchar(200)
		[Column("Codigo_Beneficiario"), Nullable] public string CodigoBeneficiario { get; set; } // varchar(50)
		[Column("Fecha_Factura"), Nullable] public DateTime? FechaFactura { get; set; } // datetime2(7)
		[Column("Valor_Factura"), Nullable] public long? ValorFactura { get; set; } // bigint
		[Column("Moneda_Factura"), Nullable] public string MonedaFactura { get; set; } // varchar(5)
		[Column("Sistema_Transaccion"), Nullable] public string SistemaTransaccion { get; set; } // varchar(20)
		[Column("Fecha_Solicitud_Pago"), Nullable] public DateTime? FechaSolicitudPago { get; set; } // datetime2(7)
		[Column("Codigo_Financiero"), Nullable] public string CodigoFinanciero { get; set; } // varchar(50)
		[Column("Valor_Desembolsado"), Nullable] public long? ValorDesembolsado { get; set; } // bigint
		[Column("Moneda_Desembolsado"), Nullable] public string MonedaDesembolsado { get; set; } // varchar(5)
		[Column("Nombre_Pagador"), Nullable] public string NombrePagador { get; set; } // varchar(200)
		[Column("Id_Pagador"), Nullable] public string IdPagador { get; set; } // varchar(50)
		[Column("Valor_Impuesto_Iva"), Nullable] public long? ValorImpuestoIva { get; set; } // bigint
		[Column("Valor_Impuesto_Renta"), Nullable] public long? ValorImpuestoRenta { get; set; } // bigint
		[Column("Valor_Cuota_Multa"), Nullable] public long? ValorCuotaMulta { get; set; } // bigint
		[Column("Valor_Impuesto_Retencion"), Nullable] public long? ValorImpuestoRetencion { get; set; } // bigint
		[Column("Valor_Cuota_ISC"), Nullable] public long? ValorCuotaIsc { get; set; } // bigint
		[Column("Valor_Cuota_Reparo"), Nullable] public long? ValorCuotaReparo { get; set; } // bigint
		[Column("Valor_impuesto_Retencion2"), Nullable] public long? ValorImpuestoRetencion2 { get; set; } // bigint
	}

	[Table(Schema = "dbo", Name = "Fase")]
	public partial class Fase
	{
		[PrimaryKey, NotNull] public int IdFase { get; set; } // int
		[Column, NotNull] public string NombreFase { get; set; } // varchar(30)
		[Column, NotNull] public DateTime FechaUltimaModificacion { get; set; } // datetime
		[Column, NotNull] public int ConsecutivoCarga { get; set; } // int
		[Column, NotNull] public string ModificadoPor { get; set; } // varchar(50)

		#region Associations

		/// <summary>
		/// FK_HistoriaEstado_Fase_BackReference
		/// </summary>
		[Association(ThisKey = "IdFase", OtherKey = "IdFase", CanBeNull = true, Relationship = LinqToDB.Mapping.Relationship.OneToMany, IsBackReference = true)]
		public IEnumerable<HistoriaEstado> HistoriaEstados { get; set; }

		#endregion
	}

	[Table(Schema = "dbo", Name = "Fiscalizacion")]
	public partial class Fiscalizacion
	{
		[PrimaryKey, Identity] public int Id { get; set; } // int
		[Column, NotNull] public string IdCampoOProyecto { get; set; } // nvarchar(50)
		/// <summary>
		/// Titulo Minero o Pozo Petrolifero
		/// </summary>
		[Column, NotNull] public string IdTipoCampoOProyecto { get; set; } // nvarchar(50)
		[Column, NotNull] public string IdPeriodicidad { get; set; } // nvarchar(5)
		[Column, NotNull] public int AñoLiquidado { get; set; } // int
		[Column, NotNull] public int PeriodoLiquidado { get; set; } // int
		[Column, NotNull] public char IdTipoRecursoNatural { get; set; } // varchar(1)
		[Column, NotNull] public DateTime FechaInicioPeriodo { get; set; } // smalldatetime
		[Column, NotNull] public DateTime FechaFinPeriodo { get; set; } // smalldatetime
		[Column, NotNull] public string IdRecursoNatural { get; set; } // varchar(10)
		[Column, NotNull] public string IdDepartamento { get; set; } // varchar(10)
		[Column, NotNull] public string IdMunicipio { get; set; } // varchar(10)
		[Column, Nullable] public string IdFiscalizacionNegocio { get; set; } // nvarchar(50)
		[Column, Nullable] public string IdTipoActividad { get; set; } // nvarchar(50)
		[Column, Nullable] public DateTime? FechaActividad { get; set; } // datetime
		[Column, Nullable] public string Observaciones { get; set; } // varchar(1500)
		[Column, NotNull] public DateTime FechaUltimaModificacion { get; set; } // datetime
		[Column, NotNull] public int ConsecutivoCarga { get; set; } // int
		[Column, Nullable] public string IdFiscalizacionSurrogada { get; set; } // nvarchar(max)
		[Column, Nullable] public int? IdEtapa { get; set; } // int

		#region Associations

		/// <summary>
		/// FK_Fiscalizacion_CampoOProyectoFiscalizacion
		/// </summary>
		[Association(ThisKey = "IdCampoOProyecto, IdTipoCampoOProyecto", OtherKey = "IdCampoOProyecto, IdTipoCampoOProyecto", CanBeNull = false, Relationship = LinqToDB.Mapping.Relationship.ManyToOne, KeyName = "FK_Fiscalizacion_CampoOProyectoFiscalizacion", BackReferenceName = "Fiscalizacions")]
		public CampoOProyectoFiscalizacion CampoOProyectoFiscalizacion { get; set; }

		/// <summary>
		/// FK_Fiscalizacion_EnteTerritorial
		/// </summary>
		[Association(ThisKey = "IdDepartamento, IdMunicipio", OtherKey = "IdDepartamento, IdMunicipio", CanBeNull = false, Relationship = LinqToDB.Mapping.Relationship.ManyToOne, KeyName = "FK_Fiscalizacion_EnteTerritorial", BackReferenceName = "Fiscalizacions")]
		public EnteTerritorial EnteTerritorial { get; set; }

		/// <summary>
		/// FK_Fiscalizacion_Periodicidad
		/// </summary>
		[Association(ThisKey = "IdPeriodicidad", OtherKey = "IdPeriodicidad", CanBeNull = false, Relationship = LinqToDB.Mapping.Relationship.ManyToOne, KeyName = "FK_Fiscalizacion_Periodicidad", BackReferenceName = "Fiscalizacions")]
		public Periodicidad Periodicidad { get; set; }

		/// <summary>
		/// FK_Fiscalizacion_RecursoNaturalFiscalizacion
		/// </summary>
		[Association(ThisKey = "IdRecursoNatural, IdTipoRecursoNatural", OtherKey = "IdRecursoNatural, IdTipoRecursoNatural", CanBeNull = false, Relationship = LinqToDB.Mapping.Relationship.ManyToOne, KeyName = "FK_Fiscalizacion_RecursoNaturalFiscalizacion", BackReferenceName = "Fiscalizacions")]
		public RecursoNaturalFiscalizacion RecursoNaturalFiscalizacion { get; set; }

		/// <summary>
		/// FK_Fiscalizacion_TipoActividadFiscalizacion
		/// </summary>
		[Association(ThisKey = "IdTipoActividad", OtherKey = "Id", CanBeNull = true, Relationship = LinqToDB.Mapping.Relationship.ManyToOne, KeyName = "FK_Fiscalizacion_TipoActividadFiscalizacion", BackReferenceName = "Fiscalizacions")]
		public TipoActividadFiscalizacion TipoActividadFiscalizacion { get; set; }

		#endregion
	}

	[Table(Schema = "dbo", Name = "Foto")]
	public partial class Foto
	{
		[PrimaryKey, Identity] public int IdFoto { get; set; } // int
		[Column, NotNull] public int IdProyecto { get; set; } // int
		[Column, Nullable] public string RutaFotoGrande { get; set; } // nvarchar(4000)
		[Column, Nullable] public string RutaFotoMediano { get; set; } // nvarchar(4000)
		[Column, Nullable] public string RutaFotoPequeno { get; set; } // nvarchar(4000)
		[Column, Nullable] public string Descripcion { get; set; } // nvarchar(4000)
		[Column, NotNull] public DateTime FechaUltimaModificacion { get; set; } // datetime
		[Column, NotNull] public int ConsecutivoCarga { get; set; } // int
		[Column, NotNull] public string Modificadopor { get; set; } // varchar(30)
		[Column, NotNull] public DateTime Fecha { get; set; } // datetime
		[Column, Nullable] public string Aprobadopor { get; set; } // varchar(300)
		[Column, NotNull] public bool Aprobado { get; set; } // bit
		[Column, NotNull] public bool Eliminado { get; set; } // bit

		#region Associations

		/// <summary>
		/// FK_FotoXProyecto
		/// </summary>
		[Association(ThisKey = "IdProyecto", OtherKey = "IdProyecto", CanBeNull = false, Relationship = LinqToDB.Mapping.Relationship.ManyToOne, KeyName = "FK_FotoXProyecto", BackReferenceName = "FotoXProyectoes")]
		public Proyecto FotoXProyecto { get; set; }

		#endregion
	}

	[Table(Schema = "dbo", Name = "FotoUsuario")]
	public partial class FotoUsuario
	{
		[PrimaryKey, Identity] public int IdFotoUsuario { get; set; } // int
		[Column, NotNull] public int IdProyecto { get; set; } // int
		[Column, NotNull] public int IdUsuario { get; set; } // int
		[Column, Nullable] public string RutaFotoGrande { get; set; } // nvarchar(4000)
		[Column, Nullable] public string RutaFotoMediano { get; set; } // nvarchar(4000)
		[Column, Nullable] public string RutaFotoPequeno { get; set; } // nvarchar(4000)
		[Column, Nullable] public string Descripcion { get; set; } // nvarchar(4000)
		[Column, NotNull] public string IdDepartamento { get; set; } // varchar(10)
		[Column, NotNull] public string IdMunicipio { get; set; } // varchar(10)
		[Column, NotNull] public DateTime Fecha { get; set; } // datetime
		[Column, Nullable] public string Aprobadopor { get; set; } // varchar(300)
		[Column, Nullable] public string Modificadopor { get; set; } // varchar(30)
		[Column, NotNull] public bool Aprobado { get; set; } // bit
		[Column, NotNull] public bool Eliminado { get; set; } // bit
		[Column, Nullable] public string JustificacionParaNoPublicar { get; set; } // varchar(max)

		#region Associations

		/// <summary>
		/// Fk_FotoUsuarioProyecto
		/// </summary>
		[Association(ThisKey = "IdProyecto", OtherKey = "IdProyecto", CanBeNull = false, Relationship = LinqToDB.Mapping.Relationship.ManyToOne, KeyName = "Fk_FotoUsuarioProyecto", BackReferenceName = "FkFotoUsuarioProyectoes")]
		public Proyecto FkFotoUsuarioProyecto { get; set; }

		/// <summary>
		/// Fk_FotoUsuarioXEnteTerritorial
		/// </summary>
		[Association(ThisKey = "IdDepartamento, IdMunicipio", OtherKey = "IdDepartamento, IdMunicipio", CanBeNull = false, Relationship = LinqToDB.Mapping.Relationship.ManyToOne, KeyName = "Fk_FotoUsuarioXEnteTerritorial", BackReferenceName = "FkFotoUsuarioXEnteTerritorials")]
		public EnteTerritorial FkFotoUsuarioXEnteTerritorial { get; set; }

		/// <summary>
		/// Fk_FotoUsuarioXUsuario
		/// </summary>
		[Association(ThisKey = "IdUsuario", OtherKey = "IdUsuario", CanBeNull = false, Relationship = LinqToDB.Mapping.Relationship.ManyToOne, KeyName = "Fk_FotoUsuarioXUsuario", BackReferenceName = "FkFotoUsuarioXUsuarios")]
		public Usuario FkFotoUsuarioXUsuario { get; set; }

		#endregion
	}

	[Table(Schema = "dbo", Name = "Fuente")]
	public partial class Fuente
	{
		[PrimaryKey(1), NotNull] public int IdTipoRecurso { get; set; } // int
		[PrimaryKey(2), NotNull] public int IdTipoEntidad { get; set; } // int
		[PrimaryKey(3), NotNull] public string IdEntidad { get; set; } // varchar(30)
		[Column, NotNull] public string NombreTipoRecurso { get; set; } // varchar(200)
		[Column, NotNull] public string NombreTipoEntidad { get; set; } // varchar(200)
		[Column, NotNull] public string NombreEntidad { get; set; } // varchar(200)
		[Column, NotNull] public bool EsFuenteRegalias { get; set; } // bit
		[Column, NotNull] public DateTime FechaUltimaModificacion { get; set; } // datetime
		[Column, NotNull] public int ConsecutivoCarga { get; set; } // int
		[Column, NotNull] public string Modificadopor { get; set; } // varchar(30)
		[Column, Nullable] public string IdDepartamento { get; set; } // varchar(10)
		[Column, Nullable] public string IdMunicipio { get; set; } // varchar(10)

		#region Associations

		/// <summary>
		/// FK_Disribucion_Fuente_BackReference
		/// </summary>
		[Association(ThisKey = "IdTipoRecurso, IdTipoEntidad, IdEntidad", OtherKey = "IdTipoRecurso, IdTipoEntidad, IdEntidad", CanBeNull = true, Relationship = LinqToDB.Mapping.Relationship.OneToMany, IsBackReference = true)]
		public IEnumerable<Distribucion> Disribucions { get; set; }

		/// <summary>
		/// FK_Fuente_EnteTerritorialMunicipio
		/// </summary>
		[Association(ThisKey = "IdDepartamento, IdMunicipio", OtherKey = "IdDepartamento, IdMunicipio", CanBeNull = true, Relationship = LinqToDB.Mapping.Relationship.ManyToOne, KeyName = "FK_Fuente_EnteTerritorialMunicipio", BackReferenceName = "FuenteEnteTerritorialMunicipios")]
		public EnteTerritorial EnteTerritorialMunicipio { get; set; }

		/// <summary>
		/// FK_EsquemaFinanciacionProyecto_Fuente_BackReference
		/// </summary>
		[Association(ThisKey = "IdTipoRecurso, IdTipoEntidad, IdEntidad", OtherKey = "IdTipoRecurso, IdTipoEntidad, IdEntidad", CanBeNull = true, Relationship = LinqToDB.Mapping.Relationship.OneToMany, IsBackReference = true)]
		public IEnumerable<EsquemaFinanciacionProyecto> EsquemaFinanciacionProyectos { get; set; }

		/// <summary>
		/// FK_Giro_Fuente_BackReference
		/// </summary>
		[Association(ThisKey = "IdTipoRecurso, IdTipoEntidad, IdEntidad", OtherKey = "IdTipoRecurso, IdTipoEntidad, IdEntidad", CanBeNull = true, Relationship = LinqToDB.Mapping.Relationship.OneToMany, IsBackReference = true)]
		public IEnumerable<Giro> Giros { get; set; }

		/// <summary>
		/// FK_SeguimientoEsquemaFinanciacionProyecto_Fuente_BackReference
		/// </summary>
		[Association(ThisKey = "IdTipoRecurso, IdTipoEntidad, IdEntidad", OtherKey = "IdTipoRecurso, IdTipoEntidad, IdEntidad", CanBeNull = true, Relationship = LinqToDB.Mapping.Relationship.OneToMany, IsBackReference = true)]
		public IEnumerable<SeguimientoEsquemaFinanciacionProyecto> SeguimientoEsquemaFinanciacionProyectos { get; set; }

		#endregion
	}

	[Table(Schema = "dbo", Name = "FuenteDeLosRecursos")]
	public partial class FuenteDeLosRecurso
	{
		[PrimaryKey, NotNull] public int IdFuente { get; set; } // int
		[Column, Nullable] public string NombreFuente { get; set; } // nvarchar(150)
		[Column, NotNull] public string Descripcion { get; set; } // nvarchar(500)
		[Column, NotNull] public DateTime FechaActualizacionFuente { get; set; } // datetime
	}

	[Table(Schema = "dbo", Name = "FuenteFinancieraPrograma")]
	public partial class FuenteFinancieraPrograma
	{
		[Column("codigoFuenteFinanciamiento"), PrimaryKey, NotNull] public int CodigoFuenteFinanciamiento { get; set; } // int
		[Column("descripcionFuenteFinanciamiento"), NotNull] public string DescripcionFuenteFinanciamiento { get; set; } // varchar(50)
	}

	[Table(Schema = "dbo", Name = "FuncionamientoSitio")]
	public partial class FuncionamientoSitio
	{
		[PrimaryKey, Identity] public int IDFuncionamientoSitio { get; set; } // int
		[Column, NotNull] public string Imagen { get; set; } // varchar(max)
		[Column, NotNull] public string Titulo { get; set; } // varchar(max)
		[Column, NotNull] public string Descripcion { get; set; } // varchar(max)
		[Column, NotNull] public string Seccion { get; set; } // varchar(max)
	}

	[Table(Schema = "dbo", Name = "GeneroUsuario")]
	public partial class GeneroUsuario
	{
		[PrimaryKey, Identity] public int IdGeneroUsuario { get; set; } // int
		[Column, NotNull] public string NombreGenero { get; set; } // varchar(50)
		[Column, Nullable] public DateTime? FechaCreacion { get; set; } // datetime

		#region Associations

		/// <summary>
		/// Fk_UsuarioXGeneroUsuario_BackReference
		/// </summary>
		[Association(ThisKey = "IdGeneroUsuario", OtherKey = "IdGeneroUsuario", CanBeNull = true, Relationship = LinqToDB.Mapping.Relationship.OneToMany, IsBackReference = true)]
		public IEnumerable<Usuario> FkUsuarioXGeneroUsuarios { get; set; }

		#endregion
	}

	[Table(Schema = "dbo", Name = "Georreferenciacion")]
	public partial class Georreferenciacion
	{
		[Column(), PrimaryKey, Identity] public int IdGeorreferencia { get; set; } // int
		[Column(), NotNull] public string NombreReferencia { get; set; } // varchar(50)
		[Column(), NotNull] public SqlGeography GeoPuntoUbicacion { get; set; } // geography
		[Column(), NotNull] public DateTime FechaUltimaModificacion { get; set; } // datetime
		[Column(), NotNull] public int ConsecutivoCarga { get; set; } // int
		[Column(), NotNull] public string Modificadopor { get; set; } // varchar(30)
		[Column("idProyecto"), NotNull] public int IdProyecto { get; set; } // int

		#region Associations

		/// <summary>
		/// FK_GeorreferenciacionXProyecto
		/// </summary>
		[Association(ThisKey = "IdProyecto", OtherKey = "IdProyecto", CanBeNull = false, Relationship = LinqToDB.Mapping.Relationship.ManyToOne, KeyName = "FK_GeorreferenciacionXProyecto", BackReferenceName = "GeorreferenciacionXProyectoes")]
		public Proyecto GeorreferenciacionXProyecto { get; set; }

		#endregion
	}

	[Table(Schema = "dbo", Name = "Giro")]
	public partial class Giro
	{
		[PrimaryKey, Identity] public int IdGiro { get; set; } // int
		[Column, NotNull] public int IdTipoRecurso { get; set; } // int
		[Column, NotNull] public int IdTipoEntidad { get; set; } // int
		[Column, NotNull] public string IdEntidad { get; set; } // varchar(30)
		[Column, NotNull] public DateTime VigenciaInicio { get; set; } // datetime
		[Column, NotNull] public DateTime VigenciaFin { get; set; } // datetime
		[Column, NotNull] public decimal Monto { get; set; } // decimal(30, 8)
		[Column, Nullable] public string CodigoBPIN { get; set; } // varchar(200)
		[Column, NotNull] public DateTime FechaDeGiro { get; set; } // smalldatetime
		[Column, NotNull] public int AñoFiscal { get; set; } // int
		[Column, Nullable] public string NITEjecutor { get; set; } // nvarchar(11)
		[Column, Nullable] public string NombreEjecutor { get; set; } // varchar(500)
		[Column, Nullable] public string IdDepartamento { get; set; } // varchar(10)
		[Column, Nullable] public string IdMunicipio { get; set; } // varchar(10)
		[Column, NotNull] public int IdTipoDeFinanciacion { get; set; } // int
		[Column, NotNull] public DateTime FechaUltimaModificacion { get; set; } // datetime
		[Column, NotNull] public int ConsecutivoCarga { get; set; } // int

		#region Associations

		/// <summary>
		/// FK_Giro_EnteTerritorial
		/// </summary>
		[Association(ThisKey = "IdDepartamento, IdMunicipio", OtherKey = "IdDepartamento, IdMunicipio", CanBeNull = true, Relationship = LinqToDB.Mapping.Relationship.ManyToOne, KeyName = "FK_Giro_EnteTerritorial", BackReferenceName = "Giroes")]
		public EnteTerritorial EnteTerritorial { get; set; }

		/// <summary>
		/// FK_Giro_Fuente
		/// </summary>
		[Association(ThisKey = "IdTipoRecurso, IdTipoEntidad, IdEntidad", OtherKey = "IdTipoRecurso, IdTipoEntidad, IdEntidad", CanBeNull = false, Relationship = LinqToDB.Mapping.Relationship.ManyToOne, KeyName = "FK_Giro_Fuente", BackReferenceName = "Giroes")]
		public Fuente Fuente { get; set; }

		#endregion
	}

	[Table(Schema = "dbo", Name = "GratificacionCovid")]
	public partial class GratificacionCovid
	{
		[Column, Nullable] public int? Anio { get; set; } // int
		[Column, Nullable] public int? Mes { get; set; } // int
		[Column, Nullable] public int? NT { get; set; } // int
		[Column, Nullable] public int? IdObjetoGasto { get; set; } // int
		[Column, Nullable] public string CI { get; set; } // nvarchar(50)
		[Column, Nullable] public string Nombres { get; set; } // nvarchar(100)
		[Column, Nullable] public string Apellidos { get; set; } // nvarchar(100)
		[Column, Nullable] public string GrupoOcupacional { get; set; } // nvarchar(100)
		[Column, Nullable] public decimal? MontoRemitido { get; set; } // decimal(18, 2)
	}

	[Table(Schema = "dbo", Name = "HistoriaEstado")]
	public partial class HistoriaEstado
	{
		[Column("idHistoriaEstado"), PrimaryKey, Identity] public int IdHistoriaEstado { get; set; } // int
		[Column(), NotNull] public int IdProyecto { get; set; } // int
		[Column(), NotNull] public int IdEstado { get; set; } // int
		[Column(), NotNull] public DateTime FechaRegistro { get; set; } // datetime
		[Column(), NotNull] public bool ActualSiNo { get; set; } // bit
		[Column(), NotNull] public int IdFase { get; set; } // int
		[Column(), NotNull] public int IdEtapa { get; set; } // int
		[Column(), NotNull] public DateTime FechaUltimaModificacion { get; set; } // datetime
		[Column(), NotNull] public int ConsecutivoCarga { get; set; } // int
		[Column(), NotNull] public string Modificadopor { get; set; } // varchar(30)

		#region Associations

		/// <summary>
		/// FK_HistoriaEstado_Fase
		/// </summary>
		[Association(ThisKey = "IdFase", OtherKey = "IdFase", CanBeNull = false, Relationship = LinqToDB.Mapping.Relationship.ManyToOne, KeyName = "FK_HistoriaEstado_Fase", BackReferenceName = "HistoriaEstadoes")]
		public Fase Fase { get; set; }

		/// <summary>
		/// Fk_HistoriaEstadoXEstado
		/// </summary>
		[Association(ThisKey = "IdEstado", OtherKey = "IdEstado", CanBeNull = false, Relationship = LinqToDB.Mapping.Relationship.ManyToOne, KeyName = "Fk_HistoriaEstadoXEstado", BackReferenceName = "FkHistoriaEstadoXEstadoes")]
		public Estado FkHistoriaEstadoXEstado { get; set; }

		/// <summary>
		/// Fk_HistoriaEstadoXProyecto
		/// </summary>
		[Association(ThisKey = "IdProyecto", OtherKey = "IdProyecto", CanBeNull = false, Relationship = LinqToDB.Mapping.Relationship.ManyToOne, KeyName = "Fk_HistoriaEstadoXProyecto", BackReferenceName = "FkHistoriaEstadoXProyectoes")]
		public Proyecto FkHistoriaEstadoXProyecto { get; set; }

		#endregion
	}

    [Table(Schema = "consulta", Name = "HistoricoAvance_IndicadoresPND_STP")]
    public partial class consulta_HistoricoAvanceIndicadoresPNDStp
    {
        [Column(), PrimaryKey, Identity] public int Id { get; set; } // int
        [Column("idIndicador"), Nullable] public int? IdIndicador { get; set; } // int
        [Column("anioAvance"), Nullable] public string AnioAvance { get; set; } // varchar(20)
        [Column("valorAvance"), Nullable] public string ValorAvance { get; set; } // varchar(255)
    }

    [Table(Schema = "dbo", Name = "Ideas")]
	public partial class Idea
	{
		[Column(), PrimaryKey, Identity] public int IdIdea { get; set; } // int
		[Column("fechaCreacion"), NotNull] public DateTime FechaCreacion { get; set; } // datetime
		[Column("titulo"), Nullable] public string Titulo { get; set; } // varchar(max)
		[Column("descripcioncorta"), Nullable] public string Descripcioncorta { get; set; } // varchar(max)
		[Column("descripcion"), Nullable] public string Descripcion { get; set; } // varchar(max)
		[Column("urlimagen"), Nullable] public string Urlimagen { get; set; } // varchar(max)
	}

	[Table(Schema = "dbo", Name = "IdeaMejora")]
	public partial class IdeaMejora
	{
		[PrimaryKey, Identity] public int IdeaMejoraID { get; set; } // int
		[Column, NotNull] public string Nombre { get; set; } // nvarchar(400)
		[Column, NotNull] public string Email { get; set; } // nvarchar(200)
		[Column, NotNull] public DateTime Fecha { get; set; } // datetime
		[Column, NotNull] public string Categoria { get; set; } // nvarchar(50)
		[Column, NotNull] public string Descripcion { get; set; } // ntext
	}

	[Table(Schema = "dbo", Name = "ImagenesXEnteTerritorial")]
	public partial class ImagenesXEnteTerritorial
	{
		[Identity, PrimaryKey(1)] public int IdImageXEnteTerritorial { get; set; } // int
		[Column, Nullable] public string IdRegion { get; set; } // varchar(10)
		[Column, NotNull] public string IdDepartamento { get; set; } // varchar(10)
		[Column, NotNull] public string IdMunicipio { get; set; } // varchar(10)
		[Column(SkipOnInsert = true, SkipOnUpdate = true), PrimaryKey(2), NotNull] public string IdImage { get; set; } // varchar(42)
		[Column, Nullable] public string UrlImagePequenia { get; set; } // varchar(max)
		[Column, Nullable] public string UrlImageMediana { get; set; } // varchar(max)
		[Column, Nullable] public string UrlImageGrande { get; set; } // varchar(max)
		[Column, Nullable] public string DescripcionImage { get; set; } // varchar(max)
		[Column, Nullable] public string ImageIndicador { get; set; } // varchar(10)
		[Column, NotNull] public DateTime FechaUltimaModificacion { get; set; } // datetime
		[Column, NotNull] public string Modificadopor { get; set; } // varchar(30)
		[Column, NotNull] public int ConsecutivoCarga { get; set; } // int
	}

	[Table(Schema = "dbo", Name = "Indicadores")]
	public partial class Indicadore
	{
		[PrimaryKey(1), NotNull] public int Anio { get; set; } // int
		[PrimaryKey(2), NotNull] public int IdPrograma { get; set; } // int
		[PrimaryKey(3), NotNull] public int CodigoIndicador { get; set; } // int
		[Column, Nullable] public string NombreIndicador { get; set; } // varchar(1000)
		[Column, Nullable] public decimal? AnioBaseIndicador { get; set; } // numeric(4, 0)
		[Column, Nullable] public decimal? MetaIndicador { get; set; } // numeric(22, 2)
		[Column, Nullable] public decimal? AvanceIndicador { get; set; } // numeric(22, 2)
		[Column, Nullable] public decimal? DenominadorIndicador { get; set; } // numeric(22, 2)
		[Column, Nullable] public decimal? PorcentajeMeta { get; set; } // numeric(22, 2)
		[Column, Nullable] public decimal? PorcentajeAvance { get; set; } // numeric(22, 2)
		[Column, Nullable] public string TipoIndicador { get; set; } // varchar(50)
		[Column, Nullable] public string TamanoIndicador { get; set; } // varchar(50)
		[Column, Nullable] public string Tipo2Indicador { get; set; } // varchar(50)
		[Column, Nullable] public string FecuenciaIndicador { get; set; } // varchar(50)
		[Column, Nullable] public string CodigoBPIN { get; set; } // varchar(30)
		[Column, Nullable] public DateTime? FechaUltimaModificacion { get; set; } // datetime
	}

	[Table(Schema = "dbo", Name = "Indicadores2021")]
	public partial class Indicadores2021
	{
		[Column("ANI_ANIOPRE"), Nullable] public decimal? AniAniopre { get; set; } // numeric(4, 0)
		[Column("codigoprogramanegocio"), Nullable] public int? Codigoprogramanegocio { get; set; } // int
		[Column("NEN_CODIGO"), Nullable] public decimal? NenCodigo { get; set; } // numeric(2, 0)
		[Column("ENT_CODIGO"), Nullable] public decimal? EntCodigo { get; set; } // numeric(3, 0)
		[Column("TIP_CODIGO"), Nullable] public decimal? TipCodigo { get; set; } // numeric(1, 0)
		[Column("PRO_CODIGO"), Nullable] public decimal? ProCodigo { get; set; } // numeric(3, 0)
		[Column("SUB_CODIGO"), Nullable] public decimal? SubCodigo { get; set; } // numeric(2, 0)
		[Column("PRY_CODIGO"), Nullable] public decimal? PryCodigo { get; set; } // numeric(2, 0)
		[Column("IND_CODIGO"), Nullable] public decimal? IndCodigo { get; set; } // numeric(4, 0)
		[Column("IND_NOMBRE"), Nullable] public string IndNombre { get; set; } // varchar(8000)
		[Column("IND_ANIOBASE"), Nullable] public decimal? IndAniobase { get; set; } // numeric(4, 0)
		[Column("ENT_NOMBRE"), Nullable] public string EntNombre { get; set; } // varchar(60)
		[Column("PRO_NOMBRE"), Nullable] public string ProNombre { get; set; } // varchar(60)
		[Column("BCA_META"), Nullable] public decimal? BcaMeta { get; set; } // numeric(22, 2)
		[Column("BCA_AVANCE"), Nullable] public decimal? BcaAvance { get; set; } // numeric(22, 2)
		[Column("BCA_DENOMINADOR"), Nullable] public decimal? BcaDenominador { get; set; } // numeric(22, 2)
		[Column("BCA_PORCMETA"), Nullable] public decimal? BcaPorcmeta { get; set; } // numeric(22, 2)
		[Column("BCA_PORCAVANC"), Nullable] public decimal? BcaPorcavanc { get; set; } // numeric(22, 2)
		[Column("TIN_NOMBRE"), Nullable] public string TinNombre { get; set; } // varchar(50)
		[Column("TAM_NOMBRE"), Nullable] public string TamNombre { get; set; } // varchar(50)
		[Column("TDI_NOMBRE"), Nullable] public string TdiNombre { get; set; } // varchar(50)
		[Column("IND_FRECUEN"), Nullable] public string IndFrecuen { get; set; } // varchar(50)
		[Column("PRY_CLASIFICACION"), Nullable] public string PryClasificacion { get; set; } // varchar(3)
		[Column("CODIGO_SNIP"), Nullable] public string CodigoSnip { get; set; } // varchar(60)
	}

	[Table(Schema = "dbo", Name = "IndicadoresTexto")]
	public partial class IndicadoresTexto
	{
		[PrimaryKey, NotNull] public int CodigoIndicador { get; set; } // int
		[Column, Nullable] public string Texto { get; set; } // nvarchar(500)
		[Column, NotNull] public string Negrilla { get; set; } // nvarchar(500)
	}

	[Table(Schema = "dbo", Name = "InformeAvanceFisicoProyecto")]
	public partial class InformeAvanceFisicoProyecto
	{
		[PrimaryKey, Identity] public int IdInformeAvanceFisico { get; set; } // int
		[Column, NotNull] public int IdProyecto { get; set; } // int
		[Column, NotNull] public DateTime FechaInicioReporte { get; set; } // datetime
		[Column, NotNull] public DateTime FechaFinReporte { get; set; } // datetime
		[Column, Nullable] public string Descripcion { get; set; } // varchar(4000)
		[Column, NotNull] public DateTime FechaUltimaModificacion { get; set; } // datetime
		[Column, NotNull] public int ConsecutivoCarga { get; set; } // int
		[Column, NotNull] public string Modificadopor { get; set; } // varchar(30)

		#region Associations

		/// <summary>
		/// Fk_InformeAvanceFisicoProyectoXProyecto
		/// </summary>
		[Association(ThisKey = "IdProyecto", OtherKey = "IdProyecto", CanBeNull = false, Relationship = LinqToDB.Mapping.Relationship.ManyToOne, KeyName = "Fk_InformeAvanceFisicoProyectoXProyecto", BackReferenceName = "FkInformeAvanceFisicoProyectoXProyectoes")]
		public Proyecto FkInformeAvanceFisicoProyectoXProyecto { get; set; }

		#endregion
	}

	[Table(Schema = "dbo", Name = "Licitaciones")]
	public partial class Licitacione
	{
		[Column("ID_Proyecto"), NotNull] public int IdProyecto { get; set; } // int
		[Column("Codigo_BPIN"), Nullable] public string CodigoBpin { get; set; } // varchar(max)
		[Column(), NotNull] public string URL { get; set; } // varchar(4000)
		[Column(), NotNull] public string Id { get; set; } // varchar(4000)
		[Column(), NotNull] public string EstadoPublicacion { get; set; } // varchar(4000)
		[Column(), NotNull] public string NroLicitacion { get; set; } // varchar(4000)
		[Column(), NotNull] public string Objeto { get; set; } // varchar(4000)
		[Column(), NotNull] public DateTime FechaPublicacion { get; set; } // datetime
		[Column(), NotNull] public DateTime PresentacionOfertas { get; set; } // datetime
		[Column(), NotNull] public DateTime FechaLimiteConsultas { get; set; } // datetime
		[Column(), NotNull] public long Beneficiarios { get; set; } // bigint
		[Column(), NotNull] public DateTime AperturaOfertas { get; set; } // datetime
		[Column(), NotNull] public string Pregunta { get; set; } // varchar(4000)
		[Column(), NotNull] public string FechaLimiteParaContestar { get; set; } // varchar(4000)
		[Column(), NotNull] public string EstadoNombre { get; set; } // varchar(4000)
		[Column(), NotNull] public string EstadoPublicacionNombre { get; set; } // varchar(4000)
		[Column(), NotNull] public string CategoriaNombre { get; set; } // varchar(4000)
		[Column(), NotNull] public string LocalidadNombre { get; set; } // varchar(4000)
		[Column(), NotNull] public string TipoMoneda { get; set; } // varchar(4000)
		[Column(), NotNull] public string Presupuesto { get; set; } // varchar(4000)
		[Column(), NotNull] public int TotalRows { get; set; } // int
		[Column(), NotNull] public DateTime FechaUltimaModificacion { get; set; } // datetime
		[Column(), NotNull] public int ConsecutivoCarga { get; set; } // int
		[Column(), NotNull] public string Modificadopor { get; set; } // varchar(30)
	}

	[Table(Schema = "dbo", Name = "Liquidacion")]
	public partial class Liquidacion
	{
		[PrimaryKey, Identity] public int IdLiquidación { get; set; } // int
		[Column, NotNull] public string IdCampoOProyecto { get; set; } // nvarchar(50)
		[Column, NotNull] public decimal ValorLiquidado { get; set; } // decimal(20, 8)
		[Column, Nullable] public string IdDepartamento { get; set; } // varchar(10)
		[Column, Nullable] public string IdMunicipio { get; set; } // varchar(10)
		[Column, NotNull] public string IdPeriocidad { get; set; } // nvarchar(5)
		[Column, Nullable] public string IdLiquidacionNegocio { get; set; } // nvarchar(8)
		[Column, NotNull] public string IdRecursoNatural { get; set; } // varchar(10)
		[Column, NotNull] public char IdTipoRecursoNatural { get; set; } // varchar(1)
		[Column, NotNull] public int PeriodoLiquidado { get; set; } // int
		[Column, NotNull] public DateTime FechaInicioPeriodo { get; set; } // smalldatetime
		[Column, NotNull] public DateTime FechaFinPeriodo { get; set; } // smalldatetime
		[Column, NotNull] public string IdTipoContraprestacion { get; set; } // nvarchar(50)
		[Column, Nullable] public decimal? TRM { get; set; } // decimal(18, 2)
		[Column, NotNull] public int AñoLiquidado { get; set; } // int
		[Column, NotNull] public int IdTipoDeFinanciacion { get; set; } // int
		[Column, NotNull] public DateTime FechaUltimaModificacion { get; set; } // datetime
		[Column, NotNull] public int ConsecutivoCarga { get; set; } // int
		/// <summary>
		/// Titulo Minero o Pozo Petrolifero
		/// </summary>
		[Column, NotNull] public string IdTipoCampoOProyecto { get; set; } // nvarchar(50)

		#region Associations

		/// <summary>
		/// FK_Liquidacion_CampoOProyecto
		/// </summary>
		[Association(ThisKey = "IdCampoOProyecto, IdTipoCampoOProyecto", OtherKey = "IdCampoOProyecto, IdTipoCampoOProyecto", CanBeNull = false, Relationship = LinqToDB.Mapping.Relationship.ManyToOne, KeyName = "FK_Liquidacion_CampoOProyecto", BackReferenceName = "Liquidacions")]
		public CampoOProyecto CampoOProyecto { get; set; }

		/// <summary>
		/// FK_LiquidacionProduccionANH_EnteTerritorial
		/// </summary>
		[Association(ThisKey = "IdDepartamento, IdMunicipio", OtherKey = "IdDepartamento, IdMunicipio", CanBeNull = true, Relationship = LinqToDB.Mapping.Relationship.ManyToOne, KeyName = "FK_LiquidacionProduccionANH_EnteTerritorial", BackReferenceName = "LiquidacionProduccionAnhs")]
		public EnteTerritorial LiquidacionProduccionANHEnteTerritorial { get; set; }

		/// <summary>
		/// FK_Liquidacion_Periodicidad
		/// </summary>
		[Association(ThisKey = "IdPeriocidad", OtherKey = "IdPeriodicidad", CanBeNull = false, Relationship = LinqToDB.Mapping.Relationship.ManyToOne, KeyName = "FK_Liquidacion_Periodicidad", BackReferenceName = "Liquidacions")]
		public Periodicidad Periodicidad { get; set; }

		/// <summary>
		/// FK_Liquidacion_RecursoNatural1
		/// </summary>
		[Association(ThisKey = "IdRecursoNatural, IdTipoRecursoNatural", OtherKey = "IdRecursoNatural, IdTipoRecursoNatural", CanBeNull = false, Relationship = LinqToDB.Mapping.Relationship.ManyToOne, KeyName = "FK_Liquidacion_RecursoNatural1", BackReferenceName = "LiquidacionRecursoNaturals")]
		public RecursoNatural RecursoNatural { get; set; }

		/// <summary>
		/// FK_Liquidacion_TipoContraprestacion
		/// </summary>
		[Association(ThisKey = "IdTipoContraprestacion", OtherKey = "IdTipoContraprestacion", CanBeNull = false, Relationship = LinqToDB.Mapping.Relationship.ManyToOne, KeyName = "FK_Liquidacion_TipoContraprestacion", BackReferenceName = "Liquidacions")]
		public TipoContraprestacion TipoContraprestacion { get; set; }

		/// <summary>
		/// FK_Liquidacion_TipoDeFinanciacion
		/// </summary>
		[Association(ThisKey = "IdTipoDeFinanciacion", OtherKey = "IdTipoFinanciacion", CanBeNull = false, Relationship = LinqToDB.Mapping.Relationship.ManyToOne, KeyName = "FK_Liquidacion_TipoDeFinanciacion", BackReferenceName = "Liquidacions")]
		public TipoDeFinanciacion TipoDeFinanciacion { get; set; }

		#endregion
	}

	[Table(Schema = "dbo", Name = "MedioMapaIUsuario")]
	public partial class MedioMapaIUsuario
	{
		[PrimaryKey, Identity] public int IdMedioMapaIUsuario { get; set; } // int
		[Column, NotNull] public string NombreMedio { get; set; } // varchar(100)
		[Column, Nullable] public DateTime? FechaCreacion { get; set; } // datetime

		#region Associations

		/// <summary>
		/// Fk_UsuarioXMedioMapaIUsuario_BackReference
		/// </summary>
		[Association(ThisKey = "IdMedioMapaIUsuario", OtherKey = "IdMedioMapaIUsuario", CanBeNull = true, Relationship = LinqToDB.Mapping.Relationship.OneToMany, IsBackReference = true)]
		public IEnumerable<Usuario> FkUsuarioXMedioMapaIUsuarios { get; set; }

		#endregion
	}

	[Table(Schema = "dbo", Name = "MeGusta")]
	public partial class MeGusta
	{
		[Column(), PrimaryKey, Identity] public int IdMeGusta { get; set; } // int
		[Column(SkipOnInsert = true, SkipOnUpdate = true), NotNull] public string IdMegustaUnico { get; set; } // varchar(38)
		[Column(), NotNull] public int IdUsuario { get; set; } // int
		[Column(), Nullable] public int? IdFoto { get; set; } // int
		[Column(), Nullable] public int? IdFotoUsuario { get; set; } // int
		[Column("MeGusta"), NotNull] public bool MeGustaColumn { get; set; } // bit
		[Column(), NotNull] public bool NoMeGusta { get; set; } // bit
		[Column(), NotNull] public int IdProyecto { get; set; } // int
		[Column(), Nullable] public DateTime? Fecha { get; set; } // datetime

		#region Associations

		/// <summary>
		/// Fk_MeGustaXProyecto
		/// </summary>
		[Association(ThisKey = "IdProyecto", OtherKey = "IdProyecto", CanBeNull = false, Relationship = LinqToDB.Mapping.Relationship.ManyToOne, KeyName = "Fk_MeGustaXProyecto", BackReferenceName = "FkMeGustaXProyectoes")]
		public Proyecto FkMeGustaXProyecto { get; set; }

		/// <summary>
		/// Fk_MeGustaXUsuario
		/// </summary>
		[Association(ThisKey = "IdUsuario", OtherKey = "IdUsuario", CanBeNull = false, Relationship = LinqToDB.Mapping.Relationship.ManyToOne, KeyName = "Fk_MeGustaXUsuario", BackReferenceName = "FkMeGustaXUsuarios")]
		public Usuario FkMeGustaXUsuario { get; set; }

		#endregion
	}

	[Table(Schema = "dbo", Name = "MetaIndicadorProducto")]
	public partial class MetaIndicadorProducto
	{
		[Column("idMetaIndicadorProducto"), PrimaryKey, Identity] public int IdMetaIndicadorProducto { get; set; } // int
		[Column(), NotNull] public double ValorMeta { get; set; } // float
		[Column(), NotNull] public DateTime FechaInicioMeta { get; set; } // datetime
		[Column(), NotNull] public DateTime FechaFinMeta { get; set; } // datetime
		[Column(), NotNull] public DateTime FechaUltimaModificacion { get; set; } // datetime
		[Column(), NotNull] public int ConsecutivoCarga { get; set; } // int
		[Column(), NotNull] public string Modificadopor { get; set; } // varchar(30)
		[Column("idProducto"), NotNull] public int IdProducto { get; set; } // int
		[Column(), NotNull] public string NombreIndicador { get; set; } // varchar(200)
		[Column(), NotNull] public int IdIndicador { get; set; } // int

		#region Associations

		/// <summary>
		/// FK_MetaIndicadorProducto_Producto
		/// </summary>
		[Association(ThisKey = "IdProducto", OtherKey = "IdProducto", CanBeNull = false, Relationship = LinqToDB.Mapping.Relationship.ManyToOne, KeyName = "FK_MetaIndicadorProducto_Producto", BackReferenceName = "MetaIndicadorProductoes")]
		public Producto Producto { get; set; }

		#endregion
	}

	[Table(Schema = "dbo", Name = "Municipio")]
	public partial class Municipio
	{
		[Column, NotNull] public string IdMunicipio { get; set; } // varchar(20)
		[Column, NotNull] public string NombreMunicipio { get; set; } // varchar(100)
		[Column, Nullable] public SqlGeography GeoPoligonoEntidadTerritorial { get; set; } // geography
		[Column, Nullable] public string CodigoDANE { get; set; } // varchar(50)
		[Column, Nullable] public SqlGeography TopLeft { get; set; } // geography
		[Column, Nullable] public SqlGeography BottomRight { get; set; } // geography
		[Column, Nullable] public string Tipo { get; set; } // varchar(50)
		[Column, Nullable] public int? Version { get; set; } // int
		[Column, Nullable] public SqlGeography Centroide { get; set; } // geography
		[Column, Nullable] public string Geojson { get; set; } // varchar(max)
		[Column, Nullable] public string IdDepartamento { get; set; } // varchar(20)
		[Column, NotNull] public DateTime FechaUltimaModificacion { get; set; } // datetime
		[Column, NotNull] public string ModificadoPor { get; set; } // varchar(50)
		[Column, NotNull] public int ConsecutivoCarga { get; set; } // int
	}

	[Table(Schema = "dbo", Name = "ObjetivoEspecifico")]
	public partial class ObjetivoEspecifico
	{
		[PrimaryKey, NotNull] public int IdObjetivoEspecifico { get; set; } // int
		[Column, NotNull] public int IdProyecto { get; set; } // int
		[Column, NotNull] public string NombreObjetivoEspecifico { get; set; } // varchar(max)
		[Column, NotNull] public DateTime FechaUltimaModificacion { get; set; } // datetime
		[Column, NotNull] public int ConsecutivoCarga { get; set; } // int
		[Column, NotNull] public string Modificadopor { get; set; } // varchar(30)

		#region Associations

		/// <summary>
		/// Fk_ObjetivoEspecificoXProyecto
		/// </summary>
		[Association(ThisKey = "IdProyecto", OtherKey = "IdProyecto", CanBeNull = false, Relationship = LinqToDB.Mapping.Relationship.ManyToOne, KeyName = "Fk_ObjetivoEspecificoXProyecto", BackReferenceName = "FkObjetivoEspecificoXProyectoes")]
		public Proyecto FkObjetivoEspecificoXProyecto { get; set; }

		/// <summary>
		/// FK_Producto_ObjetivoEspecifico_BackReference
		/// </summary>
		[Association(ThisKey = "IdObjetivoEspecifico", OtherKey = "IdObjetivoEspecifico", CanBeNull = true, Relationship = LinqToDB.Mapping.Relationship.OneToMany, IsBackReference = true)]
		public IEnumerable<Producto> Productos { get; set; }

		#endregion
	}

	[Table(Schema = "dbo", Name = "Opciones")]
	public partial class Opcione
	{
		[PrimaryKey, NotNull] public string Variable { get; set; } // varchar(150)
		[Column, NotNull] public string Valor { get; set; } // nvarchar(150)
	}

	[Table(Schema = "dbo", Name = "OpcionRespuestas")]
	public partial class OpcionRespuesta
	{
		[PrimaryKey, Identity] public int IdOpcionRespuestas { get; set; } // int
		[Column, NotNull] public int IdPregunta { get; set; } // int
		[Column, Nullable] public string EtiquetaOpcion { get; set; } // varchar(200)
		[Column, Nullable] public int? EstadoRespuesta { get; set; } // int
		[Column, Nullable] public int? Orden { get; set; } // int
		[Column, Nullable] public DateTime? FechaInicio { get; set; } // datetime
		[Column, Nullable] public DateTime? FechaFin { get; set; } // datetime

		#region Associations

		/// <summary>
		/// Fk_OpcionRespuestasxPreguntaCuestionario
		/// </summary>
		[Association(ThisKey = "IdPregunta", OtherKey = "IdPregunta", CanBeNull = false, Relationship = LinqToDB.Mapping.Relationship.ManyToOne, KeyName = "Fk_OpcionRespuestasxPreguntaCuestionario", BackReferenceName = "FkOpcionRespuestasxPreguntaCuestionarios")]
		public PreguntaCuestionario FkOpcionRespuestasxPreguntaCuestionario { get; set; }

		/// <summary>
		/// Fk_RespuestaCuestionarioxOpcionRespuesta_BackReference
		/// </summary>
		[Association(ThisKey = "IdOpcionRespuestas", OtherKey = "IdOpcionRespuesta", CanBeNull = true, Relationship = LinqToDB.Mapping.Relationship.OneToMany, IsBackReference = true)]
		public IEnumerable<RespuestaCuestionario> FkRespuestaCuestionarioxOpcionRespuestas { get; set; }

		#endregion
	}

	[Table(Schema = "dbo", Name = "ParametrizacionTitulos")]
	public partial class ParametrizacionTitulo
	{
		[Column("idParametrizacion"), PrimaryKey, Identity] public int IdParametrizacion { get; set; } // int
		[Column(), NotNull] public string Texto { get; set; } // varchar(max)
		[Column(), NotNull] public string Pagina { get; set; } // varchar(200)
		[Column(), NotNull] public string Seccion { get; set; } // varchar(200)
		[Column(), NotNull] public string Label { get; set; } // varchar(200)
		[Column(), NotNull] public string Llave { get; set; } // varchar(200)
	}

	[Table(Schema = "dbo", Name = "Periodicidad")]
	public partial class Periodicidad
	{
		[PrimaryKey, NotNull] public string IdPeriodicidad { get; set; } // nvarchar(5)
		[Column, NotNull] public string NombrePeriocidad { get; set; } // varchar(250)
		[Column, NotNull] public int ConsecutivoCarga { get; set; } // int

		#region Associations

		/// <summary>
		/// FK_Fiscalizacion_Periodicidad_BackReference
		/// </summary>
		[Association(ThisKey = "IdPeriodicidad", OtherKey = "IdPeriodicidad", CanBeNull = true, Relationship = LinqToDB.Mapping.Relationship.OneToMany, IsBackReference = true)]
		public IEnumerable<Fiscalizacion> Fiscalizacions { get; set; }

		/// <summary>
		/// FK_Liquidacion_Periodicidad_BackReference
		/// </summary>
		[Association(ThisKey = "IdPeriodicidad", OtherKey = "IdPeriocidad", CanBeNull = true, Relationship = LinqToDB.Mapping.Relationship.OneToMany, IsBackReference = true)]
		public IEnumerable<Liquidacion> Liquidacions { get; set; }

		/// <summary>
		/// FK_Produccion_Periodicidad_BackReference
		/// </summary>
		[Association(ThisKey = "IdPeriodicidad", OtherKey = "IdPeriodicidad", CanBeNull = true, Relationship = LinqToDB.Mapping.Relationship.OneToMany, IsBackReference = true)]
		public IEnumerable<Produccion> Produccions { get; set; }

		#endregion
	}

  [Table(Schema = "consulta", Name = "Objetivos_PND_STP")]
  public partial class consulta_ObjetivosPndStp
  {
    [Column("idPlan"), NotNull] public int IdPlan { get; set; } // int
    [Column("codPlan"), Nullable] public int? CodPlan { get; set; } // int
    [Column("nombrePlan"), Nullable] public string NombrePlan { get; set; } // varchar(255)
    [Column("idEje"), NotNull] public int IdEje { get; set; } // int
    [Column("codEje"), Nullable] public int? CodEje { get; set; } // int
    [Column("nombreEje"), Nullable] public string NombreEje { get; set; } // varchar(255)
    [Column("idLinea"), NotNull] public int IdLinea { get; set; } // int
    [Column("codLinea"), Nullable] public int? CodLinea { get; set; } // int
    [Column("nombreLinea"), Nullable] public string NombreLinea { get; set; } // varchar(255)
    [Column("idObjetivoEstrategico"), NotNull] public int IdObjetivoEstrategico { get; set; } // int
    [Column("codObjetivoEstrategico"), Nullable] public int? CodObjetivoEstrategico { get; set; } // int
    [Column("nombreObjetivoEstrategico"), Nullable] public string NombreObjetivoEstrategico { get; set; } // varchar(255)
    [Column("descripcionObjetivoEstrategico"), Nullable] public string DescripcionObjetivoEstrategico { get; set; } // varchar(255)
    [Column("idTipoObjetivo"), NotNull] public int IdTipoObjetivo { get; set; } // int
    [Column("codTipoObjetivo"), Nullable] public int? CodTipoObjetivo { get; set; } // int
    [Column("nombreObjetivo"), Nullable] public string NombreObjetivo { get; set; } // varchar(255)
    [Column("idObjetivoEspecifico"), NotNull] public int IdObjetivoEspecifico { get; set; } // int
    [Column("codObjetivoEspecifico"), Nullable] public int? CodObjetivoEspecifico { get; set; } // int
    [Column("nombreObjetivoEspecifico"), Nullable] public string NombreObjetivoEspecifico { get; set; } // varchar(255)
  }

  [Table(Schema = "consulta", Name = "PND_x_Entidades_Presupuesto_STP")]
    public partial class consulta_PndXEntidadesPresupuestoStp
    {
        [Column("idPlan"), NotNull] public int IdPlan { get; set; } // int
        [Column("codPlan"), Nullable] public int? CodPlan { get; set; } // int
        [Column("nombrePlan"), Nullable] public string NombrePlan { get; set; } // varchar(255)
        [Column("idEje"), NotNull] public int IdEje { get; set; } // int
        [Column("codEje"), Nullable] public int? CodEje { get; set; } // int
        [Column("nombreEje"), Nullable] public string NombreEje { get; set; } // varchar(255)
        [Column("idLinea"), NotNull] public int IdLinea { get; set; } // int
        [Column("codLinea"), Nullable] public int? CodLinea { get; set; } // int
        [Column("nombreLinea"), Nullable] public string NombreLinea { get; set; } // varchar(255)
        [Column("idObjetivoEstrategico"), NotNull] public int IdObjetivoEstrategico { get; set; } // int
        [Column("codObjetivoEstrategico"), Nullable] public int? CodObjetivoEstrategico { get; set; } // int
        [Column("nombreObjetivoEstrategico"), Nullable] public string NombreObjetivoEstrategico { get; set; } // varchar(255)
        [Column("descripcionObjetivoEstrategico"), Nullable] public string DescripcionObjetivoEstrategico { get; set; } // varchar(255)
        [Column("idTipoObjetivo"), NotNull] public int IdTipoObjetivo { get; set; } // int
        [Column("codTipoObjetivo"), Nullable] public int? CodTipoObjetivo { get; set; } // int
        [Column("nombreTipoObjetivo"), Nullable] public string NombreTipoObjetivo { get; set; } // varchar(255)
        [Column("idObjetivoEspecifico"), NotNull] public int IdObjetivoEspecifico { get; set; } // int
        [Column("codObjetivoEspecifico"), Nullable] public int? CodObjetivoEspecifico { get; set; } // int
        [Column("nombreObjetivoEspecifico"), Nullable] public string NombreObjetivoEspecifico { get; set; } // varchar(255)
        [Column("sector"), Nullable] public string Sector { get; set; } // varchar(100)
        [Column("idNivel"), NotNull] public int IdNivel { get; set; } // int
        [Column("codNivel"), Nullable] public int? CodNivel { get; set; } // int
        [Column("nombreNivel"), Nullable] public string NombreNivel { get; set; } // varchar(255)
        [Column("idEntidad"), NotNull] public int IdEntidad { get; set; } // int
        [Column("codEntidad"), Nullable] public int? CodEntidad { get; set; } // int
        [Column("nombreEntidad"), Nullable] public string NombreEntidad { get; set; } // varchar(255)
        [Column("año"), Nullable] public int? Año { get; set; } // int
        [Column("planificado"), Nullable] public decimal? Planificado { get; set; } // numeric(38, 2)
        [Column("ejecutado"), Nullable] public decimal? Ejecutado { get; set; } // numeric(38, 2)
    }

    [Table(Schema = "consulta", Name = "PND_x_Indicadores_Meta_Avance_STP")]
    public partial class consulta_PndXIndicadoresMetaAvanceStp
    {
        [Column("idEje"), NotNull] public int IdEje { get; set; } // int
        [Column("codEje"), Nullable] public int? CodEje { get; set; } // int
        [Column("nombreEje"), Nullable] public string NombreEje { get; set; } // varchar(255)
        [Column("idObjetivoEstrategico"), NotNull] public int IdObjetivoEstrategico { get; set; } // int
        [Column("codObjetivoEstrategico"), Nullable] public int? CodObjetivoEstrategico { get; set; } // int
        [Column("nombreObjetivoEstrategico"), Nullable] public string NombreObjetivoEstrategico { get; set; } // varchar(255)
        [Column("idObjetivoEspecifico"), NotNull] public int IdObjetivoEspecifico { get; set; } // int
        [Column("codObjetivoEspecifico"), Nullable] public int? CodObjetivoEspecifico { get; set; } // int
        [Column("nombreObjetivoEspecifico"), Nullable] public string NombreObjetivoEspecifico { get; set; } // varchar(255)
        [Column("idIndicador"), NotNull] public int IdIndicador { get; set; } // int
        [Column("codIndicador"), Nullable] public int? CodIndicador { get; set; } // int
        [Column("nombre"), Nullable] public string Nombre { get; set; } // varchar(255)
        [Column("metodoDeCalculo"), Nullable] public string MetodoDeCalculo { get; set; } // varchar(255)
        [Column("meta"), Nullable] public string Meta { get; set; } // nvarchar(max)
        [Column("vencimientoMeta"), Nullable] public string VencimientoMeta { get; set; } // nvarchar(max)
        [Column("avance"), Nullable] public string Avance { get; set; } // nvarchar(max)
        [Column("vencimientoAvance"), Nullable] public string VencimientoAvance { get; set; } // nvarchar(max)
    }

    [Table(Schema = "dbo", Name = "PreguntaCuestionario")]
	public partial class PreguntaCuestionario
	{
		[PrimaryKey, Identity] public int IdPregunta { get; set; } // int
		[Column, NotNull] public int IdEstado { get; set; } // int
		[Column, NotNull] public string TextoPregunta { get; set; } // varchar(200)
		[Column, NotNull] public string TextoExplicativo { get; set; } // varchar(200)
		[Column, Nullable] public string TextoRespuestas { get; set; } // varchar(200)
		[Column, Nullable] public int? EstadoPregunta { get; set; } // int
		[Column, Nullable] public int? Orden { get; set; } // int
		[Column, Nullable] public DateTime? FechaInicio { get; set; } // datetime
		[Column, Nullable] public DateTime? FechaFin { get; set; } // datetime

		#region Associations

		/// <summary>
		/// Fk_OpcionRespuestasxPreguntaCuestionario_BackReference
		/// </summary>
		[Association(ThisKey = "IdPregunta", OtherKey = "IdPregunta", CanBeNull = true, Relationship = LinqToDB.Mapping.Relationship.OneToMany, IsBackReference = true)]
		public IEnumerable<OpcionRespuesta> FkOpcionRespuestasxPreguntaCuestionarios { get; set; }

		/// <summary>
		/// Fk_PreguntaCuestionarioxEstadoHomologado
		/// </summary>
		[Association(ThisKey = "IdEstado", OtherKey = "IdEstado", CanBeNull = false, Relationship = LinqToDB.Mapping.Relationship.ManyToOne, KeyName = "Fk_PreguntaCuestionarioxEstadoHomologado", BackReferenceName = "FkPreguntaCuestionarioxEstadoHomologadoes")]
		public EstadoHomologado FkPreguntaCuestionarioxEstadoHomologado { get; set; }

		/// <summary>
		/// Fk_RespuestaCuestionarioxPreguntaCuestionario_BackReference
		/// </summary>
		[Association(ThisKey = "IdPregunta", OtherKey = "Idpregunta", CanBeNull = true, Relationship = LinqToDB.Mapping.Relationship.OneToMany, IsBackReference = true)]
		public IEnumerable<RespuestaCuestionario> FkRespuestaCuestionarioxPreguntaCuestionarios { get; set; }

		#endregion
	}

	[Table(Schema = "dbo", Name = "Presupuesto")]
	public partial class Presupuesto
	{
		[PrimaryKey(1), NotNull] public int IdTipoRecurso { get; set; } // int
		[PrimaryKey(2), NotNull] public int IdTipoEntidad { get; set; } // int
		[PrimaryKey(3), NotNull] public string IdEntidad { get; set; } // varchar(30)
		[PrimaryKey(4), NotNull] public string IdDepartamento { get; set; } // varchar(10)
		[PrimaryKey(5), NotNull] public string IdMunicipio { get; set; } // varchar(10)
		[PrimaryKey(6), NotNull] public DateTime InicioVigencia { get; set; } // smalldatetime
		[PrimaryKey(7), NotNull] public DateTime FinVigencia { get; set; } // smalldatetime
		[Column, Nullable] public string NombreEntidad { get; set; } // varchar(150)
		[Column, NotNull] public decimal ValorMonto { get; set; } // decimal(30, 8)
		[Column, NotNull] public int IdTipoDeFinanciacion { get; set; } // int
		[Column, NotNull] public DateTime FechaUltimaModificacion { get; set; } // datetime
		[Column, NotNull] public int ConsecutivoCarga { get; set; } // int
	}

	[Table(Schema = "dbo", Name = "PresupuestoObejetoGasto")]
	public partial class PresupuestoObejetoGasto
	{
		[Column(), Nullable] public double? Nivelent { get; set; } // float
		[Column("Cod Entidad"), Nullable] public double? CodEntidad { get; set; } // float
		[Column(), Nullable] public string Entidad { get; set; } // nvarchar(255)
		[Column("Clase Programa"), Nullable] public double? ClasePrograma { get; set; } // float
		[Column(), Nullable] public double? Programa { get; set; } // float
		[Column("Nombre Programa"), Nullable] public string NombrePrograma { get; set; } // nvarchar(255)
		[Column("Cod Proy Actividad"), Nullable] public double? CodProyActividad { get; set; } // float
		[Column("Nombre Proy Actividad"), Nullable] public string NombreProyActividad { get; set; } // nvarchar(255)
		[Column("Pry Clasificacion"), Nullable] public string PryClasificacion { get; set; } // nvarchar(255)
		[Column("Codigo Snip"), Nullable] public double? CodigoSnip { get; set; } // float
		[Column(), Nullable] public double? Producto { get; set; } // float
		[Column("Nombre Producto"), Nullable] public string NombreProducto { get; set; } // nvarchar(255)
		[Column(), Nullable] public double? Objeto { get; set; } // float
		[Column("Nombre Objeto"), Nullable] public string NombreObjeto { get; set; } // nvarchar(255)
		[Column(), Nullable] public double? Fuente { get; set; } // float
		[Column(), Nullable] public double? Financiador { get; set; } // float
		[Column(), Nullable] public double? Dpto { get; set; } // float
		[Column(), Nullable] public double? Presupuesto { get; set; } // float
		[Column(), Nullable] public string Avance { get; set; } // nvarchar(255)
		[Column("codigoprogramanegocio"), Nullable] public int? Codigoprogramanegocio { get; set; } // int
	}

    [Table(Schema = "consulta", Name = "Presupuesto_Vigente_x_Sector_MinHacienda")]
    public partial class consulta_PresupuestoVigenteXSectorMinHacienda
    {
        [Column(), Nullable] public string IdNegocioProyecto { get; set; } // varchar(19)
        [Column("codNivelEntidad"), Nullable] public string CodNivelEntidad { get; set; } // varchar(7)
        [Column(), Nullable] public double? CodigoTipo { get; set; } // float
        [Column(), Nullable] public double? CodigoPrograma { get; set; } // float
        [Column(), Nullable] public double? CodigoProyecto { get; set; } // float
        [Column(), Nullable] public int AnioPresupuesto { get; set; } // int
        [Column(), NotNull] public string ClasePrograma { get; set; } // varchar(12)
        [Column(), Nullable] public string NombreEntidad { get; set; } // nvarchar(255)
        [Column("sectores"), NotNull] public string Sectores { get; set; } // varchar(150)
        [Column(), NotNull] public string Clasificacion { get; set; } // varchar(30)
        [Column(), NotNull] public string PryClasificacion { get; set; } // varchar(24)
        [Column(), Nullable] public string NombrePrograma { get; set; } // nvarchar(255)
        [Column(), NotNull] public string Problematica { get; set; } // nvarchar(2000)
        [Column(), NotNull] public string ResultadoIntermedio { get; set; } // nvarchar(1000)
        [Column(), NotNull] public string ResultadoInmediato { get; set; } // nvarchar(2000)
        [Column(), NotNull] public char NombreSubPrograma { get; set; } // varchar(1)
        [Column(), Nullable] public string NombreProyectoActividad { get; set; } // nvarchar(60)
        [Column(), NotNull] public int CodigoClasifFuncional { get; set; } // int
        [Column(), NotNull] public char NombreFuente { get; set; } // varchar(1)
        [Column(), NotNull] public int CodigoVersion { get; set; } // int
        [Column(), NotNull] public int CodigoFuente { get; set; } // int
        [Column("Nen_Codigo"), Nullable] public double? NenCodigo { get; set; } // float
        [Column(), NotNull] public char FinanciadorNombre { get; set; } // varchar(1)
        [Column(), Nullable] public double? CodigoObjetoGasto { get; set; } // float
        [Column(), Nullable] public string NombreObjetoGasto { get; set; } // nvarchar(255)
        [Column(), Nullable] public int? Grupo { get; set; } // int
        [Column("descripcionGrupo"), NotNull] public string DescripcionGrupo { get; set; } // varchar(28)
        [Column(), Nullable] public decimal? PresupuestoVigente { get; set; } // decimal
        [Column(), Nullable] public decimal? PresupuestoDisponible { get; set; } // decimal
        [Column(), Nullable] public decimal? PresupuestoAvance { get; set; } // decimal
    }

    [Table(Schema = "consulta", Name = "Presupuesto_x_Sector_MinHacienda")]
    public partial class consulta_PresupuestoXSectorMinHacienda
    {
        [Column(), Nullable] public string IdNegocioProyecto { get; set; } // varchar(23)
        [Column(), Nullable] public string IdNegocioRubroObjetivo { get; set; } // varchar(31)
        [Column(), NotNull] public int AnioPresupuesto { get; set; } // int
        [Column(), NotNull] public string Nivel { get; set; } // varchar(60)
        [Column(), NotNull] public string NombreEntidad { get; set; } // varchar(60)
        [Column("sectores"), Nullable] public string Sectores { get; set; } // varchar(150)
        [Column(), Nullable] public string Clasificacion { get; set; } // varchar(30)
        [Column(), Nullable] public string NombrePrograma { get; set; } // nvarchar(60)
        [Column(), Nullable] public string NombreSubPrograma { get; set; } // nvarchar(60)
        [Column(), Nullable] public string NombreProyectoActividad { get; set; } // nvarchar(60)
        [Column(), Nullable] public int? CodigoVersion { get; set; } // int
        [Column(), Nullable] public string NombreVersion { get; set; } // varchar(60)
        [Column(), Nullable] public int? CodigoFuente { get; set; } // int
        [Column(), Nullable] public int? CodigoObjetivo { get; set; } // int
        [Column(), Nullable] public decimal? Presupuesto { get; set; } // numeric(15, 0)
        [Column(), Nullable] public decimal? Avance { get; set; } // numeric(18, 2)
    }

    [Table(Schema = "consulta", Name = "Presupuesto_x_version_MinHacienta")]
    public partial class consulta_PresupuestoXVersionMinHacienta
    {
        [Column(), Nullable] public string IdNegocioProyecto { get; set; } // varchar(23)
        [Column(), Nullable] public string IdNegocioRubroObjetivo { get; set; } // varchar(31)
        [Column(), NotNull] public int AnioPresupuesto { get; set; } // int
        [Column(), NotNull] public string NombreEntidad { get; set; } // varchar(60)
        [Column("sectores"), Nullable] public string Sectores { get; set; } // varchar(150)
        [Column(), Nullable] public int? CodigoVersion { get; set; } // int
        [Column(), Nullable] public string NombreVersion { get; set; } // varchar(60)
        [Column(), Nullable] public decimal? Presupuesto { get; set; } // numeric(38, 0)
    }

    [Table(Schema = "dbo", Name = "Procesos")]
	public partial class Proceso
	{
		[Column(), PrimaryKey(2), NotNull] public string IdProceso { get; set; } // varchar(150)
		[Column(), Nullable] public string CodigoContrato { get; set; } // varchar(30)
		[Column("ocid"), PrimaryKey(3), NotNull] public string Ocid { get; set; } // varchar(50)
		[Column(), Nullable] public DateTime? FechaPublicacion { get; set; } // datetime2(7)
		[Column(), Nullable] public string Publicador { get; set; } // varchar(250)
		[Column(), Nullable] public DateTime? FechaFotoProceso { get; set; } // datetime2(7)
		[Column(), Nullable] public DateTime? FechaDeEmisionCodContracto { get; set; } // datetime2(7)
		[Column(), Nullable] public string CodigoEntidadConvocante { get; set; } // varchar(30)
		[Column(), Nullable] public string CategoriaContratacion { get; set; } // varchar(200)
		[Column(), Nullable] public string EstadoProceso { get; set; } // varchar(30)
		[Column(), Nullable] public string IdOferta { get; set; } // varchar(30)
		[Column(), Nullable] public string DescripcionOferta { get; set; } // varchar(300)
		[Column(), Nullable] public string MetodoContratacion { get; set; } // varchar(300)
		[Column(), Nullable] public string CodigoComprador { get; set; } // varchar(30)
		[Column(), Nullable] public string DuracionContrato { get; set; } // varchar(3)
		[Column(), Nullable] public DateTime? FechaFinContrato { get; set; } // datetime2(7)
		[Column(), Nullable] public DateTime? FechaInicioContrato { get; set; } // datetime2(7)
		[Column(), PrimaryKey(5), NotNull] public string CodigoProveedor { get; set; } // varchar(30)
		[Column("uriProceso"), Nullable] public string UriProceso { get; set; } // varchar(324)
		[Column("Es_Covid"), NotNull] public int EsCovid { get; set; } // int
		[Column(), Nullable] public DateTime? FechaUltimaModificacion { get; set; } // datetime
		[Column("codigo_BPIN"), PrimaryKey(4), NotNull] public string CodigoBpin { get; set; } // varchar(50)
		[Column("urlResumenAdjudicacion"), Nullable] public string UrlResumenAdjudicacion { get; set; } // varchar(250)
		[Column("urlProveedoresAdjudicados"), Nullable] public string UrlProveedoresAdjudicados { get; set; } // varchar(250)
		[Column("urlProveedoresOferentes"), Nullable] public string UrlProveedoresOferentes { get; set; } // varchar(250)
		[Column("urlDocumentosAdjudicacion"), Nullable] public string UrlDocumentosAdjudicacion { get; set; } // varchar(250)
		[Column(), Nullable] public string UrlpreciosReferencia { get; set; } // varchar(250)
		[Column(), Nullable] public string UrlInvitados { get; set; } // varchar(250)
		[Column("idprocesojson"), PrimaryKey(1), NotNull] public string Idprocesojson { get; set; } // varchar(250)
		[Column(), PrimaryKey(6), NotNull] public string AwardId { get; set; } // varchar(250)

		#region Associations

		/// <summary>
		/// FK_Proceso_EntidadContrato1
		/// </summary>
		[Association(ThisKey = "CodigoComprador", OtherKey = "Codigo", CanBeNull = true, Relationship = LinqToDB.Mapping.Relationship.ManyToOne, KeyName = "FK_Proceso_EntidadContrato1", BackReferenceName = "ProcesoEntidadContratoes")]
		public EntidadContrato FkProcesoEntidadContrato1 { get; set; }

		/// <summary>
		/// FK_Proceso_EntidadContrato2
		/// </summary>
		[Association(ThisKey = "CodigoProveedor", OtherKey = "Codigo", CanBeNull = false, Relationship = LinqToDB.Mapping.Relationship.ManyToOne, KeyName = "FK_Proceso_EntidadContrato2", BackReferenceName = "FkProcesoEntidadContrato2BackReferences")]
		public EntidadContrato FkProcesoEntidadContrato2 { get; set; }

		/// <summary>
		/// FK_Proceso_EntidadContrato
		/// </summary>
		[Association(ThisKey = "CodigoEntidadConvocante", OtherKey = "Codigo", CanBeNull = true, Relationship = LinqToDB.Mapping.Relationship.ManyToOne, KeyName = "FK_Proceso_EntidadContrato", BackReferenceName = "Procesoes")]
		public EntidadContrato ProcesoEntidadContrato { get; set; }

		#endregion
	}

	[Table(Schema = "dbo", Name = "Procesos_BKs_Urls")]
	public partial class ProcesosBKsUrl
	{
		[Column(), NotNull] public string IdProceso { get; set; } // varchar(150)
		[Column(), NotNull] public string CodigoContrato { get; set; } // varchar(30)
		[Column("ocid"), NotNull] public string Ocid { get; set; } // varchar(50)
		[Column("uriProceso"), Nullable] public string UriProceso { get; set; } // varchar(324)
		[Column("urlResumenAdjudicacion"), Nullable] public string UrlResumenAdjudicacion { get; set; } // varchar(250)
		[Column("urlProveedoresAdjudicados"), Nullable] public string UrlProveedoresAdjudicados { get; set; } // varchar(250)
		[Column("urlProveedoresOferentes"), Nullable] public string UrlProveedoresOferentes { get; set; } // varchar(250)
		[Column("urlDocumentosAdjudicacion"), Nullable] public string UrlDocumentosAdjudicacion { get; set; } // varchar(250)
		[Column(), Nullable] public string UrlpreciosReferencia { get; set; } // varchar(250)
		[Column(), Nullable] public string UrlInvitados { get; set; } // varchar(250)
	}

	[Table(Schema = "dbo", Name = "Produccion")]
	public partial class Produccion
	{
		[Column(), PrimaryKey, Identity] public int IdProduccion { get; set; } // int
		[Column(), NotNull] public string IdPeriodicidad { get; set; } // nvarchar(5)
		[Column(), NotNull] public int PeriodoLiquidado { get; set; } // int
		[Column(), NotNull] public string IdRecursoNatural { get; set; } // varchar(10)
		[Column(), NotNull] public char IdTipoRecursoNatural { get; set; } // varchar(1)
		[Column(), NotNull] public string IdUnidadMedida { get; set; } // nvarchar(20)
		[Column("Produccion"), NotNull] public decimal ProduccionColumn { get; set; } // decimal(18, 2)
		[Column(), NotNull] public string IdDepartamento { get; set; } // varchar(10)
		[Column(), NotNull] public string IdMunicipio { get; set; } // varchar(10)
		[Column(), NotNull] public string IdCampoOProyecto { get; set; } // nvarchar(50)
		[Column(), NotNull] public DateTime FechaInicioPeriodo { get; set; } // smalldatetime
		[Column(), NotNull] public DateTime FechaFinPeriodo { get; set; } // smalldatetime
		[Column(), Nullable] public string IdLiquidacionNegocio { get; set; } // nvarchar(8)
		[Column(), NotNull] public int AñoLiquidado { get; set; } // int
		/// <summary>
		/// Titulo Minero o Pozo Petrolifero
		/// </summary>
		[Column(), NotNull] public string IdTipoCampoOProyecto { get; set; } // nvarchar(50)
		[Column(), NotNull] public int IdTipoDeFinanciacion { get; set; } // int
		[Column(), NotNull] public DateTime FechaUltimaModificacion { get; set; } // datetime
		[Column(), NotNull] public int ConsecutivoCarga { get; set; } // int
		[Column(), NotNull] public int IdTipoDeContraprestacion { get; set; } // int

		#region Associations

		/// <summary>
		/// FK_Produccion_CampoOProyecto
		/// </summary>
		[Association(ThisKey = "IdCampoOProyecto, IdTipoCampoOProyecto", OtherKey = "IdCampoOProyecto, IdTipoCampoOProyecto", CanBeNull = false, Relationship = LinqToDB.Mapping.Relationship.ManyToOne, KeyName = "FK_Produccion_CampoOProyecto", BackReferenceName = "Produccions")]
		public CampoOProyecto CampoOProyecto { get; set; }

		/// <summary>
		/// FK_Produccion_EnteTerritorial
		/// </summary>
		[Association(ThisKey = "IdDepartamento, IdMunicipio", OtherKey = "IdDepartamento, IdMunicipio", CanBeNull = false, Relationship = LinqToDB.Mapping.Relationship.ManyToOne, KeyName = "FK_Produccion_EnteTerritorial", BackReferenceName = "Produccions")]
		public EnteTerritorial EnteTerritorial { get; set; }

		/// <summary>
		/// FK_Produccion_Periodicidad
		/// </summary>
		[Association(ThisKey = "IdPeriodicidad", OtherKey = "IdPeriodicidad", CanBeNull = false, Relationship = LinqToDB.Mapping.Relationship.ManyToOne, KeyName = "FK_Produccion_Periodicidad", BackReferenceName = "Produccions")]
		public Periodicidad Periodicidad { get; set; }

		/// <summary>
		/// FK_ProduccionANH_Produccion_BackReference
		/// </summary>
		[Association(ThisKey = "IdProduccion", OtherKey = "IdProduccion", CanBeNull = true, Relationship = LinqToDB.Mapping.Relationship.OneToOne, IsBackReference = true)]
		public ProduccionANH ProduccionANH { get; set; }

		/// <summary>
		/// FK_ProduccionANM_Produccion_BackReference
		/// </summary>
		[Association(ThisKey = "IdProduccion", OtherKey = "IdProduccion", CanBeNull = true, Relationship = LinqToDB.Mapping.Relationship.OneToOne, IsBackReference = true)]
		public ProduccionANM ProduccionANM { get; set; }

		/// <summary>
		/// FK_Produccion_RecursoNatural
		/// </summary>
		[Association(ThisKey = "IdRecursoNatural, IdTipoRecursoNatural", OtherKey = "IdRecursoNatural, IdTipoRecursoNatural", CanBeNull = false, Relationship = LinqToDB.Mapping.Relationship.ManyToOne, KeyName = "FK_Produccion_RecursoNatural", BackReferenceName = "Produccions")]
		public RecursoNatural RecursoNatural { get; set; }

		/// <summary>
		/// FK_Produccion_TipoDeFinanciacion
		/// </summary>
		[Association(ThisKey = "IdTipoDeFinanciacion", OtherKey = "IdTipoFinanciacion", CanBeNull = false, Relationship = LinqToDB.Mapping.Relationship.ManyToOne, KeyName = "FK_Produccion_TipoDeFinanciacion", BackReferenceName = "Produccions")]
		public TipoDeFinanciacion TipoDeFinanciacion { get; set; }

		/// <summary>
		/// FK_Produccion_UnidadMedida
		/// </summary>
		[Association(ThisKey = "IdUnidadMedida", OtherKey = "IdUnidadMedida", CanBeNull = false, Relationship = LinqToDB.Mapping.Relationship.ManyToOne, KeyName = "FK_Produccion_UnidadMedida", BackReferenceName = "Produccions")]
		public UnidadMedida UnidadMedida { get; set; }

		#endregion
	}

	[Table(Schema = "dbo", Name = "ProduccionANH")]
	public partial class ProduccionANH
	{
		[PrimaryKey, NotNull] public int IdProduccion { get; set; } // int
		[Column, Nullable] public decimal? ProducccionFiscalizada { get; set; } // decimal(18, 0)
		[Column, Nullable] public decimal? VolumenRegalia { get; set; } // decimal(20, 8)
		[Column, NotNull] public DateTime FechaUltimaModificacion { get; set; } // datetime
		[Column, NotNull] public int ConsecutivoCarga { get; set; } // int

		#region Associations

		/// <summary>
		/// FK_ProduccionANH_Produccion
		/// </summary>
		[Association(ThisKey = "IdProduccion", OtherKey = "IdProduccion", CanBeNull = false, Relationship = LinqToDB.Mapping.Relationship.OneToOne, KeyName = "FK_ProduccionANH_Produccion", BackReferenceName = "ProduccionANH")]
		public Produccion Produccion { get; set; }

		#endregion
	}

	[Table(Schema = "dbo", Name = "ProduccionANM")]
	public partial class ProduccionANM
	{
		[PrimaryKey, NotNull] public int IdProduccion { get; set; } // int
		[Column, NotNull] public int IdTipoDeContraprestacion { get; set; } // int
		[Column, NotNull] public string NombreDeContraprestacion { get; set; } // varchar(250)
		[Column, NotNull] public DateTime FechaUltimaModificacion { get; set; } // datetime
		[Column, NotNull] public int ConsecutivoCarga { get; set; } // int

		#region Associations

		/// <summary>
		/// FK_ProduccionANM_Produccion
		/// </summary>
		[Association(ThisKey = "IdProduccion", OtherKey = "IdProduccion", CanBeNull = false, Relationship = LinqToDB.Mapping.Relationship.OneToOne, KeyName = "FK_ProduccionANM_Produccion", BackReferenceName = "ProduccionANM")]
		public Produccion Produccion { get; set; }

		#endregion
	}

	[Table(Schema = "dbo", Name = "Producto")]
	public partial class Producto
	{
		[PrimaryKey, NotNull] public int IdProducto { get; set; } // int
		[Column, NotNull] public string NombreProducto { get; set; } // varchar(max)
		[Column, NotNull] public string UnidadProducto { get; set; } // varchar(max)
		[Column, NotNull] public decimal CantidadProducto { get; set; } // decimal(18, 0)
		[Column, NotNull] public int IdObjetivoEspecifico { get; set; } // int
		[Column, NotNull] public DateTime FechaUltimaModificacion { get; set; } // datetime
		[Column, NotNull] public int ConsecutivoCarga { get; set; } // int
		[Column, NotNull] public string Modificadopor { get; set; } // varchar(30)

		#region Associations

		/// <summary>
		/// Fk_ActividadXProducto_BackReference
		/// </summary>
		[Association(ThisKey = "IdProducto", OtherKey = "IdProducto", CanBeNull = true, Relationship = LinqToDB.Mapping.Relationship.OneToMany, IsBackReference = true)]
		public IEnumerable<Actividad> FkActividadXProductos { get; set; }

		/// <summary>
		/// FK_MetaIndicadorProducto_Producto_BackReference
		/// </summary>
		[Association(ThisKey = "IdProducto", OtherKey = "IdProducto", CanBeNull = true, Relationship = LinqToDB.Mapping.Relationship.OneToMany, IsBackReference = true)]
		public IEnumerable<MetaIndicadorProducto> MetaIndicadorProductos { get; set; }

		/// <summary>
		/// FK_Producto_ObjetivoEspecifico
		/// </summary>
		[Association(ThisKey = "IdObjetivoEspecifico", OtherKey = "IdObjetivoEspecifico", CanBeNull = false, Relationship = LinqToDB.Mapping.Relationship.ManyToOne, KeyName = "FK_Producto_ObjetivoEspecifico", BackReferenceName = "Productoes")]
		public ObjetivoEspecifico ObjetivoEspecifico { get; set; }

		/// <summary>
		/// FK_SeguimientoMetaIndicadorProducto_Producto_BackReference
		/// </summary>
		[Association(ThisKey = "IdProducto", OtherKey = "IdProducto", CanBeNull = true, Relationship = LinqToDB.Mapping.Relationship.OneToMany, IsBackReference = true)]
		public IEnumerable<SeguimientoMetaIndicadorProducto> SeguimientoMetaIndicadorProductos { get; set; }

		#endregion
	}

	[Table(Schema = "dbo", Name = "Programa")]
	public partial class Programa
	{
		[Column(), PrimaryKey, Identity] public int Id { get; set; } // int
		[Column(), NotNull] public int Nivel { get; set; } // int
		[Column(), NotNull] public int CodigoEntidad { get; set; } // int
		[Column(), NotNull] public int ClasePrograma { get; set; } // int
		[Column(), NotNull] public int CodigoPrograma { get; set; } // int
		[Column(), NotNull] public string NombrePrograma { get; set; } // varchar(60)
		[Column(), NotNull] public int CodigoSubPrograma { get; set; } // int
		[Column(), NotNull] public int CodigoProyecto { get; set; } // int
		[Column(), NotNull] public int EsProgramaCovid { get; set; } // int
		[Column(), Nullable] public string NombreActividadProyecto { get; set; } // varchar(250)
		[Column("codigoprogramaNegocio", SkipOnInsert = true, SkipOnUpdate = true), Nullable] public int? CodigoprogramaNegocio { get; set; } // int

		#region Associations

		/// <summary>
		/// FK_ProgramaEjecucionContrato_Programa_BackReference
		/// </summary>
		[Association(ThisKey = "Id", OtherKey = "IdPrograma", CanBeNull = true, Relationship = LinqToDB.Mapping.Relationship.OneToMany, IsBackReference = true)]
		public IEnumerable<ProgramaEjecucionContrato> ProgramaEjecucionContratos { get; set; }

		/// <summary>
		/// FK_ProgramaMetasFinancieras_Programa_BackReference
		/// </summary>
		[Association(ThisKey = "Id", OtherKey = "IdPrograma", CanBeNull = true, Relationship = LinqToDB.Mapping.Relationship.OneToMany, IsBackReference = true)]
		public IEnumerable<ProgramaMetasFinanciera> ProgramaMetasFinancieras { get; set; }

		/// <summary>
		/// FK_ProgramaMetasFisicas_Programa_BackReference
		/// </summary>
		[Association(ThisKey = "Id", OtherKey = "IdPrograma", CanBeNull = true, Relationship = LinqToDB.Mapping.Relationship.OneToMany, IsBackReference = true)]
		public IEnumerable<ProgramaMetasFisica> ProgramaMetasFisicas { get; set; }

		#endregion
	}

	[Table(Schema = "dbo", Name = "ProgramaEjecucionContable")]
	public partial class ProgramaEjecucionContable
	{
		[Column(), Nullable] public int? NivelEntidad { get; set; } // int
		[Column(), Nullable] public int? CodEntidad { get; set; } // int
		[Column(), Nullable] public string Entidad { get; set; } // varchar(255)
		[Column(), Nullable] public int? ClasePrograma { get; set; } // int
		[Column(), Nullable] public int? CodPrograma { get; set; } // int
		[Column(), Nullable] public string NombrePrograma { get; set; } // varchar(255)
		[Column(), Nullable] public int? CodProyActividad { get; set; } // int
		[Column(), Nullable] public string NombreProyActividad { get; set; } // varchar(255)
		[Column("PRY_Clasificacion"), Nullable] public string PryClasificacion { get; set; } // varchar(10)
		[Column("Codigo_SNIP"), Nullable] public int? CodigoSnip { get; set; } // int
		[Column(), Nullable] public int? CodObjeto { get; set; } // int
		[Column(), Nullable] public string NombreObjeto { get; set; } // varchar(255)
		[Column(), Nullable] public int? Fuente { get; set; } // int
		[Column(), Nullable] public int? Financiador { get; set; } // int
		[Column(), Nullable] public int? Departamento { get; set; } // int
		[Column(), Nullable] public decimal? Unidad { get; set; } // numeric(18, 0)
		[Column(), Nullable] public int? Asiento { get; set; } // int
		[Column("DOC_FHCLAB"), Nullable] public DateTime? DocFhclab { get; set; } // datetime
		[Column("RUC_Proveedor"), Nullable] public string RucProveedor { get; set; } // varchar(50)
		[Column(), Nullable] public string NombreProveedor { get; set; } // varchar(255)
		[Column(), Nullable] public string Comprobante { get; set; } // varchar(255)
		[Column("DOC_CONCEPTO"), Nullable] public string DocConcepto { get; set; } // nvarchar(max)
		[Column(), Nullable] public string CodigoContratacion { get; set; } // varchar(60)
		[Column(), Nullable] public decimal? Monto { get; set; } // numeric(18, 0)
		[Column(), Nullable] public DateTime? FechaModificacion { get; set; } // datetime
		[Column(), Nullable] public int? EsCovid { get; set; } // int
	}

	[Table(Schema = "dbo", Name = "ProgramaEjecucionContrato")]
	public partial class ProgramaEjecucionContrato
	{
		[Column(), PrimaryKey, Identity] public long Id { get; set; } // bigint
		[Column(), NotNull] public int NivelEntidad { get; set; } // int
		[Column(), NotNull] public int CodEntidad { get; set; } // int
		[Column(), NotNull] public string Entidad { get; set; } // varchar(max)
		[Column(), NotNull] public int IdPrograma { get; set; } // int
		[Column(), NotNull] public int CodProyActividad { get; set; } // int
		[Column(), NotNull] public string NombreProyActividad { get; set; } // varchar(max)
		[Column("PRY_Clasificacion"), NotNull] public string PryClasificacion { get; set; } // varchar(10)
		[Column("Codigo_SNIP"), NotNull] public int CodigoSnip { get; set; } // int
		[Column(), NotNull] public int CodObjeto { get; set; } // int
		[Column(), NotNull] public string NombreObjeto { get; set; } // varchar(max)
		[Column(), NotNull] public int Fuente { get; set; } // int
		[Column(), NotNull] public int Financiador { get; set; } // int
		[Column(), NotNull] public int Departamento { get; set; } // int
		[Column(), NotNull] public decimal Unidad { get; set; } // numeric(18, 0)
		[Column(), NotNull] public int Asiento { get; set; } // int
		[Column("DOC_FHCLAB"), NotNull] public DateTime DocFhclab { get; set; } // datetime
		[Column("Ruc_Proveedor"), NotNull] public string RucProveedor { get; set; } // varchar(50)
		[Column(), NotNull] public string NombreProveedor { get; set; } // varchar(max)
		[Column(), NotNull] public string Comprobante { get; set; } // varchar(255)
		[Column(), NotNull] public string DocConcepto { get; set; } // varchar(max)
		[Column(), Nullable] public string CodigoContratacion { get; set; } // varchar(max)
		[Column(), Nullable] public decimal? Monto { get; set; } // numeric(18, 0)

		#region Associations

		/// <summary>
		/// FK_ProgramaEjecucionContrato_Programa
		/// </summary>
		[Association(ThisKey = "IdPrograma", OtherKey = "Id", CanBeNull = false, Relationship = LinqToDB.Mapping.Relationship.ManyToOne, KeyName = "FK_ProgramaEjecucionContrato_Programa", BackReferenceName = "ProgramaEjecucionContratoes")]
		public Programa Programa { get; set; }

		#endregion
	}

	[Table(Schema = "dbo", Name = "ProgramaEjecucionPresupuestaria")]
	public partial class ProgramaEjecucionPresupuestaria
	{
		[Column(), Nullable] public DateTime? FechaPresupuesto { get; set; } // datetime
		[Column(), Nullable] public string Entidad { get; set; } // varchar(255)
		[Column(), Nullable] public string NombreProgrma { get; set; } // varchar(255)
		[Column(), Nullable] public string NombreProyectoActividad { get; set; } // varchar(255)
		[Column(), Nullable] public string Clasificacion { get; set; } // varchar(5)
		[Column(), Nullable] public double? Pagado { get; set; } // float
		[Column(), Nullable] public double? Planificado { get; set; } // float
		[Column(), Nullable] public double? Ejecutado { get; set; } // float
		[Column(), Nullable] public double? Anio { get; set; } // float
		[Column(), Nullable] public double? Nivel { get; set; } // float
		[Column(), Nullable] public double? CodigoEntidad { get; set; } // float
		[Column(), Nullable] public double? ClasePrograma { get; set; } // float
		[Column(), Nullable] public double? CodigoPrograma { get; set; } // float
		[Column(), Nullable] public double? CodigoProyecto { get; set; } // float
		[Column(), Nullable] public double? CodigoSnip { get; set; } // float
		[Column(), Nullable] public double? ObjetoGasto { get; set; } // float
		[Column(), Nullable] public double? FuenteFinanciamiento { get; set; } // float
		[Column(), Nullable] public double? EntidadFinanciamiento { get; set; } // float
		[Column(), Nullable] public double? Pais { get; set; } // float
		[Column(), Nullable] public double? Depto { get; set; } // float
		[Column(), Nullable] public double? Modificacion { get; set; } // float
		[Column(), Nullable] public double? Vigente { get; set; } // float
		[Column("fechaModificacion"), Nullable] public DateTime? FechaModificacion { get; set; } // datetime
		[Column(), Nullable] public int? EsCovid { get; set; } // int
	}

	[Table(Schema = "dbo", Name = "ProgramaMetasFinancieras")]
	public partial class ProgramaMetasFinanciera
	{
		[Column(), PrimaryKey(1), NotNull] public DateTime FechaMeta { get; set; } // datetime
		[Column("idPrograma"), PrimaryKey(2), NotNull] public int IdPrograma { get; set; } // int
		[Column(), PrimaryKey(3), NotNull] public int CodigoProducto { get; set; } // int
		[Column(), Nullable] public string NombreProducto { get; set; } // varchar(100)
		[Column(), PrimaryKey(4), NotNull] public int CodigoObjeto { get; set; } // int
		[Column(), Nullable] public string NombreObjeto { get; set; } // varchar(80)
		[Column(), PrimaryKey(5), NotNull] public int Fuente { get; set; } // int
		[Column(), PrimaryKey(6), NotNull] public int Financiador { get; set; } // int
		[Column(), PrimaryKey(7), NotNull] public int CodigoDepartamento { get; set; } // int
		[Column(), Nullable] public decimal? Meta { get; set; } // numeric(15, 0)
		[Column(), Nullable] public decimal? Avance { get; set; } // numeric(15, 0)
		[Column(), Nullable] public DateTime? FechaUltimaModificacion { get; set; } // datetime
		[Column("codigosnip"), Nullable] public string Codigosnip { get; set; } // varchar(60)

		#region Associations

		/// <summary>
		/// FK_ProgramaMetasFinancieras_Programa
		/// </summary>
		[Association(ThisKey = "IdPrograma", OtherKey = "Id", CanBeNull = false, Relationship = LinqToDB.Mapping.Relationship.ManyToOne, KeyName = "FK_ProgramaMetasFinancieras_Programa", BackReferenceName = "ProgramaMetasFinancieras")]
		public Programa Programa { get; set; }

		#endregion
	}

	[Table(Schema = "dbo", Name = "ProgramaMetasFisicas")]
	public partial class ProgramaMetasFisica
	{
		[PrimaryKey(1), NotNull] public int IdPrograma { get; set; } // int
		[PrimaryKey(2), NotNull] public int CodigoProyecto { get; set; } // int
		[PrimaryKey(3), NotNull] public int CodigoProducto { get; set; } // int
		[PrimaryKey(4), NotNull] public DateTime FechaMeta { get; set; } // datetime
		[Column, Nullable] public string Objetivo { get; set; } // varchar(2000)
		[Column, Nullable] public string ResultadoIntermedio { get; set; } // varchar(1000)
		[Column, Nullable] public string ResultadoInmediato { get; set; } // varchar(2000)
		[Column, Nullable] public string NombreProyecto { get; set; } // varchar(250)
		[Column, Nullable] public string NombreProducto { get; set; } // varchar(100)
		[Column, Nullable] public string Unidad { get; set; } // varchar(60)
		[Column, Nullable] public decimal? MetaTotal { get; set; } // numeric(17, 2)
		[Column, Nullable] public decimal? Meta { get; set; } // numeric(17, 2)
		[Column, Nullable] public decimal? Avance { get; set; } // numeric(17, 2)
		[Column, NotNull] public DateTime FechaModificacion { get; set; } // datetime

		#region Associations

		/// <summary>
		/// FK_ProgramaMetasFisicas_Programa
		/// </summary>
		[Association(ThisKey = "IdPrograma", OtherKey = "Id", CanBeNull = false, Relationship = LinqToDB.Mapping.Relationship.ManyToOne, KeyName = "FK_ProgramaMetasFisicas_Programa", BackReferenceName = "ProgramaMetasFisicas")]
		public Programa Programa { get; set; }

		#endregion
	}

	[Table(Schema = "dbo", Name = "ProgramaSalarios")]
	public partial class ProgramaSalario
	{
		[Column(), Nullable] public DateTime? FechaPresupuesto { get; set; } // date
		[Column(), Nullable] public decimal? Ejecutado { get; set; } // numeric(18, 2)
		[Column("claseprograma"), Nullable] public int? Claseprograma { get; set; } // int
		[Column("codigoProyectoActividad"), Nullable] public int? CodigoProyectoActividad { get; set; } // int
		[Column("proyectoClasificacion"), Nullable] public string ProyectoClasificacion { get; set; } // varchar(5)
		[Column("codigoSnip"), Nullable] public string CodigoSnip { get; set; } // varchar(30)
		[Column("objetodegasto"), Nullable] public int? Objetodegasto { get; set; } // int
		[Column("fuente"), Nullable] public int? Fuente { get; set; } // int
		[Column("organismoFinanciador"), Nullable] public int? OrganismoFinanciador { get; set; } // int
		[Column("departamento"), Nullable] public int? Departamento { get; set; } // int
		[Column("pais"), Nullable] public int? Pais { get; set; } // int
		[Column(), Nullable] public int? CodigoNivel { get; set; } // int
		[Column(), Nullable] public int? CodigoEntidad { get; set; } // int
		[Column(), Nullable] public int? CodigoPrograma { get; set; } // int
		[Column(), Nullable] public int? Anio { get; set; } // int
		[Column(), Nullable] public DateTime? FechaModificacion { get; set; } // datetime
	}

	[Table(Schema = "dbo", Name = "ProyeccionRecursosITEMS")]
	public partial class ProyeccionRecursosITEM
	{
		[Column(), PrimaryKey, Identity] public int IdProyeccion { get; set; } // int
		[Column(), NotNull] public int IdItem { get; set; } // int
		[Column(), Nullable] public string Item { get; set; } // varchar(30)
		[Column(), NotNull] public int IdArticulo { get; set; } // int
		[Column(), Nullable] public string Articulo { get; set; } // varchar(30)
		[Column(), Nullable] public string DescripcionArticulo { get; set; } // varchar(4000)
		[Column(), NotNull] public int PlanificadoValorUSD { get; set; } // int
		[Column(), NotNull] public int TransferidoValorUSD { get; set; } // int
		[Column("codigoprogramaNegocio"), NotNull] public int CodigoprogramaNegocio { get; set; } // int
		[Column("codigoProyectoActividad"), NotNull] public int CodigoProyectoActividad { get; set; } // int
		[Column(), Nullable] public int? FuenteFinanciacion { get; set; } // int
		[Column(), Nullable] public int? OrganismoFinanciador { get; set; } // int
	}

	[Table(Schema = "dbo", Name = "ProyeccionRecursosITEMS_20210406")]
	public partial class ProyeccionRecursosITEMS20210406
	{
		[Column(), Identity] public int IdProyeccion { get; set; } // int
		[Column(), NotNull] public int IdItem { get; set; } // int
		[Column(), Nullable] public string Item { get; set; } // varchar(30)
		[Column(), NotNull] public int IdArticulo { get; set; } // int
		[Column(), Nullable] public string Articulo { get; set; } // varchar(30)
		[Column(), Nullable] public string DescripcionArticulo { get; set; } // varchar(4000)
		[Column(), NotNull] public int PlanificadoValorUSD { get; set; } // int
		[Column(), NotNull] public int TransferidoValorUSD { get; set; } // int
		[Column("codigoprogramaNegocio"), NotNull] public int CodigoprogramaNegocio { get; set; } // int
		[Column("codigoProyectoActividad"), NotNull] public int CodigoProyectoActividad { get; set; } // int
		[Column(), Nullable] public int? FuenteFinanciacion { get; set; } // int
		[Column(), Nullable] public int? OrganismoFinanciador { get; set; } // int
	}

	[Table(Schema = "dbo", Name = "Proyecto")]
	public partial class Proyecto
	{
		[PrimaryKey, NotNull] public int IdProyecto { get; set; } // int
		[Column, NotNull] public string CodigoBPIN { get; set; } // varchar(max)
		[Column, NotNull] public string NombreProyecto { get; set; } // varchar(max)
		[Column, NotNull] public DateTime FechaInicioProyecto { get; set; } // datetime
		[Column, NotNull] public DateTime FechaFinProyecto { get; set; } // datetime
		[Column, NotNull] public decimal VlrTotalProyectoFuenteRegalias { get; set; } // decimal(18, 2)
		[Column, NotNull] public decimal VlrTotalProyectoTodasLasFuentes { get; set; } // decimal(18, 2)
		[Column, NotNull] public string ObjetivoGeneral { get; set; } // varchar(max)
		[Column, NotNull] public int IdSector { get; set; } // int
		[Column, NotNull] public string TipoDeProyecto { get; set; } // varchar(max)
		[Column, NotNull] public long NumeroBeneficiarios { get; set; } // bigint
		[Column, NotNull] public int IdOCAD { get; set; } // int
		[Column, NotNull] public string NombreOCAD { get; set; } // varchar(max)
		[Column, NotNull] public DateTime FechaUltimaModificacion { get; set; } // datetime
		[Column, NotNull] public int ConsecutivoCarga { get; set; } // int
		[Column, NotNull] public string Modificadopor { get; set; } // varchar(30)
		[Column, NotNull] public decimal PorcentajeAvanceFisico { get; set; } // decimal(10, 2)
		[Column, Nullable] public decimal? PorcentajeAvanceFinanciero { get; set; } // decimal(10, 2)

		#region Associations

		/// <summary>
		/// FK_ActorXProyecto_Proyecto_BackReference
		/// </summary>
		[Association(ThisKey = "IdProyecto", OtherKey = "IDProyecto", CanBeNull = true, Relationship = LinqToDB.Mapping.Relationship.OneToMany, IsBackReference = true)]
		public IEnumerable<ActorXProyecto> ActorXProyectos { get; set; }

		/// <summary>
		/// FK_DatosAdicionalesAprobacion_Proyecto_BackReference
		/// </summary>
		[Association(ThisKey = "IdProyecto", OtherKey = "IdProyecto", CanBeNull = true, Relationship = LinqToDB.Mapping.Relationship.OneToMany, IsBackReference = true)]
		public IEnumerable<DatosAdicionalesAprobacion> DatosAdicionalesAprobacions { get; set; }

		/// <summary>
		/// FK_EstadoGesproyProyectos_Proyecto_BackReference
		/// </summary>
		[Association(ThisKey = "IdProyecto", OtherKey = "IdProyecto", CanBeNull = true, Relationship = LinqToDB.Mapping.Relationship.OneToOne, IsBackReference = true)]
		public EstadoGesproyProyecto EstadoGesproyProyecto { get; set; }

		/// <summary>
		/// Fk_EsquemaFinanciacionProyectoXProyecto_BackReference
		/// </summary>
		[Association(ThisKey = "IdProyecto", OtherKey = "IdProyecto", CanBeNull = true, Relationship = LinqToDB.Mapping.Relationship.OneToMany, IsBackReference = true)]
		public IEnumerable<EsquemaFinanciacionProyecto> FkEsquemaFinanciacionProyectoXProyectos { get; set; }

		/// <summary>
		/// Fk_FotoUsuarioProyecto_BackReference
		/// </summary>
		[Association(ThisKey = "IdProyecto", OtherKey = "IdProyecto", CanBeNull = true, Relationship = LinqToDB.Mapping.Relationship.OneToMany, IsBackReference = true)]
		public IEnumerable<FotoUsuario> FkFotoUsuarioProyectos { get; set; }

		/// <summary>
		/// Fk_HistoriaEstadoXProyecto_BackReference
		/// </summary>
		[Association(ThisKey = "IdProyecto", OtherKey = "IdProyecto", CanBeNull = true, Relationship = LinqToDB.Mapping.Relationship.OneToMany, IsBackReference = true)]
		public IEnumerable<HistoriaEstado> FkHistoriaEstadoXProyectos { get; set; }

		/// <summary>
		/// Fk_InformeAvanceFisicoProyectoXProyecto_BackReference
		/// </summary>
		[Association(ThisKey = "IdProyecto", OtherKey = "IdProyecto", CanBeNull = true, Relationship = LinqToDB.Mapping.Relationship.OneToMany, IsBackReference = true)]
		public IEnumerable<InformeAvanceFisicoProyecto> FkInformeAvanceFisicoProyectoXProyectos { get; set; }

		/// <summary>
		/// Fk_MeGustaXProyecto_BackReference
		/// </summary>
		[Association(ThisKey = "IdProyecto", OtherKey = "IdProyecto", CanBeNull = true, Relationship = LinqToDB.Mapping.Relationship.OneToMany, IsBackReference = true)]
		public IEnumerable<MeGusta> FkMeGustaXProyectos { get; set; }

		/// <summary>
		/// Fk_ObjetivoEspecificoXProyecto_BackReference
		/// </summary>
		[Association(ThisKey = "IdProyecto", OtherKey = "IdProyecto", CanBeNull = true, Relationship = LinqToDB.Mapping.Relationship.OneToMany, IsBackReference = true)]
		public IEnumerable<ObjetivoEspecifico> FkObjetivoEspecificoXProyectos { get; set; }

		/// <summary>
		/// Fk_ProyectoXEnteTerritoria_BackReference
		/// </summary>
		[Association(ThisKey = "IdProyecto", OtherKey = "IdProyecto", CanBeNull = true, Relationship = LinqToDB.Mapping.Relationship.OneToMany, IsBackReference = true)]
		public IEnumerable<ProyectoXEntidadTerritorial> FkProyectoXEnteTerritorias { get; set; }

		/// <summary>
		/// Fk_ProyectoXSector
		/// </summary>
		[Association(ThisKey = "IdSector", OtherKey = "IdSector", CanBeNull = false, Relationship = LinqToDB.Mapping.Relationship.ManyToOne, KeyName = "Fk_ProyectoXSector", BackReferenceName = "FkProyectoXSectors")]
		public Sector FkProyectoXSector { get; set; }

		/// <summary>
		/// Fk_RespuestaCuestionarioXProyecto_BackReference
		/// </summary>
		[Association(ThisKey = "IdProyecto", OtherKey = "IdProyecto", CanBeNull = true, Relationship = LinqToDB.Mapping.Relationship.OneToMany, IsBackReference = true)]
		public IEnumerable<RespuestaCuestionario> FkRespuestaCuestionarioXProyectos { get; set; }

		/// <summary>
		/// FK_FotoXProyecto_BackReference
		/// </summary>
		[Association(ThisKey = "IdProyecto", OtherKey = "IdProyecto", CanBeNull = true, Relationship = LinqToDB.Mapping.Relationship.OneToMany, IsBackReference = true)]
		public IEnumerable<Foto> FotoXProyectos { get; set; }

		/// <summary>
		/// FK_GeorreferenciacionXProyecto_BackReference
		/// </summary>
		[Association(ThisKey = "IdProyecto", OtherKey = "IdProyecto", CanBeNull = true, Relationship = LinqToDB.Mapping.Relationship.OneToMany, IsBackReference = true)]
		public IEnumerable<Georreferenciacion> GeorreferenciacionXProyectos { get; set; }

		/// <summary>
		/// FK_PuntajeEvaluacionProyectos_Proyecto_BackReference
		/// </summary>
		[Association(ThisKey = "IdProyecto", OtherKey = "IdProyecto", CanBeNull = true, Relationship = LinqToDB.Mapping.Relationship.OneToOne, IsBackReference = true)]
		public PuntajeEvaluacionProyecto PuntajeEvaluacionProyecto { get; set; }

		/// <summary>
		/// FK_SeguimientoEsquemaFinanciacionProyecto_Proyecto_BackReference
		/// </summary>
		[Association(ThisKey = "IdProyecto", OtherKey = "IdProyecto", CanBeNull = true, Relationship = LinqToDB.Mapping.Relationship.OneToMany, IsBackReference = true)]
		public IEnumerable<SeguimientoEsquemaFinanciacionProyecto> SeguimientoEsquemaFinanciacionProyectos { get; set; }

		#endregion
	}

	[Table(Schema = "dbo", Name = "ProyectoOrganismoFinanciador", IsView = true)]
	public partial class ProyectoOrganismoFinanciador
	{
		[Column, Nullable] public int? IdOrganismoFinanciador { get; set; } // int
		[Column, Nullable] public string OrganismoFinanciador { get; set; } // varchar(200)
		[Column, NotNull] public int IdProyecto { get; set; } // int
	}

	[Table(Schema = "dbo", Name = "ProyectosXContratos")]
	public partial class ProyectosXContrato
	{
		[Column, NotNull] public int IdProyecto { get; set; } // int
		[Column, Nullable] public string CodigoSNIP { get; set; } // nvarchar(200)
		[Column, Nullable] public string CodigoProceso { get; set; } // nvarchar(255)
		[Column, Nullable] public string CodigoContrato { get; set; } // nvarchar(255)
		[Column, Nullable] public string Estado { get; set; } // varchar(30)
		[Column, NotNull] public DateTime FechaUltimaModificacion { get; set; } // datetime
	}

	[Table(Schema = "dbo", Name = "ProyectoXEntidadTerritorial")]
	public partial class ProyectoXEntidadTerritorial
	{
		[PrimaryKey(1), NotNull] public int IdProyecto { get; set; } // int
		[PrimaryKey(2), NotNull] public string IdDepartamento { get; set; } // varchar(10)
		[PrimaryKey(3), NotNull] public string IdMunicipio { get; set; } // varchar(10)
		[Column, NotNull] public DateTime FechaUltimaModificacion { get; set; } // datetime
		[Column, NotNull] public int ConsecutivoCarga { get; set; } // int
		[Column, NotNull] public string Modificadopor { get; set; } // varchar(30)

		#region Associations

		/// <summary>
		/// Fk_ProyectoXEnteTerritoria
		/// </summary>
		[Association(ThisKey = "IdProyecto", OtherKey = "IdProyecto", CanBeNull = false, Relationship = LinqToDB.Mapping.Relationship.ManyToOne, KeyName = "Fk_ProyectoXEnteTerritoria", BackReferenceName = "FkProyectoXEnteTerritorias")]
		public Proyecto FkProyectoXEnteTerritoria { get; set; }

		/// <summary>
		/// Fk_ProyectoXEnteTerritorial
		/// </summary>
		[Association(ThisKey = "IdDepartamento, IdMunicipio", OtherKey = "IdDepartamento, IdMunicipio", CanBeNull = false, Relationship = LinqToDB.Mapping.Relationship.ManyToOne, KeyName = "Fk_ProyectoXEnteTerritorial", BackReferenceName = "FkProyectoXEnteTerritorials")]
		public EnteTerritorial FkProyectoXEnteTerritorial { get; set; }

		#endregion
	}

	[Table(Schema = "dbo", Name = "PuntajeEvaluacionProyectos")]
	public partial class PuntajeEvaluacionProyecto
	{
		[PrimaryKey, NotNull] public int IdProyecto { get; set; } // int
		[Column, Nullable] public string CodigoBPIN { get; set; } // nvarchar(50)
		[Column, Nullable] public decimal? Puntaje { get; set; } // numeric(18, 2)
		[Column, Nullable] public DateTime? FechaPuntaje { get; set; } // datetime
		[Column, Nullable] public DateTime? FechaUltimaModificacion { get; set; } // datetime
		[Column, Nullable] public int? ConsecutivoCarga { get; set; } // int

		#region Associations

		/// <summary>
		/// FK_PuntajeEvaluacionProyectos_Proyecto
		/// </summary>
		[Association(ThisKey = "IdProyecto", OtherKey = "IdProyecto", CanBeNull = false, Relationship = LinqToDB.Mapping.Relationship.OneToOne, KeyName = "FK_PuntajeEvaluacionProyectos_Proyecto", BackReferenceName = "PuntajeEvaluacionProyecto")]
		public Proyecto Proyecto { get; set; }

		#endregion
	}

	[Table(Schema = "dbo", Name = "RecursoNatural")]
	public partial class RecursoNatural
	{
		[PrimaryKey(1), NotNull] public string IdRecursoNatural { get; set; } // varchar(10)
		[PrimaryKey(2), NotNull] public char IdTipoRecursoNatural { get; set; } // varchar(1)
		[Column, NotNull] public string NombreRecursoNatural { get; set; } // varchar(250)
		[Column, NotNull] public string NombreTipoRecursoNatural { get; set; } // varchar(250)
		[Column, NotNull] public DateTime FechaUltimaModificacion { get; set; } // datetime
		[Column, NotNull] public int ConsecutivoCarga { get; set; } // int

		#region Associations

		/// <summary>
		/// FK_Liquidacion_RecursoNatural1_BackReference
		/// </summary>
		[Association(ThisKey = "IdRecursoNatural, IdTipoRecursoNatural", OtherKey = "IdRecursoNatural, IdTipoRecursoNatural", CanBeNull = true, Relationship = LinqToDB.Mapping.Relationship.OneToMany, IsBackReference = true)]
		public IEnumerable<Liquidacion> LiquidacionRecursoNaturals { get; set; }

		/// <summary>
		/// FK_Produccion_RecursoNatural_BackReference
		/// </summary>
		[Association(ThisKey = "IdRecursoNatural, IdTipoRecursoNatural", OtherKey = "IdRecursoNatural, IdTipoRecursoNatural", CanBeNull = true, Relationship = LinqToDB.Mapping.Relationship.OneToMany, IsBackReference = true)]
		public IEnumerable<Produccion> Produccions { get; set; }

		/// <summary>
		/// FK_RecursoNatural_TipoDeRecursoNatural
		/// </summary>
		[Association(ThisKey = "IdTipoRecursoNatural", OtherKey = "IdTipoRecursoNatural", CanBeNull = false, Relationship = LinqToDB.Mapping.Relationship.ManyToOne, KeyName = "FK_RecursoNatural_TipoDeRecursoNatural", BackReferenceName = "RecursoNaturals")]
		public TipoDeRecursoNatural TipoDeRecursoNatural { get; set; }

		#endregion
	}

	[Table(Schema = "dbo", Name = "RecursoNaturalFiscalizacion")]
	public partial class RecursoNaturalFiscalizacion
	{
		[PrimaryKey(1), NotNull] public string IdRecursoNatural { get; set; } // varchar(10)
		[PrimaryKey(2), NotNull] public char IdTipoRecursoNatural { get; set; } // varchar(1)
		[Column, NotNull] public string NombreRecursoNatural { get; set; } // varchar(250)
		[Column, NotNull] public string NombreTipoRecursoNatural { get; set; } // varchar(250)
		[Column, NotNull] public DateTime FechaUltimaModificacion { get; set; } // datetime
		[Column, NotNull] public int ConsecutivoCarga { get; set; } // int

		#region Associations

		/// <summary>
		/// FK_Fiscalizacion_RecursoNaturalFiscalizacion_BackReference
		/// </summary>
		[Association(ThisKey = "IdRecursoNatural, IdTipoRecursoNatural", OtherKey = "IdRecursoNatural, IdTipoRecursoNatural", CanBeNull = true, Relationship = LinqToDB.Mapping.Relationship.OneToMany, IsBackReference = true)]
		public IEnumerable<Fiscalizacion> Fiscalizacions { get; set; }

		/// <summary>
		/// FK_RecursoNaturalFiscalizacion_TipoDeRecursoNatural
		/// </summary>
		[Association(ThisKey = "IdTipoRecursoNatural", OtherKey = "IdTipoRecursoNatural", CanBeNull = false, Relationship = LinqToDB.Mapping.Relationship.ManyToOne, KeyName = "FK_RecursoNaturalFiscalizacion_TipoDeRecursoNatural", BackReferenceName = "RecursoNaturalFiscalizacions")]
		public TipoDeRecursoNatural TipoDeRecursoNatural { get; set; }

		#endregion
	}

	[Table(Schema = "dbo", Name = "RendimientosFinancieros")]
	public partial class RendimientosFinanciero
	{
		[PrimaryKey(1), NotNull] public string IdDepartamento { get; set; } // varchar(10)
		[PrimaryKey(2), NotNull] public string IdMunicipio { get; set; } // varchar(10)
		[PrimaryKey(3), NotNull] public int AñoVigencia { get; set; } // int
		[PrimaryKey(4), NotNull] public int MesInicioVigencia { get; set; } // int
		[PrimaryKey(5), NotNull] public int MesFinVigencia { get; set; } // int
		[Column, NotNull] public double Valor { get; set; } // float
		[Column, NotNull] public DateTime FechaUltimaModificacion { get; set; } // datetime
		[Column, NotNull] public int ConsecutivoCarga { get; set; } // int

		#region Associations

		/// <summary>
		/// FK_RendimientosFinancieros_EnteTerritorial
		/// </summary>
		[Association(ThisKey = "IdDepartamento, IdMunicipio", OtherKey = "IdDepartamento, IdMunicipio", CanBeNull = false, Relationship = LinqToDB.Mapping.Relationship.ManyToOne, KeyName = "FK_RendimientosFinancieros_EnteTerritorial", BackReferenceName = "RendimientosFinancieros")]
		public EnteTerritorial EnteTerritorial { get; set; }

		#endregion
	}

	[Table(Schema = "dbo", Name = "RespuestaCuestionario")]
	public partial class RespuestaCuestionario
	{
		[PrimaryKey, Identity] public int IdRespuesta { get; set; } // int
		[Column, NotNull] public int IdUsuario { get; set; } // int
		[Column, NotNull] public int Idpregunta { get; set; } // int
		[Column, Nullable] public int? IdOpcionRespuesta { get; set; } // int
		[Column, Nullable] public DateTime? Fecha { get; set; } // datetime
		[Column, NotNull] public int IdProyecto { get; set; } // int
		[Column, NotNull] public string IdDepartamento { get; set; } // varchar(10)
		[Column, NotNull] public string IdMunicipio { get; set; } // varchar(10)
		[Column, Nullable] public string ComentarioRespuesta { get; set; } // varchar(4000)

		#region Associations

		/// <summary>
		/// Fk_RespuestaCuestionarioXEnteTerritorial
		/// </summary>
		[Association(ThisKey = "IdDepartamento, IdMunicipio", OtherKey = "IdDepartamento, IdMunicipio", CanBeNull = false, Relationship = LinqToDB.Mapping.Relationship.ManyToOne, KeyName = "Fk_RespuestaCuestionarioXEnteTerritorial", BackReferenceName = "FkRespuestaCuestionarioXEnteTerritorials")]
		public EnteTerritorial FkRespuestaCuestionarioXEnteTerritorial { get; set; }

		/// <summary>
		/// Fk_RespuestaCuestionarioxOpcionRespuesta
		/// </summary>
		[Association(ThisKey = "IdOpcionRespuesta", OtherKey = "IdOpcionRespuestas", CanBeNull = true, Relationship = LinqToDB.Mapping.Relationship.ManyToOne, KeyName = "Fk_RespuestaCuestionarioxOpcionRespuesta", BackReferenceName = "FkRespuestaCuestionarioxOpcionRespuestas")]
		public OpcionRespuesta FkRespuestaCuestionarioxOpcionRespuesta { get; set; }

		/// <summary>
		/// Fk_RespuestaCuestionarioxPreguntaCuestionario
		/// </summary>
		[Association(ThisKey = "Idpregunta", OtherKey = "IdPregunta", CanBeNull = false, Relationship = LinqToDB.Mapping.Relationship.ManyToOne, KeyName = "Fk_RespuestaCuestionarioxPreguntaCuestionario", BackReferenceName = "FkRespuestaCuestionarioxPreguntaCuestionarios")]
		public PreguntaCuestionario FkRespuestaCuestionarioxPreguntaCuestionario { get; set; }

		/// <summary>
		/// Fk_RespuestaCuestionarioXProyecto
		/// </summary>
		[Association(ThisKey = "IdProyecto", OtherKey = "IdProyecto", CanBeNull = false, Relationship = LinqToDB.Mapping.Relationship.ManyToOne, KeyName = "Fk_RespuestaCuestionarioXProyecto", BackReferenceName = "FkRespuestaCuestionarioXProyectoes")]
		public Proyecto FkRespuestaCuestionarioXProyecto { get; set; }

		/// <summary>
		/// Fk_RespuestaCuestionarioXUsuario
		/// </summary>
		[Association(ThisKey = "IdUsuario", OtherKey = "IdUsuario", CanBeNull = false, Relationship = LinqToDB.Mapping.Relationship.ManyToOne, KeyName = "Fk_RespuestaCuestionarioXUsuario", BackReferenceName = "FkRespuestaCuestionarioXUsuarios")]
		public Usuario FkRespuestaCuestionarioXUsuario { get; set; }

		#endregion
	}

	[Table(Schema = "dbo", Name = "RespuestaCuestionarioTemp")]
	public partial class RespuestaCuestionarioTemp
	{
		[PrimaryKey, NotNull] public int IdRespuesta { get; set; } // int
		[Column, NotNull] public int IdUsuario { get; set; } // int
		[Column, NotNull] public int Idpregunta { get; set; } // int
		[Column, Nullable] public int? IdOpcionRespuesta { get; set; } // int
		[Column, Nullable] public DateTime? Fecha { get; set; } // datetime
		[Column, NotNull] public int IdProyecto { get; set; } // int
		[Column, NotNull] public string IdDepartamento { get; set; } // varchar(10)
		[Column, NotNull] public string IdMunicipio { get; set; } // varchar(10)
		[Column, Nullable] public string ComentarioRespuesta { get; set; } // varchar(4000)
	}

	[Table(Schema = "dbo", Name = "ResumenEstadisticasNacional")]
	public partial class ResumenEstadisticasNacional
	{
		[Column("id"), PrimaryKey, Identity] public int Id { get; set; } // int
		[Column(), NotNull] public string RutaIcono { get; set; } // varchar(max)
		[Column(), NotNull] public string ConsultaSQL { get; set; } // varchar(max)
		[Column(), NotNull] public string Descripcion { get; set; } // varchar(1000)
		[Column(), NotNull] public string SeccionAplicativo { get; set; } // varchar(250)
	}

	[Table(Schema = "dbo", Name = "Rol")]
	public partial class Rol
	{
		[PrimaryKey, NotNull] public int IdRol { get; set; } // int
		[Column, NotNull] public string NombreRol { get; set; } // varchar(50)
		[Column, NotNull] public DateTime FechaUltimaModificacion { get; set; } // datetime
		[Column, NotNull] public int ConsecutivoCarga { get; set; } // int
		[Column, NotNull] public string ModificadoPor { get; set; } // varchar(30)

		#region Associations

		/// <summary>
		/// FK_ActorXRol_BackReference
		/// </summary>
		[Association(ThisKey = "IdRol", OtherKey = "IDRol", CanBeNull = true, Relationship = LinqToDB.Mapping.Relationship.OneToMany, IsBackReference = true)]
		public IEnumerable<Actor> ActorXRols { get; set; }

		#endregion
	}

	[Table(Schema = "dbo", Name = "RolUsuario")]
	public partial class RolUsuario
	{
		[PrimaryKey, Identity] public int IdRolUsuario { get; set; } // int
		[Column, NotNull] public string NombreRol { get; set; } // varchar(50)
		[Column, Nullable] public DateTime? FechaCreacion { get; set; } // datetime

		#region Associations

		/// <summary>
		/// Fk_UsuarioXRolUsuario_BackReference
		/// </summary>
		[Association(ThisKey = "IdRolUsuario", OtherKey = "IdRolUsuario", CanBeNull = true, Relationship = LinqToDB.Mapping.Relationship.OneToMany, IsBackReference = true)]
		public IEnumerable<Usuario> FkUsuarioXRolUsuarios { get; set; }

		#endregion
	}

    [Table(Schema = "consulta", Name = "SearchResultParam")]
    public partial class consulta_SearchResultParam
    {
        [Column(), PrimaryKey, Identity] public int Id { get; set; } // int
        [Column("hierarchy"), NotNull] public string Hierarchy { get; set; } // varchar(100)
        [Column("type"), NotNull] public string Type { get; set; } // varchar(50)
        [Column("url"), NotNull] public string Url { get; set; } // varchar(250)
        [Column("param"), Nullable] public string Param { get; set; } // varchar(250)
    }


    [Table(Schema = "dbo", Name = "Sector")]
	public partial class Sector
	{
		[PrimaryKey, NotNull] public int IdSector { get; set; } // int
		[Column, NotNull] public string NombreSector { get; set; } // varchar(200)
		[Column, NotNull] public DateTime FechaUltimaModificacion { get; set; } // datetime
		[Column, NotNull] public int ConsecutivoCarga { get; set; } // int
		[Column, NotNull] public string Modificadopor { get; set; } // varchar(30)

		#region Associations

		/// <summary>
		/// Fk_ProyectoXSector_BackReference
		/// </summary>
		[Association(ThisKey = "IdSector", OtherKey = "IdSector", CanBeNull = true, Relationship = LinqToDB.Mapping.Relationship.OneToMany, IsBackReference = true)]
		public IEnumerable<Proyecto> FkProyectoXSectors { get; set; }

		#endregion
	}

	[Table(Schema = "dbo", Name = "SeguimientoEsquemaFinanciacionProyecto")]
	public partial class SeguimientoEsquemaFinanciacionProyecto
	{
		[Column("idSeguimientoEsquemaFinanciacion"), PrimaryKey, Identity] public int IdSeguimientoEsquemaFinanciacion { get; set; } // int
		[Column(), Nullable] public decimal? ValorReportado { get; set; } // decimal(18, 2)
		[Column(), NotNull] public decimal PresupuestoVigente { get; set; } // decimal(18, 2)
		[Column(), NotNull] public decimal PresupuestoObligado { get; set; } // decimal(18, 2)
		[Column(), NotNull] public decimal PresupuestoPagado { get; set; } // decimal(18, 2)
		[Column(), NotNull] public int Anio { get; set; } // int
		[Column(), NotNull] public DateTime FechaInicioReporte { get; set; } // datetime
		[Column(), NotNull] public DateTime FechaFinalReporte { get; set; } // datetime
		[Column(), NotNull] public int IdTipoRecurso { get; set; } // int
		[Column(), NotNull] public int IdTipoEntidad { get; set; } // int
		[Column(), NotNull] public string IdEntidad { get; set; } // varchar(30)
		[Column("idProyecto"), NotNull] public int IdProyecto { get; set; } // int
		[Column(), NotNull] public DateTime FechaUltimaModificacion { get; set; } // datetime
		[Column(), NotNull] public int ConsecutivoCarga { get; set; } // int
		[Column(), NotNull] public string ModificadoPor { get; set; } // varchar(50)

		#region Associations

		/// <summary>
		/// FK_SeguimientoEsquemaFinanciacionProyecto_Fuente
		/// </summary>
		[Association(ThisKey = "IdTipoRecurso, IdTipoEntidad, IdEntidad", OtherKey = "IdTipoRecurso, IdTipoEntidad, IdEntidad", CanBeNull = false, Relationship = LinqToDB.Mapping.Relationship.ManyToOne, KeyName = "FK_SeguimientoEsquemaFinanciacionProyecto_Fuente", BackReferenceName = "SeguimientoEsquemaFinanciacionProyectoes")]
		public Fuente Fuente { get; set; }

		/// <summary>
		/// FK_SeguimientoEsquemaFinanciacionProyecto_Proyecto
		/// </summary>
		[Association(ThisKey = "IdProyecto", OtherKey = "IdProyecto", CanBeNull = false, Relationship = LinqToDB.Mapping.Relationship.ManyToOne, KeyName = "FK_SeguimientoEsquemaFinanciacionProyecto_Proyecto", BackReferenceName = "SeguimientoEsquemaFinanciacionProyectoes")]
		public Proyecto Proyecto { get; set; }

		#endregion
	}

	[Table(Schema = "dbo", Name = "SeguimientoMetaIndicadorProducto")]
	public partial class SeguimientoMetaIndicadorProducto
	{
		[Column("idSeguimientoMetaIndicadorProducto"), PrimaryKey, Identity] public int IdSeguimientoMetaIndicadorProducto { get; set; } // int
		[Column(), NotNull] public double ValorReportado { get; set; } // float
		[Column(), NotNull] public DateTime FechaInicioReporte { get; set; } // datetime
		[Column(), NotNull] public DateTime FechaFinReporte { get; set; } // datetime
		[Column(), NotNull] public DateTime FechaUltimaModificacion { get; set; } // datetime
		[Column(), NotNull] public int ConsecutivoCarga { get; set; } // int
		[Column(), NotNull] public string ModificadoPor { get; set; } // varchar(50)
		[Column(), NotNull] public int IdProducto { get; set; } // int
		[Column(), NotNull] public int IdIndicador { get; set; } // int

		#region Associations

		/// <summary>
		/// FK_SeguimientoMetaIndicadorProducto_Producto
		/// </summary>
		[Association(ThisKey = "IdProducto", OtherKey = "IdProducto", CanBeNull = false, Relationship = LinqToDB.Mapping.Relationship.ManyToOne, KeyName = "FK_SeguimientoMetaIndicadorProducto_Producto", BackReferenceName = "SeguimientoMetaIndicadorProductoes")]
		public Producto Producto { get; set; }

		#endregion
	}

	[Table(Schema = "dbo", Name = "Subsidios")]
	public partial class Subsidio
	{
		[Column, Nullable] public string NumeroDocumento { get; set; } // nvarchar(50)
		[Column, Nullable] public string NombreBeneficiario { get; set; } // nvarchar(255)
		[Column, Nullable] public string CodigoDepartamento { get; set; } // nvarchar(10)
		[Column, Nullable] public string NombreDepartamento { get; set; } // nvarchar(255)
		[Column, Nullable] public string CodigoDistrito { get; set; } // nvarchar(10)
		[Column, Nullable] public string NombreDistrito { get; set; } // nvarchar(255)
		[Column, Nullable] public string CaracteristicaSubsidio { get; set; } // nvarchar(255)
		[Column, Nullable] public int? ValorSubsidio { get; set; } // int
		[Column, Nullable] public int? CantidadSubsidio { get; set; } // int
		[Column, Nullable] public int? IdPrograma { get; set; } // int
		[Column, Nullable] public int? IdNivel { get; set; } // int
		[Column, Nullable] public int? IdEntidad { get; set; } // int
		[Column, Nullable] public int? IdActividad { get; set; } // int
		[Column, Nullable] public DateTime? FechaEntregaSubsidio { get; set; } // datetime
		[Column, Nullable] public string Beneficiario { get; set; } // nvarchar(255)
		[Column, Nullable] public string TipoSubsidio { get; set; } // nvarchar(255)
		[Column, Nullable] public string TipoKit { get; set; } // nvarchar(255)
		[Column, Nullable] public string Observaciones { get; set; } // nvarchar(255)
		[Column, Nullable] public DateTime? FechaModificacion { get; set; } // datetime
		[Column, Nullable] public int? TipoSubsidioPrograma { get; set; } // int
		[Column, Nullable] public int? Claseprograma { get; set; } // int
	}

	[Table(Schema = "dbo", Name = "SubsidioArtistas")]
	public partial class SubsidioArtista
	{
		[Column("idprograma"), Nullable] public string Idprograma { get; set; } // varchar(80)
		[Column(), Nullable] public string IdSubsidio { get; set; } // varchar(80)
		[Column(), Nullable] public string IdMunicipio { get; set; } // varchar(50)
		[Column(), Nullable] public string IdDepartamento { get; set; } // varchar(50)
		[Column("departamento"), Nullable] public string Departamento { get; set; } // varchar(50)
		[Column(), Nullable] public int? NumeroPago { get; set; } // int
		[Column("valor"), Nullable] public long? Valor { get; set; } // bigint
		[Column(), Nullable] public int? NroSubsidios { get; set; } // int
	}

	[Table(Schema = "dbo", Name = "SubsidioPytyvoV1")]
	public partial class SubsidioPytyvoV1
	{
		[Column(), Nullable] public string Departamento { get; set; } // nvarchar(255)
		[Column(), Nullable] public string Ciudad { get; set; } // nvarchar(50)
		[Column("subsidioTipo"), Nullable] public string SubsidioTipo { get; set; } // varchar(5)
		[Column("nroSubsidios"), Nullable] public int? NroSubsidios { get; set; } // int
		[Column("valor"), Nullable] public decimal? Valor { get; set; } // numeric(19, 2)
	}

	[Table(Schema = "dbo", Name = "SubsidioPytyvoV1bak")]
	public partial class SubsidioPytyvoV1bak
	{
		[Column(), Nullable] public string Departamento { get; set; } // nvarchar(255)
		[Column(), Nullable] public string Ciudad { get; set; } // nvarchar(50)
		[Column("subsidioTipo"), Nullable] public string SubsidioTipo { get; set; } // varchar(5)
		[Column("nroSubsidios"), Nullable] public int? NroSubsidios { get; set; } // int
		[Column("valor"), Nullable] public decimal? Valor { get; set; } // numeric(19, 2)
	}

	[Table(Schema = "dbo", Name = "SubsidioPytyvoV2")]
	public partial class SubsidioPytyvoV2
	{
		[Column, Nullable] public string IdMunicipio { get; set; } // varchar(10)
		[Column, Nullable] public double? PrimerPago { get; set; } // float
		[Column, Nullable] public double? SegundoPago { get; set; } // float
		[Column, Nullable] public double? TercerPago { get; set; } // float
	}

	[Table(Schema = "dbo", Name = "SubsidiosConsolidados")]
	public partial class SubsidiosConsolidado
	{
		[Column, NotNull] public string IdSubsidio { get; set; } // varchar(24)
		[Column, Nullable] public int? IdPrograma { get; set; } // int
		[Column, NotNull] public int IdTipoSubsidio { get; set; } // int
		[Column, Nullable] public string TipoSubsidio { get; set; } // varchar(100)
		[Column, Nullable] public decimal? TotalSubsidio { get; set; } // decimal(18, 2)
		[Column, NotNull] public int TotalBeneficiarios { get; set; } // int
		[Column, NotNull] public int TotalSubsidiosEntregados { get; set; } // int
		[Column, Nullable] public string URLSubsidios { get; set; } // varchar(60)
		[Column, Nullable] public int? CodigoProyecto { get; set; } // int
	}

	[Table(Schema = "dbo", Name = "Subsidios_Pytyvo")]
	public partial class SubsidiosPytyvo
	{
		[Column(), Nullable] public double? CEDULA { get; set; } // float
		[Column("NOMBRE Y APELLIDO"), Nullable] public string NOMBREYAPELLIDO { get; set; } // nvarchar(255)
		[Column(), NotNull] public string IdDepartamento { get; set; } // varchar(10)
		[Column(), NotNull] public string IdMunicipio { get; set; } // varchar(10)
		[Column(), Nullable] public long? Valor { get; set; } // bigint
		[Column("cantidad"), Nullable] public long? Cantidad { get; set; } // bigint
		[Column(), NotNull] public string IdSubsidio { get; set; } // varchar(6)
		[Column(), NotNull] public string IdPrograma { get; set; } // varchar(5)
		[Column(), NotNull] public int IdTipoSubsidio { get; set; } // int
		[Column(), NotNull] public string CaracteristicaSubsidio { get; set; } // varchar(23)
	}

	[Table(Schema = "dbo", Name = "Tiempo")]
	public partial class Tiempo
	{
		[PrimaryKey, NotNull] public int IdFecha { get; set; } // int
		[Column, NotNull] public DateTime Fecha { get; set; } // datetime
		[Column, NotNull] public int Anio { get; set; } // int
		[Column, NotNull] public int MesNro { get; set; } // int
		[Column, NotNull] public int Dia { get; set; } // int
		[Column, NotNull] public int AnioMesNro { get; set; } // int
		[Column, NotNull] public string AnioMes { get; set; } // nvarchar(7)
		[Column, NotNull] public string Semestre { get; set; } // nvarchar(10)
		[Column, NotNull] public string MesNombre { get; set; } // nvarchar(10)
		[Column, NotNull] public string MesNombreCorto { get; set; } // nvarchar(3)
		[Column, NotNull] public int Trimestre { get; set; } // int
	}

	[Table(Schema = "dbo", Name = "TipoActividadFiscalizacion")]
	public partial class TipoActividadFiscalizacion
	{
		[PrimaryKey, NotNull] public string Id { get; set; } // nvarchar(50)
		[Column, NotNull] public string Nombre { get; set; } // varchar(250)

		#region Associations

		/// <summary>
		/// FK_Fiscalizacion_TipoActividadFiscalizacion_BackReference
		/// </summary>
		[Association(ThisKey = "Id", OtherKey = "IdTipoActividad", CanBeNull = true, Relationship = LinqToDB.Mapping.Relationship.OneToMany, IsBackReference = true)]
		public IEnumerable<Fiscalizacion> Fiscalizacions { get; set; }

		#endregion
	}

	[Table(Schema = "dbo", Name = "TipoCampoOProyecto")]
	public partial class TipoCampoOProyecto
	{
		[PrimaryKey, NotNull] public string IdTipoCampoOProyecto { get; set; } // nvarchar(50)
		[Column, NotNull] public string NombreTipoCampoOProyecto { get; set; } // varchar(250)
		[Column, NotNull] public DateTime FechaUltimaModificacion { get; set; } // datetime
		[Column, NotNull] public int ConsecutivoCarga { get; set; } // int

		#region Associations

		/// <summary>
		/// FK_CampoOProyecto_TipoCampoOProyecto_BackReference
		/// </summary>
		[Association(ThisKey = "IdTipoCampoOProyecto", OtherKey = "IdTipoCampoOProyecto", CanBeNull = true, Relationship = LinqToDB.Mapping.Relationship.OneToMany, IsBackReference = true)]
		public IEnumerable<CampoOProyecto> CampoOProyectos { get; set; }

		/// <summary>
		/// FK_CampoOProyectoFiscalizacion_TipoCampoOProyecto_BackReference
		/// </summary>
		[Association(ThisKey = "IdTipoCampoOProyecto", OtherKey = "IdTipoCampoOProyecto", CanBeNull = true, Relationship = LinqToDB.Mapping.Relationship.OneToMany, IsBackReference = true)]
		public IEnumerable<CampoOProyectoFiscalizacion> CampoOProyectoFiscalizacions { get; set; }

		#endregion
	}

	[Table(Schema = "dbo", Name = "TipoComentario")]
	public partial class TipoComentario
	{
		[Column(), PrimaryKey, Identity] public int Id { get; set; } // int
		[Column("TipoComentario"), NotNull] public string TipoComentarioColumn { get; set; } // varchar(100)
		[Column(), Nullable] public bool? Estado { get; set; } // bit

		#region Associations

		/// <summary>
		/// FK_Comentario_TipoComentario_BackReference
		/// </summary>
		[Association(ThisKey = "Id", OtherKey = "IdTipoComentario", CanBeNull = true, Relationship = LinqToDB.Mapping.Relationship.OneToMany, IsBackReference = true)]
		public IEnumerable<Comentario> Comentarios { get; set; }

		#endregion
	}

	[Table(Schema = "dbo", Name = "TipoContraprestacion")]
	public partial class TipoContraprestacion
	{
		[PrimaryKey, NotNull] public string IdTipoContraprestacion { get; set; } // nvarchar(50)
		[Column, Nullable] public string NombreTipoContraprestacion { get; set; } // varchar(300)
		[Column, NotNull] public int ConsecutivoCarga { get; set; } // int

		#region Associations

		/// <summary>
		/// FK_Liquidacion_TipoContraprestacion_BackReference
		/// </summary>
		[Association(ThisKey = "IdTipoContraprestacion", OtherKey = "IdTipoContraprestacion", CanBeNull = true, Relationship = LinqToDB.Mapping.Relationship.OneToMany, IsBackReference = true)]
		public IEnumerable<Liquidacion> Liquidacions { get; set; }

		#endregion
	}

	[Table(Schema = "dbo", Name = "TipoDeFinanciacion")]
	public partial class TipoDeFinanciacion
	{
		[PrimaryKey, NotNull] public int IdTipoFinanciacion { get; set; } // int
		[Column, NotNull] public string TipoFinanciacion { get; set; } // varchar(500)

		#region Associations

		/// <summary>
		/// FK_Distribucion_TipoDeFinanciacion_BackReference
		/// </summary>
		[Association(ThisKey = "IdTipoFinanciacion", OtherKey = "IdTipoDeFinanciacion", CanBeNull = true, Relationship = LinqToDB.Mapping.Relationship.OneToMany, IsBackReference = true)]
		public IEnumerable<Distribucion> Distribucions { get; set; }

		/// <summary>
		/// FK_Liquidacion_TipoDeFinanciacion_BackReference
		/// </summary>
		[Association(ThisKey = "IdTipoFinanciacion", OtherKey = "IdTipoDeFinanciacion", CanBeNull = true, Relationship = LinqToDB.Mapping.Relationship.OneToMany, IsBackReference = true)]
		public IEnumerable<Liquidacion> Liquidacions { get; set; }

		/// <summary>
		/// FK_Produccion_TipoDeFinanciacion_BackReference
		/// </summary>
		[Association(ThisKey = "IdTipoFinanciacion", OtherKey = "IdTipoDeFinanciacion", CanBeNull = true, Relationship = LinqToDB.Mapping.Relationship.OneToMany, IsBackReference = true)]
		public IEnumerable<Produccion> Produccions { get; set; }

		#endregion
	}

	[Table(Schema = "dbo", Name = "TipoDeRecursoNatural")]
	public partial class TipoDeRecursoNatural
	{
		[PrimaryKey, NotNull] public char IdTipoRecursoNatural { get; set; } // varchar(1)
		[Column, Nullable] public string NombreTipoDeRecurso { get; set; } // varchar(50)
		[Column, NotNull] public int ConsecutivoCarga { get; set; } // int

		#region Associations

		/// <summary>
		/// FK_RecursoNaturalFiscalizacion_TipoDeRecursoNatural_BackReference
		/// </summary>
		[Association(ThisKey = "IdTipoRecursoNatural", OtherKey = "IdTipoRecursoNatural", CanBeNull = true, Relationship = LinqToDB.Mapping.Relationship.OneToMany, IsBackReference = true)]
		public IEnumerable<RecursoNaturalFiscalizacion> RecursoNaturalFiscalizacions { get; set; }

		/// <summary>
		/// FK_RecursoNatural_TipoDeRecursoNatural_BackReference
		/// </summary>
		[Association(ThisKey = "IdTipoRecursoNatural", OtherKey = "IdTipoRecursoNatural", CanBeNull = true, Relationship = LinqToDB.Mapping.Relationship.OneToMany, IsBackReference = true)]
		public IEnumerable<RecursoNatural> RecursoNaturals { get; set; }

		#endregion
	}

	[Table(Schema = "dbo", Name = "Tipologias")]
	public partial class Tipologia
	{
		[Column(), PrimaryKey, Identity] public int IdTipologia { get; set; } // int
		[Column("Tipologia"), NotNull] public string TipologiaColumn { get; set; } // varchar(100)

		#region Associations

		/// <summary>
		/// FK_TipologiasComentario_Tipologias_BackReference
		/// </summary>
		[Association(ThisKey = "IdTipologia", OtherKey = "IdTipologia", CanBeNull = true, Relationship = LinqToDB.Mapping.Relationship.OneToMany, IsBackReference = true)]
		public IEnumerable<TipologiasComentario> TipologiasComentarios { get; set; }

		#endregion
	}

	[Table(Schema = "dbo", Name = "TipologiasComentario")]
	public partial class TipologiasComentario
	{
		[PrimaryKey, Identity] public int IdTipologiaComenario { get; set; } // int
		[Column, NotNull] public int IdTipologia { get; set; } // int
		[Column, NotNull] public int IdComentario { get; set; } // int

		#region Associations

		/// <summary>
		/// FK_TipologiasComentario_Tipologias
		/// </summary>
		[Association(ThisKey = "IdTipologia", OtherKey = "IdTipologia", CanBeNull = false, Relationship = LinqToDB.Mapping.Relationship.ManyToOne, KeyName = "FK_TipologiasComentario_Tipologias", BackReferenceName = "TipologiasComentarios")]
		public Tipologia Tipologia { get; set; }

		#endregion
	}

	[Table(Schema = "dbo", Name = "TipoPermiso")]
	public partial class TipoPermiso
	{
		[PrimaryKey, Identity] public int IdTipoPermiso { get; set; } // int
		[Column, NotNull] public string NombrePermiso { get; set; } // varchar(100)

		#region Associations

		/// <summary>
		/// Fk_UsuarioXEntidadxTipoPermiso_BackReference
		/// </summary>
		[Association(ThisKey = "IdTipoPermiso", OtherKey = "IdTipoPermiso", CanBeNull = true, Relationship = LinqToDB.Mapping.Relationship.OneToMany, IsBackReference = true)]
		public IEnumerable<UsuarioXEntidad> FkUsuarioXEntidadxTipoPermisos { get; set; }

		#endregion
	}

	[Table(Schema = "dbo", Name = "TipoRespuesta")]
	public partial class TipoRespuesta
	{
		[Column(), PrimaryKey, Identity] public int Id { get; set; } // int
		[Column("TipoRespuesta"), Nullable] public string TipoRespuestaColumn { get; set; } // varchar(50)
	}

	[Table(Schema = "dbo", Name = "tmp_cahCreditosOtorgadosPresupuestoPropioInstitucional")]
	public partial class TmpCahCreditosOtorgadosPresupuestoPropioInstitucional
	{
		[Column("gerencia"), NotNull] public string Gerencia { get; set; } // nvarchar(50)
		[Column("sucursal"), NotNull] public string Sucursal { get; set; } // nvarchar(50)
		[Column("sector"), NotNull] public string Sector { get; set; } // nvarchar(50)
		[Column("nuevo"), Nullable] public byte? Nuevo { get; set; } // tinyint
		[Column("viejo"), Nullable] public byte? Viejo { get; set; } // tinyint
		[Column("importe"), Nullable] public int? Importe { get; set; } // int
		[Column("fuente"), Nullable] public string Fuente { get; set; } // nvarchar(50)
		[Column("fondoTipo"), Nullable] public string FondoTipo { get; set; } // nvarchar(50)
		[Column("codigoIndicador"), Nullable] public int? CodigoIndicador { get; set; } // int
	}

	[Table(Schema = "dbo", Name = "TmpCahCreditosOtorgadosPresupuestoPropioInstitucional")]
	public partial class TmpCahCreditosOtorgadosPresupuestoPropioInstitucional0
	{
		[Column(), NotNull] public string Fuente { get; set; } // nvarchar(50)
		[Column(), NotNull] public string FondoTipo { get; set; } // nvarchar(100)
		[Column(), NotNull] public string DistribucionGerencia { get; set; } // nvarchar(50)
		[Column(), NotNull] public string DistribucionCodigoDelDepartamento { get; set; } // varchar(20)
		[Column(), NotNull] public string DistribucionDepartamento { get; set; } // nvarchar(50)
		[Column(), NotNull] public string DistribucionSucursal { get; set; } // nvarchar(50)
		[Column(), NotNull] public string Sector { get; set; } // nvarchar(50)
		[Column(), Nullable] public byte? Nuevo { get; set; } // tinyint
		[Column(), Nullable] public byte? Viejo { get; set; } // tinyint
		[Column(), Nullable] public int? Importe { get; set; } // int
		[Column("filesource"), NotNull] public string Filesource { get; set; } // nvarchar(100)
		[Column("id"), Identity] public int Id { get; set; } // int
		[Column("codigoprogramaNegocio"), Nullable] public int? CodigoprogramaNegocio { get; set; } // int
		[Column(), Nullable] public int? CodigoProyecto { get; set; } // int
		[Column(), NotNull] public DateTime FechaCargue { get; set; } // datetime
	}

	[Table(Schema = "dbo", Name = "tmp_CreditosOtorgadosFondoCovidPrograma21deCreditoAgricolaDeHabilitacion")]
	public partial class TmpCreditosOtorgadosFondoCovidPrograma21deCreditoAgricolaDeHabilitacion
	{
		[Column("gerencia"), NotNull] public string Gerencia { get; set; } // nvarchar(50)
		[Column("sucursal"), NotNull] public string Sucursal { get; set; } // nvarchar(50)
		[Column("sector"), NotNull] public string Sector { get; set; } // nvarchar(50)
		[Column("entregado"), Nullable] public byte? Entregado { get; set; } // tinyint
		[Column("importe"), Nullable] public int? Importe { get; set; } // int
		[Column("fuente"), Nullable] public string Fuente { get; set; } // nvarchar(50)
		[Column("fondoTipo"), Nullable] public string FondoTipo { get; set; } // nvarchar(50)
		[Column("codigoIndicador"), Nullable] public int? CodigoIndicador { get; set; } // int
	}

	[Table(Schema = "dbo", Name = "TmpCreditosOtorgadosFondoCovidPrograma21DeCreditoAgricolaDeHabilitacion")]
	public partial class TmpCreditosOtorgadosFondoCovidPrograma21DeCreditoAgricolaDeHabilitacion
	{
		[Column(), NotNull] public string Fuente { get; set; } // nvarchar(50)
		[Column(), NotNull] public string FondoTipo { get; set; } // nvarchar(50)
		[Column(), NotNull] public string DistribucionGerencia { get; set; } // nvarchar(50)
		[Column(), NotNull] public string DistribucionCodigoDelDepartamento { get; set; } // varchar(20)
		[Column(), NotNull] public string DistribucionDepartamento { get; set; } // nvarchar(50)
		[Column(), NotNull] public string DistribucionSucursal { get; set; } // nvarchar(50)
		[Column(), NotNull] public string Sector { get; set; } // nvarchar(50)
		[Column(), Nullable] public byte? Entregado { get; set; } // tinyint
		[Column(), Nullable] public int? Importe { get; set; } // int
		[Column("filesource"), NotNull] public string Filesource { get; set; } // nvarchar(100)
		[Column("id"), Identity] public int Id { get; set; } // int
		[Column("codigoprogramaNegocio"), Nullable] public int? CodigoprogramaNegocio { get; set; } // int
		[Column(), Nullable] public int? CodigoProyecto { get; set; } // int
		[Column(), NotNull] public DateTime FechaCargue { get; set; } // datetime
	}

	[Table(Schema = "dbo", Name = "UnidadMedida")]
	public partial class UnidadMedida
	{
		[PrimaryKey, NotNull] public string IdUnidadMedida { get; set; } // nvarchar(20)
		[Column, NotNull] public string NombreUnidadMedida { get; set; } // varchar(250)
		[Column, NotNull] public int ConsecutivoCarga { get; set; } // int

		#region Associations

		/// <summary>
		/// FK_Produccion_UnidadMedida_BackReference
		/// </summary>
		[Association(ThisKey = "IdUnidadMedida", OtherKey = "IdUnidadMedida", CanBeNull = true, Relationship = LinqToDB.Mapping.Relationship.OneToMany, IsBackReference = true)]
		public IEnumerable<Produccion> Produccions { get; set; }

		#endregion
	}

	[Table(Schema = "dbo", Name = "Usuario")]
	public partial class Usuario
	{
		[Column(), PrimaryKey, Identity] public int IdUsuario { get; set; } // int
		[Column(), NotNull] public string Nombre { get; set; } // varchar(400)
		[Column("email"), NotNull] public string Email { get; set; } // varchar(200)
		[Column("hash_clave"), NotNull] public string HashClave { get; set; } // varchar(200)
		[Column(), Nullable] public string FacebookID { get; set; } // varchar(200)
		[Column(), Nullable] public string Estado { get; set; } // varchar(50)
		[Column(), Nullable] public DateTime? FCambioPwd { get; set; } // datetime
		[Column("cod_verifica"), Nullable] public string CodVerifica { get; set; } // varchar(64)
		[Column(), Nullable] public DateTime? FechaCreacion { get; set; } // datetime
		[Column(), Nullable] public int? Edad { get; set; } // int
		[Column(), Nullable] public int? IdRolUsuario { get; set; } // int
		[Column(), Nullable] public int? IdGeneroUsuario { get; set; } // int
		[Column(), Nullable] public int? IdMedioMapaIUsuario { get; set; } // int

		#region Associations

		/// <summary>
		/// Fk_FotoUsuarioXUsuario_BackReference
		/// </summary>
		[Association(ThisKey = "IdUsuario", OtherKey = "IdUsuario", CanBeNull = true, Relationship = LinqToDB.Mapping.Relationship.OneToMany, IsBackReference = true)]
		public IEnumerable<FotoUsuario> FkFotoUsuarioXUsuarios { get; set; }

		/// <summary>
		/// Fk_MeGustaXUsuario_BackReference
		/// </summary>
		[Association(ThisKey = "IdUsuario", OtherKey = "IdUsuario", CanBeNull = true, Relationship = LinqToDB.Mapping.Relationship.OneToMany, IsBackReference = true)]
		public IEnumerable<MeGusta> FkMeGustaXUsuarios { get; set; }

		/// <summary>
		/// Fk_RespuestaCuestionarioXUsuario_BackReference
		/// </summary>
		[Association(ThisKey = "IdUsuario", OtherKey = "IdUsuario", CanBeNull = true, Relationship = LinqToDB.Mapping.Relationship.OneToMany, IsBackReference = true)]
		public IEnumerable<RespuestaCuestionario> FkRespuestaCuestionarioXUsuarios { get; set; }

		/// <summary>
		/// Fk_UsuarioXEntidadxUsuario_BackReference
		/// </summary>
		[Association(ThisKey = "IdUsuario", OtherKey = "IdUsuario", CanBeNull = true, Relationship = LinqToDB.Mapping.Relationship.OneToMany, IsBackReference = true)]
		public IEnumerable<UsuarioXEntidad> FkUsuarioXEntidadxUsuarios { get; set; }

		/// <summary>
		/// Fk_UsuarioXGeneroUsuario
		/// </summary>
		[Association(ThisKey = "IdGeneroUsuario", OtherKey = "IdGeneroUsuario", CanBeNull = true, Relationship = LinqToDB.Mapping.Relationship.ManyToOne, KeyName = "Fk_UsuarioXGeneroUsuario", BackReferenceName = "FkUsuarioXGeneroUsuarios")]
		public GeneroUsuario FkUsuarioXGeneroUsuario { get; set; }

		/// <summary>
		/// Fk_UsuarioXMedioMapaIUsuario
		/// </summary>
		[Association(ThisKey = "IdMedioMapaIUsuario", OtherKey = "IdMedioMapaIUsuario", CanBeNull = true, Relationship = LinqToDB.Mapping.Relationship.ManyToOne, KeyName = "Fk_UsuarioXMedioMapaIUsuario", BackReferenceName = "FkUsuarioXMedioMapaIUsuarios")]
		public MedioMapaIUsuario FkUsuarioXMedioMapaIUsuario { get; set; }

		/// <summary>
		/// Fk_UsuarioXRolUsuario
		/// </summary>
		[Association(ThisKey = "IdRolUsuario", OtherKey = "IdRolUsuario", CanBeNull = true, Relationship = LinqToDB.Mapping.Relationship.ManyToOne, KeyName = "Fk_UsuarioXRolUsuario", BackReferenceName = "FkUsuarioXRolUsuarios")]
		public RolUsuario FkUsuarioXRolUsuario { get; set; }

		#endregion
	}

	[Table(Schema = "dbo", Name = "UsuarioXEntidad")]
	public partial class UsuarioXEntidad
	{
		[PrimaryKey, Identity] public int Id { get; set; } // int
		[Column, NotNull] public int IdUsuario { get; set; } // int
		[Column, NotNull] public string IdDepartamento { get; set; } // varchar(10)
		[Column, NotNull] public string IdMunicipio { get; set; } // varchar(10)
		[Column, NotNull] public int IdTipoPermiso { get; set; } // int

		#region Associations

		/// <summary>
		/// Fk_UsuarioXEntidadXEnteTerritorial
		/// </summary>
		[Association(ThisKey = "IdDepartamento, IdMunicipio", OtherKey = "IdDepartamento, IdMunicipio", CanBeNull = false, Relationship = LinqToDB.Mapping.Relationship.ManyToOne, KeyName = "Fk_UsuarioXEntidadXEnteTerritorial", BackReferenceName = "FkUsuarioXEntidadXEnteTerritorials")]
		public EnteTerritorial FkUsuarioXEntidadXEnteTerritorial { get; set; }

		/// <summary>
		/// Fk_UsuarioXEntidadxTipoPermiso
		/// </summary>
		[Association(ThisKey = "IdTipoPermiso", OtherKey = "IdTipoPermiso", CanBeNull = false, Relationship = LinqToDB.Mapping.Relationship.ManyToOne, KeyName = "Fk_UsuarioXEntidadxTipoPermiso", BackReferenceName = "FkUsuarioXEntidadxTipoPermisoes")]
		public TipoPermiso FkUsuarioXEntidadxTipoPermiso { get; set; }

		/// <summary>
		/// Fk_UsuarioXEntidadxUsuario
		/// </summary>
		[Association(ThisKey = "IdUsuario", OtherKey = "IdUsuario", CanBeNull = false, Relationship = LinqToDB.Mapping.Relationship.ManyToOne, KeyName = "Fk_UsuarioXEntidadxUsuario", BackReferenceName = "FkUsuarioXEntidadxUsuarios")]
		public Usuario FkUsuarioXEntidadxUsuario { get; set; }

		#endregion
	}

    [Table(Schema = "minhac", Name = "VistaPresupuesto", IsView = true)]
    public partial class minhac_VistaPresupuesto
    {
        [Column(), Nullable] public string IdNegocioProyecto { get; set; } // varchar(23)
        [Column(), Nullable] public string IdNegocioProducto { get; set; } // varchar(27)
        [Column(), NotNull] public int AnioPresupuesto { get; set; } // int
        [Column(), NotNull] public string Nivel { get; set; } // varchar(60)
        [Column(), NotNull] public string NombreEntidad { get; set; } // varchar(60)
        [Column("sectores"), Nullable] public string Sectores { get; set; } // varchar(150)
        [Column(), Nullable] public string Clasificacion { get; set; } // varchar(30)
        [Column(), Nullable] public string NombrePrograma { get; set; } // nvarchar(60)
        [Column(), Nullable] public string NombreSubPrograma { get; set; } // nvarchar(60)
        [Column(), Nullable] public string NombreProyectoActividad { get; set; } // nvarchar(60)
        [Column(), Nullable] public string NombreProducto { get; set; } // nvarchar(100)
        [Column(), Nullable] public int? CodigoVersion { get; set; } // int
        [Column(), Nullable] public string NombreVersion { get; set; } // varchar(60)
        [Column(), Nullable] public decimal? Meta { get; set; } // numeric(28, 2)
        [Column(), Nullable] public decimal? Avance { get; set; } // numeric(28, 2)
    }


    [Table(Schema = "dbo", Name = "vTmpDesembolsosProductosCovid19v1", IsView = true)]
	public partial class VTmpDesembolsosProductosCovid19v1
	{
		[Column("gerencia"), NotNull] public string Gerencia { get; set; } // nvarchar(50)
		[Column("sucursal"), NotNull] public string Sucursal { get; set; } // nvarchar(50)
		[Column("sector"), NotNull] public string Sector { get; set; } // nvarchar(50)
		[Column("desembolso_CAH_273_cantnuevo"), Nullable] public byte? DesembolsoCah273Cantnuevo { get; set; } // tinyint
		[Column("desembolso_CAH_273_cantviejo"), Nullable] public byte? DesembolsoCah273Cantviejo { get; set; } // tinyint
		[Column("desembolso_CAH_273_importe"), Nullable] public int? DesembolsoCah273Importe { get; set; } // int
		[Column("desembolso_CAH_F63_cantentregado"), Nullable] public byte? DesembolsoCahF63Cantentregado { get; set; } // tinyint
		[Column("desembolso_CAH_F63_importe"), Nullable] public int? DesembolsoCahF63Importe { get; set; } // int
	}

	[Table(Schema = "dbo", Name = "vTmpDesembolsosProductosCovid19v2", IsView = true)]
	public partial class VTmpDesembolsosProductosCovid19v2
	{
		[Column("sector"), NotNull] public string Sector { get; set; } // nvarchar(50)
		[Column("distribucionGerencia"), NotNull] public string DistribucionGerencia { get; set; } // nvarchar(50)
		[Column("distribucionSucursal"), NotNull] public string DistribucionSucursal { get; set; } // nvarchar(50)
		[Column(), NotNull] public int Anio { get; set; } // int
		[Column(), NotNull] public int IdPrograma { get; set; } // int
		[Column(), Nullable] public int? CodigoIndicador { get; set; } // int
		[Column("fuente"), NotNull] public string Fuente { get; set; } // varchar(32)
		[Column("fondoTipo"), NotNull] public string FondoTipo { get; set; } // varchar(48)
		[Column("cantPrestamosOld"), Nullable] public byte? CantPrestamosOld { get; set; } // tinyint
		[Column("cantPrestamosNew"), Nullable] public int? CantPrestamosNew { get; set; } // int
		[Column("cantGuaranies"), Nullable] public int? CantGuaranies { get; set; } // int
	}

	[Table(Schema = "dbo", Name = "vwAanaliticaPY_proyectos_contratos", IsView = true)]
	public partial class VwAanaliticaPYProyectosContrato
	{
		[Column(), Nullable] public string CodigoSNIP { get; set; } // nvarchar(200)
		[Column(), Nullable] public string CodigoProceso { get; set; } // nvarchar(255)
		[Column(), Nullable] public string CodigoContrato { get; set; } // nvarchar(255)
		[Column(), Nullable] public string Estado { get; set; } // varchar(30)
		[Column("awardID"), Nullable] public string AwardID { get; set; } // varchar(59)
		[Column(), Nullable] public string EstadoContrato { get; set; } // varchar(250)
		[Column(), Nullable] public string TipoContrato { get; set; } // varchar(250)
		[Column(), Nullable] public string DocumentoNombre { get; set; } // varchar(250)
		[Column(), Nullable] public long? ValorContrato { get; set; } // bigint
		[Column(), Nullable] public string MonedaContrato { get; set; } // varchar(5)
		[Column(), Nullable] public DateTime? FechaFirmaContrato { get; set; } // datetime2(7)
		[Column(), Nullable] public int? DuracionContrato { get; set; } // int
		[Column("codigo_BPIN"), Nullable] public string CodigoBpin { get; set; } // varchar(50)
		[Column(), Nullable] public DateTime? FechaUltimaActualizacion { get; set; } // datetime
		[Column(), Nullable] public bool? RegistroActivo { get; set; } // bit
		[Column(), Nullable] public int? TipoPrograma { get; set; } // int
		[Column(), Nullable] public int? ObjetoGasto { get; set; } // int
		[Column(), Nullable] public int? SubPrograma { get; set; } // int
		[Column(), Nullable] public int? CodigoEntidad { get; set; } // int
		[Column(), Nullable] public int? CodigoPrograma { get; set; } // int
		[Column(), Nullable] public int? CodigoProyecto { get; set; } // int
		[Column(), Nullable] public string CodigoDepartamento { get; set; } // varchar(10)
		[Column(), Nullable] public int? CodigoNivel { get; set; } // int
		[Column(), Nullable] public int? AnioContrato { get; set; } // int
		[Column(), Nullable] public string IdProceso { get; set; } // varchar(150)
		[Column(), Nullable] public DateTime? FechaFinalizacionContrato { get; set; } // datetime2(7)
		[Column(), Nullable] public DateTime? FechaInicioContrato { get; set; } // datetime2(7)
		[Column(), Nullable] public long? MontoAUtilizarOK { get; set; } // bigint
		[Column("CodigoFinanciero"), Nullable] public string CodigoFinanciero1 { get; set; } // varchar(30)
		[Column(), Nullable] public DateTime? FechaModificacion { get; set; } // datetime
		[Column("Fecha_Transaccion"), Nullable] public DateTime? FechaTransaccion { get; set; } // datetime2(7)
		[Column("Nombre_Beneficiario"), Nullable] public string NombreBeneficiario { get; set; } // varchar(200)
		[Column("Codigo_Beneficiario"), Nullable] public string CodigoBeneficiario { get; set; } // varchar(50)
		[Column("Fecha_Factura"), Nullable] public DateTime? FechaFactura { get; set; } // datetime2(7)
		[Column("Valor_Factura"), Nullable] public long? ValorFactura { get; set; } // bigint
		[Column("Moneda_Factura"), Nullable] public string MonedaFactura { get; set; } // varchar(5)
		[Column("Sistema_Transaccion"), Nullable] public string SistemaTransaccion { get; set; } // varchar(20)
		[Column("Fecha_Solicitud_Pago"), Nullable] public DateTime? FechaSolicitudPago { get; set; } // datetime2(7)
		[Column("Codigo_Financiero"), Nullable] public string CodigoFinanciero { get; set; } // varchar(50)
		[Column("Valor_Desembolsado"), Nullable] public long? ValorDesembolsado { get; set; } // bigint
		[Column("Moneda_Desembolsado"), Nullable] public string MonedaDesembolsado { get; set; } // varchar(5)
		[Column("Nombre_Pagador"), Nullable] public string NombrePagador { get; set; } // varchar(200)
		[Column("Id_Pagador"), Nullable] public string IdPagador { get; set; } // varchar(50)
		[Column("Valor_Impuesto_Iva"), Nullable] public long? ValorImpuestoIva { get; set; } // bigint
		[Column("Valor_Impuesto_Renta"), Nullable] public long? ValorImpuestoRenta { get; set; } // bigint
		[Column("Valor_Cuota_Multa"), Nullable] public long? ValorCuotaMulta { get; set; } // bigint
		[Column("Valor_Impuesto_Retencion"), Nullable] public long? ValorImpuestoRetencion { get; set; } // bigint
		[Column("Valor_Cuota_ISC"), Nullable] public long? ValorCuotaIsc { get; set; } // bigint
		[Column("Valor_Cuota_Reparo"), Nullable] public long? ValorCuotaReparo { get; set; } // bigint
		[Column("Valor_impuesto_Retencion2"), Nullable] public long? ValorImpuestoRetencion2 { get; set; } // bigint
	}

	[Table(Schema = "dbo", Name = "vwAanaliticaPY_proyectos_detalles", IsView = true)]
	public partial class VwAanaliticaPYProyectosDetalle
	{
		[Column("idproyecto"), NotNull] public int Idproyecto { get; set; } // int
		[Column(), NotNull] public string NombreProyecto { get; set; } // varchar(max)
		[Column(), Nullable] public DateTime? FechaInicioProyecto { get; set; } // date
		[Column(), Nullable] public DateTime? FechaFinProyecto { get; set; } // date
		[Column(), NotNull] public decimal VlrTotalProyectoTodasLasFuentes { get; set; } // decimal(18, 2)
		[Column(), NotNull] public string ObjetivoGeneral { get; set; } // varchar(max)
		[Column("sector"), Nullable] public string Sector { get; set; } // varchar(200)
		[Column(), NotNull] public string TipoDeProyecto { get; set; } // varchar(max)
		[Column(), NotNull] public decimal PorcentajeAvanceFisico { get; set; } // decimal(10, 2)
		[Column(), Nullable] public decimal? PorcentajeAvanceFinanciero { get; set; } // decimal(10, 2)
		[Column(), Nullable] public string OrganismoFinanciador { get; set; } // varchar(200)
		[Column(), Nullable] public string FuenteFinanciacion { get; set; } // varchar(200)
		[Column("aniovigencia"), Nullable] public int? Aniovigencia { get; set; } // int
		[Column("presupuestovigente"), Nullable] public decimal? Presupuestovigente { get; set; } // decimal(18, 2)
		[Column("presupuestoobligado"), Nullable] public decimal? Presupuestoobligado { get; set; } // decimal(18, 2)
		[Column("presupuestopagado"), Nullable] public decimal? Presupuestopagado { get; set; } // decimal(18, 2)
		[Column(), Nullable] public int? IdTipoRecurso { get; set; } // int
		[Column(), Nullable] public string TipoRecursoNombreFuenteFinanciamiento { get; set; } // varchar(255)
		[Column(), Nullable] public string IdEntidad { get; set; } // varchar(30)
		[Column(), Nullable] public string EntidadOrganismoFinanciador { get; set; } // varchar(255)
		[Column(), Nullable] public int? IdTipoEntidad { get; set; } // int
	}

	[Table(Schema = "dbo", Name = "vwAanaliticaPY_proyectos_geo", IsView = true)]
	public partial class VwAanaliticaPYProyectosGeo
	{
		[Column(), NotNull] public string IdMunicipio { get; set; } // varchar(20)
		[Column(), NotNull] public string NombreMunicipio { get; set; } // varchar(100)
		[Column(), Nullable] public SqlGeography GeoPoligonoEntidadTerritorial { get; set; } // geography
		[Column("geomlat"), Nullable] public double? Geomlat { get; set; } // float
		[Column("geomlong"), Nullable] public double? Geomlong { get; set; } // float
		[Column(), Nullable] public string CodigoDANE { get; set; } // varchar(50)
		[Column(), Nullable] public SqlGeography TopLeft { get; set; } // geography
		[Column(), Nullable] public SqlGeography BottomRight { get; set; } // geography
		[Column(), Nullable] public string Tipo { get; set; } // varchar(50)
		[Column(), Nullable] public int? Version { get; set; } // int
		[Column(), Nullable] public string Geojson { get; set; } // varchar(max)
		[Column(), Nullable] public string IdDepartamento { get; set; } // varchar(20)
		[Column(), NotNull] public DateTime FechaUltimaModificacion { get; set; } // datetime
		[Column(), NotNull] public string NombreDepartamento { get; set; } // varchar(100)
		[Column("deptopais"), NotNull] public string Deptopais { get; set; } // varchar(110)
	}

	[Table(Schema = "dbo", Name = "vwAanaliticaPY_proyectos_sumanual", IsView = true)]
	public partial class VwAanaliticaPYProyectosSumanual
	{
		[Column(), NotNull] public int IdProyecto { get; set; } // int
		[Column(), NotNull] public string NombreProyecto { get; set; } // varchar(max)
		[Column(), Nullable] public DateTime? FechaInicioProyecto { get; set; } // date
		[Column(), Nullable] public DateTime? FechaFinProyecto { get; set; } // date
		[Column(), NotNull] public decimal VlrTotalProyectoTodasLasFuentes { get; set; } // decimal(18, 2)
		[Column(), NotNull] public string ObjetivoGeneral { get; set; } // varchar(max)
		[Column("sector"), Nullable] public string Sector { get; set; } // varchar(200)
		[Column(), NotNull] public string TipoDeProyecto { get; set; } // varchar(max)
		[Column(), NotNull] public decimal PorcentajeAvanceFisico { get; set; } // decimal(10, 2)
		[Column(), Nullable] public decimal? PorcentajeAvanceFinanciero { get; set; } // decimal(10, 2)
		[Column("aniovigencia"), Nullable] public int? Aniovigencia { get; set; } // int
		[Column("presupuestoVigenteAnio"), Nullable] public decimal? PresupuestoVigenteAnio { get; set; } // decimal(38, 2)
		[Column("presupuestoObligadoAnio"), Nullable] public decimal? PresupuestoObligadoAnio { get; set; } // decimal(38, 2)
		[Column(), Nullable] public decimal? PresupuestoPagadoAnio { get; set; } // decimal(38, 2)
	}

	[Table(Schema = "dbo", Name = "VwBonificacionesConsolidadas", IsView = true)]
	public partial class VwBonificacionesConsolidada
	{
		[Column, NotNull] public int RowId { get; set; } // int
		[Column, Nullable] public int? Anio { get; set; } // int
		[Column, Nullable] public int? Mes { get; set; } // int
		[Column, Nullable] public string GrupoOcupacional { get; set; } // nvarchar(100)
		[Column, Nullable] public decimal? MontoRemitido { get; set; } // decimal(38, 2)
		[Column, Nullable] public int? NumeroGratificados { get; set; } // int
	}

	[Table(Schema = "dbo", Name = "VwComentariosPorcentajes", IsView = true)]
	public partial class VwComentariosPorcentaje
	{
		[Column, NotNull] public int IdProyecto { get; set; } // int
		[Column, NotNull] public int IdPregunta { get; set; } // int
		[Column, NotNull] public string TextoPregunta { get; set; } // varchar(200)
		[Column, NotNull] public int IdOpcionRespuesta { get; set; } // int
		[Column, Nullable] public string EtiquetaOpcion { get; set; } // varchar(200)
		[Column, Nullable] public int? Orden { get; set; } // int
		[Column, NotNull] public int ConteoRespuesta { get; set; } // int
		[Column, NotNull] public int TotalRespuesta { get; set; } // int
		[Column, Nullable] public decimal? PorcentajeRespuesta { get; set; } // decimal(10, 2)
	}

	[Table(Schema = "dbo", Name = "VwComentariosProyectos", IsView = true)]
	public partial class VwComentariosProyecto
	{
		[Column, NotNull] public int IdProyecto { get; set; } // int
		[Column, NotNull] public string NombreProyecto { get; set; } // varchar(max)
		[Column, NotNull] public int Idpregunta { get; set; } // int
		[Column, NotNull] public string TextoPregunta { get; set; } // varchar(200)
		[Column, Nullable] public int? IdOpcionRespuesta { get; set; } // int
		[Column, Nullable] public string EtiquetaOpcion { get; set; } // varchar(200)
	}

	[Table(Schema = "dbo", Name = "VwComponentesActividades", IsView = true)]
	public partial class VwComponentesActividade
	{
		[Column, NotNull] public int IdProyecto { get; set; } // int
		[Column, NotNull] public int IdComponente { get; set; } // int
		[Column, NotNull] public string CodigoComponente { get; set; } // varchar(max)
		[Column, NotNull] public string Componente { get; set; } // varchar(max)
		[Column, NotNull] public int IdActividad { get; set; } // int
		[Column, Nullable] public string CodigoActividad { get; set; } // varchar(10)
		[Column, NotNull] public string Actividades { get; set; } // varchar(max)
	}

	[Table(Schema = "dbo", Name = "vwContratosAdendas", IsView = true)]
	public partial class VwContratosAdenda
	{
		[Column("codigo_BPIN"), Nullable] public string CodigoBpin { get; set; } // varchar(50)
		[Column("Id_Contrato"), Nullable] public string IdContrato { get; set; } // varchar(50)
		[Column("Fecha_Adenda"), Nullable] public DateTime? FechaAdenda { get; set; } // datetime2(7)
		[Column(), Nullable] public string Descripcion { get; set; } // varchar(150)
		[Column("Id_Adenda"), Nullable] public string IdAdenda { get; set; } // varchar(50)
		[Column("Valor_Adenda"), Nullable] public long? ValorAdenda { get; set; } // bigint
		[Column("Moneda_Adenda"), Nullable] public string MonedaAdenda { get; set; } // varchar(10)
	}

	[Table(Schema = "dbo", Name = "VwContratosCancelados", IsView = true)]
	public partial class VwContratosCancelado
	{
		[Column(), Nullable] public string IdProceso { get; set; } // varchar(250)
		[Column(), Nullable] public string Estado { get; set; } // varchar(30)
		[Column(), Nullable] public long? Valor { get; set; } // bigint
		[Column(), Nullable] public string MonedaValor { get; set; } // varchar(5)
		[Column(), Nullable] public string Proveedor { get; set; } // varchar(250)
		[Column(), NotNull] public string CodigoProveedor { get; set; } // varchar(40)
		[Column(), Nullable] public DateTime? FechaModificacion { get; set; } // datetime
		[Column("esCovid"), Nullable] public int? EsCovid { get; set; } // int
		[Column("urlContrato"), NotNull] public string UrlContrato { get; set; } // varchar(324)
	}

	[Table(Schema = "dbo", Name = "vwContratosDocumentosRelacionados", IsView = true)]
	public partial class VwContratosDocumentosRelacionado
	{
		[Column("Codigo_BPIN"), Nullable] public string CodigoBpin { get; set; } // varchar(50)
		[Column("Id_Contrato"), Nullable] public string IdContrato { get; set; } // varchar(50)
		[Column("Fecha_Publicacon"), Nullable] public DateTime? FechaPublicacon { get; set; } // datetime2(7)
		[Column(), Nullable] public string Documento { get; set; } // varchar(250)
		[Column(), Nullable] public string Titulo { get; set; } // varchar(250)
		[Column("url_Documento"), Nullable] public string UrlDocumento { get; set; } // varchar(150)
	}

	[Table(Schema = "dbo", Name = "vwContratosFacturados", IsView = true)]
	public partial class VwContratosFacturado
	{
		[Column("Codigo_Bpin"), Nullable] public string CodigoBpin { get; set; } // varchar(50)
		[Column(), Nullable] public string IdContracto { get; set; } // varchar(30)
		[Column("Fecha_Transaccion"), Nullable] public DateTime? FechaTransaccion { get; set; } // datetime2(7)
		[Column("Nombre_Beneficiario"), Nullable] public string NombreBeneficiario { get; set; } // varchar(200)
		[Column("Codigo_Beneficiario"), Nullable] public string CodigoBeneficiario { get; set; } // varchar(50)
		[Column("Fecha_Factura"), Nullable] public DateTime? FechaFactura { get; set; } // datetime2(7)
		[Column("Valor_Factura"), Nullable] public long? ValorFactura { get; set; } // bigint
		[Column("Moneda_Factura"), Nullable] public string MonedaFactura { get; set; } // varchar(5)
		[Column("Sistema_Transaccion"), Nullable] public string SistemaTransaccion { get; set; } // varchar(20)
		[Column("Fecha_Solicitud_Pago"), Nullable] public DateTime? FechaSolicitudPago { get; set; } // datetime2(7)
		[Column("Codigo_Financiero"), Nullable] public string CodigoFinanciero { get; set; } // varchar(50)
		[Column("Valor_Desembolsado"), Nullable] public long? ValorDesembolsado { get; set; } // bigint
		[Column("Moneda_Desembolsado"), Nullable] public string MonedaDesembolsado { get; set; } // varchar(5)
		[Column("Nombre_Pagador"), Nullable] public string NombrePagador { get; set; } // varchar(200)
		[Column("Id_Pagador"), Nullable] public string IdPagador { get; set; } // varchar(50)
		[Column("Valor_Impuesto_Iva"), Nullable] public long? ValorImpuestoIva { get; set; } // bigint
		[Column("Valor_Impuesto_Renta"), Nullable] public long? ValorImpuestoRenta { get; set; } // bigint
		[Column("Valor_Cuota_Multa"), Nullable] public long? ValorCuotaMulta { get; set; } // bigint
		[Column("Valor_Impuesto_Retencion"), Nullable] public long? ValorImpuestoRetencion { get; set; } // bigint
		[Column("Valor_Cuota_ISC"), Nullable] public long? ValorCuotaIsc { get; set; } // bigint
		[Column("Valor_Cuota_Reparo"), Nullable] public long? ValorCuotaReparo { get; set; } // bigint
		[Column("Valor_impuesto_Retencion2"), Nullable] public long? ValorImpuestoRetencion2 { get; set; } // bigint
	}

	[Table(Schema = "dbo", Name = "VwContratosPerfilContratista", IsView = true)]
	public partial class VwContratosPerfilContratista
	{
		[Column(), Nullable] public int? AnioInicioContrato { get; set; } // int
		[Column(), Nullable] public int? AnioFinContrato { get; set; } // int
		[Column("Id_Programa"), Nullable] public int? IdPrograma { get; set; } // int
		[Column(), NotNull] public int COVID19 { get; set; } // int
		[Column(), Nullable] public string Contratista { get; set; } // varchar(150)
		[Column("tipodocumento"), NotNull] public string Tipodocumento { get; set; } // varchar(6)
		[Column("numerodocumento"), Nullable] public string Numerodocumento { get; set; } // varchar(30)
		[Column(), Nullable] public long? ValorTotalContratos { get; set; } // bigint
		[Column(), Nullable] public int? NumContratos { get; set; } // int
		[Column(), Nullable] public int? NumProcesos { get; set; } // int
	}

	[Table(Schema = "dbo", Name = "vwContratosPerfilContratistaInformacionContratacion", IsView = true)]
	public partial class VwContratosPerfilContratistaInformacionContratacion
	{
		[Column(), NotNull] public string IdProyecto { get; set; } // varchar(50)
		[Column("Id_Programa"), Nullable] public int? IdPrograma { get; set; } // int
		[Column(), Nullable] public string CodigoContrato { get; set; } // varchar(30)
		[Column(), Nullable] public string EstadoProceso { get; set; } // varchar(30)
		[Column(), NotNull] public string IdProceso { get; set; } // varchar(150)
		[Column("tipodocumento"), NotNull] public string Tipodocumento { get; set; } // varchar(6)
		[Column("numerodocumento"), Nullable] public string Numerodocumento { get; set; } // varchar(30)
		[Column(), Nullable] public string Contratista { get; set; } // varchar(150)
		[Column(), Nullable] public DateTime? FechaPublicacion { get; set; } // datetime2(7)
		[Column("uriProceso"), Nullable] public string UriProceso { get; set; } // varchar(324)
		[Column(), Nullable] public string UrlResumenAdjudicacion { get; set; } // varchar(250)
		[Column(), Nullable] public string UrlProveedoresAdjudicados { get; set; } // varchar(250)
		[Column(), Nullable] public string UrlProveedoresOferentes { get; set; } // varchar(250)
		[Column(), Nullable] public string UrlDocumentosAdjudicacion { get; set; } // varchar(250)
		[Column(), Nullable] public string UrlPreciosReferencia { get; set; } // varchar(250)
		[Column(), Nullable] public string UrlInvitados { get; set; } // varchar(250)
		[Column(), Nullable] public string DescripcionOferta { get; set; } // varchar(300)
		[Column(), Nullable] public DateTime? FechaInicioContrato { get; set; } // datetime2(7)
		[Column(), Nullable] public DateTime? FechaFinContrato { get; set; } // datetime2(7)
		[Column(), Nullable] public string DuracionContrato { get; set; } // varchar(3)
		[Column(), Nullable] public DateTime? FechaFirmaContrato { get; set; } // datetime2(7)
		[Column(), Nullable] public long? ValorContrato { get; set; } // bigint
		[Column(), NotNull] public int COVID19 { get; set; } // int
	}

	[Table(Schema = "dbo", Name = "VwContratosPerfilContratistaSinPrograma", IsView = true)]
	public partial class VwContratosPerfilContratistaSinPrograma
	{
		[Column(), NotNull] public int COVID19 { get; set; } // int
		[Column(), Nullable] public string Contratista { get; set; } // varchar(150)
		[Column("tipodocumento"), NotNull] public string Tipodocumento { get; set; } // varchar(6)
		[Column("numerodocumento"), Nullable] public string Numerodocumento { get; set; } // varchar(30)
		[Column(), Nullable] public long? ValorTotalContratos { get; set; } // bigint
		[Column(), Nullable] public int? NumContratos { get; set; } // int
		[Column(), Nullable] public int? NumProcesos { get; set; } // int
	}

	[Table(Schema = "dbo", Name = "vwContratosPerfilContratistaSinProgramaXAnio", IsView = true)]
	public partial class VwContratosPerfilContratistaSinProgramaXAnio
	{
		[Column(), Nullable] public int? AnioInicioContrato { get; set; } // int
		[Column(), Nullable] public string Contratista { get; set; } // varchar(150)
		[Column("tipodocumento"), NotNull] public string Tipodocumento { get; set; } // varchar(6)
		[Column("numerodocumento"), Nullable] public string Numerodocumento { get; set; } // varchar(30)
		[Column(), Nullable] public long? ValorTotalContratos { get; set; } // bigint
		[Column(), Nullable] public int? NumContratos { get; set; } // int
		[Column(), NotNull] public int COVID19 { get; set; } // int
	}

	[Table(Schema = "dbo", Name = "vwContratosPerfilContratistaXAnio", IsView = true)]
	public partial class VwContratosPerfilContratistaXAnio
	{
		[Column("Id_Programa"), Nullable] public int? IdPrograma { get; set; } // int
		[Column(), Nullable] public int? AnioInicioContrato { get; set; } // int
		[Column(), Nullable] public string Contratista { get; set; } // varchar(150)
		[Column("tipodocumento"), NotNull] public string Tipodocumento { get; set; } // varchar(6)
		[Column("numerodocumento"), Nullable] public string Numerodocumento { get; set; } // varchar(30)
		[Column(), Nullable] public long? ValorTotalContratos { get; set; } // bigint
		[Column(), Nullable] public int? NumContratos { get; set; } // int
		[Column(), NotNull] public int COVID19 { get; set; } // int
	}

	[Table(Schema = "dbo", Name = "vwContratosPerfilContratistaXTipoProyecto", IsView = true)]
	public partial class VwContratosPerfilContratistaXTipoProyecto
	{
		[Column(), Nullable] public int? AnioInicioContrato { get; set; } // int
		[Column("Id_Programa"), Nullable] public int? IdPrograma { get; set; } // int
		[Column("porcen"), Nullable] public decimal? Porcen { get; set; } // numeric(26, 12)
		[Column(), Nullable] public int? TotalContratos { get; set; } // int
		[Column(), Nullable] public int? Contratos { get; set; } // int
		[Column("tipodocumento"), NotNull] public string Tipodocumento { get; set; } // varchar(6)
		[Column("numerodocumento"), Nullable] public string Numerodocumento { get; set; } // varchar(30)
		[Column(), Nullable] public string Contratista { get; set; } // varchar(150)
		[Column(), Nullable] public string TipoProyecto { get; set; } // nvarchar(255)
		[Column(), NotNull] public int COVID19 { get; set; } // int
	}

	[Table(Schema = "dbo", Name = "VwContratosPerfilContratosCancelados", IsView = true)]
	public partial class VwContratosPerfilContratosCancelado
	{
		[Column(), Nullable] public string Estado { get; set; } // varchar(30)
		[Column("valor"), Nullable] public long? Valor { get; set; } // bigint
		[Column(), Nullable] public int? NroContratos { get; set; } // int
	}

	[Table(Schema = "dbo", Name = "vwContratosPerfilContratosProceso", IsView = true)]
	public partial class VwContratosPerfilContratosProceso
	{
		[Column(), Nullable] public int? Anio { get; set; } // int
		[Column("Id_Programa"), Nullable] public int? IdPrograma { get; set; } // int
		[Column(), NotNull] public string IdProceso { get; set; } // varchar(150)
		[Column(), NotNull] public string DescripcionProceso { get; set; } // varchar(300)
		[Column(), Nullable] public string UnidadCompra { get; set; } // varchar(150)
		[Column(), Nullable] public string EstadoProceso { get; set; } // varchar(30)
		[Column(), Nullable] public int? OfertaPeriodoDuracion { get; set; } // int
		[Column("FCH_INICIO_PUBLICACION"), Nullable] public DateTime? FchInicioPublicacion { get; set; } // datetime2(7)
		[Column("FCH_FIN_PUBLICACION"), Nullable] public DateTime? FchFinPublicacion { get; set; } // datetime2(7)
		[Column("FCH_ESTIMADA_ADJUDICACION"), Nullable] public DateTime? FchEstimadaAdjudicacion { get; set; } // datetime2(7)
		[Column(), Nullable] public string CategoriaContratacion { get; set; } // varchar(200)
		[Column(), Nullable] public string MetodoContratacion { get; set; } // varchar(300)
		[Column(), Nullable] public string CodigoContrato { get; set; } // varchar(30)
		[Column(), NotNull] public string DescripcionContrato { get; set; } // varchar(250)
		[Column("razonsocial"), Nullable] public string Razonsocial { get; set; } // varchar(150)
		[Column("tipodocumento"), NotNull] public string Tipodocumento { get; set; } // varchar(6)
		[Column("numerodocumento"), Nullable] public string Numerodocumento { get; set; } // varchar(30)
		[Column("urlContrato"), Nullable] public string UrlContrato { get; set; } // varchar(129)
		[Column(), NotNull] public string CodigoDepartamento { get; set; } // varchar(10)
		[Column(), Nullable] public long? ValorContrato { get; set; } // bigint
		[Column(), Nullable] public string MonedaContrato { get; set; } // varchar(5)
	}

	[Table(Schema = "dbo", Name = "VwDatosAbiertosBonificaciones", IsView = true)]
	public partial class VwDatosAbiertosBonificacione
	{
		[Column, Nullable] public int? Anio { get; set; } // int
		[Column, Nullable] public int? Mes { get; set; } // int
		[Column, Nullable] public int? IdObjetoGasto { get; set; } // int
		[Column, Nullable] public string CI { get; set; } // nvarchar(50)
		[Column, Nullable] public string Nombres { get; set; } // nvarchar(100)
		[Column, Nullable] public string Apellidos { get; set; } // nvarchar(100)
		[Column, Nullable] public string GrupoOcupacional { get; set; } // nvarchar(100)
		[Column, Nullable] public decimal? MontoRemitido { get; set; } // decimal(18, 2)
		[Column, NotNull] public string FechaCargueArchivo { get; set; } // varchar(10)
		[Column, NotNull] public string FuenteDatos { get; set; } // varchar(63)
	}

	[Table(Schema = "dbo", Name = "VwDatosAbiertosCreditosCreditoAgricolaHabilitacion", IsView = true)]
	public partial class VwDatosAbiertosCreditosCreditoAgricolaHabilitacion
	{
		[Column, Nullable] public int? Nivel { get; set; } // int
		[Column, Nullable] public int? CodigoEntidad { get; set; } // int
		[Column, Nullable] public string Entidad { get; set; } // varchar(60)
		[Column, Nullable] public int? ClasePrograma { get; set; } // int
		[Column, Nullable] public int? CodigoPrograma { get; set; } // int
		[Column, Nullable] public string NombrePrograma { get; set; } // varchar(60)
		[Column, Nullable] public int? CodigoProyecto { get; set; } // int
		[Column, Nullable] public string NombreActividadProyecto { get; set; } // varchar(250)
		[Column, NotNull] public string TipoFondo { get; set; } // nvarchar(100)
		[Column, NotNull] public string DistribucionGerencia { get; set; } // nvarchar(50)
		[Column, NotNull] public string DistribucionCodigoDelDepartamento { get; set; } // varchar(20)
		[Column, NotNull] public string DistribucionDepartamento { get; set; } // nvarchar(50)
		[Column, NotNull] public string DistribucionSucursal { get; set; } // nvarchar(50)
		[Column, NotNull] public string Sector { get; set; } // nvarchar(50)
		[Column, Nullable] public int? ValorSubsidio { get; set; } // int
		[Column, Nullable] public byte? CantidadSubsidio { get; set; } // tinyint
		[Column, Nullable] public DateTime? FechaCargueArchivo { get; set; } // datetime
		[Column, NotNull] public string FuenteDatos { get; set; } // varchar(91)
	}

	[Table(Schema = "dbo", Name = "VwDatosAbiertosEjecucionContable", IsView = true)]
	public partial class VwDatosAbiertosEjecucionContable
	{
		[Column(), Nullable] public int? Nivel { get; set; } // int
		[Column(), Nullable] public int? CodigoEntidad { get; set; } // int
		[Column(), Nullable] public string Entidad { get; set; } // varchar(255)
		[Column(), Nullable] public int? ClasePrograma { get; set; } // int
		[Column(), Nullable] public int? CodigoPrograma { get; set; } // int
		[Column(), Nullable] public string NombrePrograma { get; set; } // varchar(255)
		[Column(), Nullable] public int? CodigoProyectoActividad { get; set; } // int
		[Column(), Nullable] public string NombreActividadProyecto { get; set; } // varchar(255)
		[Column(), Nullable] public string ClasificacionActividadProyecto { get; set; } // varchar(10)
		[Column("Codigo_SNIP"), Nullable] public int? CodigoSnip { get; set; } // int
		[Column(), Nullable] public int? CodigoObjeto { get; set; } // int
		[Column(), Nullable] public string NombreObjeto { get; set; } // varchar(255)
		[Column(), Nullable] public int? Fuente { get; set; } // int
		[Column(), Nullable] public string NombreFuente { get; set; } // varchar(255)
		[Column(), Nullable] public int? Financiador { get; set; } // int
		[Column(), Nullable] public string NombreFinanciador { get; set; } // varchar(255)
		[Column(), Nullable] public int? Departamento { get; set; } // int
		[Column(), Nullable] public decimal? Unidad { get; set; } // numeric(18, 0)
		[Column(), Nullable] public int? Asiento { get; set; } // int
		[Column("DOC_FHCLAB"), Nullable] public DateTime? DocFhclab { get; set; } // datetime
		[Column("RUC_Proveedor"), Nullable] public string RucProveedor { get; set; } // varchar(50)
		[Column(), Nullable] public string NombreProveedor { get; set; } // varchar(255)
		[Column(), Nullable] public string Comprobante { get; set; } // varchar(255)
		[Column("DOC_CONCEPTO"), Nullable] public string DocConcepto { get; set; } // nvarchar(max)
		[Column(), Nullable] public string CodigoContratacion { get; set; } // varchar(60)
		[Column(), Nullable] public decimal? Monto { get; set; } // numeric(18, 0)
		[Column(), Nullable] public DateTime? FechaCargueArchivo { get; set; } // datetime
		[Column(), NotNull] public string FuenteDatos { get; set; } // varchar(91)
	}

	[Table(Schema = "dbo", Name = "VwDatosAbiertosEjecucionPresupuestaria", IsView = true)]
	public partial class VwDatosAbiertosEjecucionPresupuestaria
	{
		[Column(), Nullable] public double? Nivel { get; set; } // float
		[Column(), Nullable] public double? CodigoEntidad { get; set; } // float
		[Column(), Nullable] public string Entidad { get; set; } // varchar(255)
		[Column(), Nullable] public double? ClasePrograma { get; set; } // float
		[Column(), Nullable] public double? CodigoPrograma { get; set; } // float
		[Column(), Nullable] public string NombreProgrma { get; set; } // varchar(255)
		[Column(), Nullable] public double? CodigoProyectoActividad { get; set; } // float
		[Column(), Nullable] public string NombreProyectoActividad { get; set; } // varchar(255)
		[Column(), Nullable] public string ClasificacionActividadProyecto { get; set; } // varchar(5)
		[Column("Codigo_SNIP"), Nullable] public double? CodigoSnip { get; set; } // float
		[Column(), Nullable] public int? CodigoObjeto { get; set; } // int
		[Column(), Nullable] public string NombreObjeto { get; set; } // varchar(255)
		[Column(), Nullable] public double? Fuente { get; set; } // float
		[Column(), Nullable] public string NombreFuente { get; set; } // varchar(255)
		[Column(), Nullable] public double? Financiador { get; set; } // float
		[Column(), Nullable] public string NombreFinanciador { get; set; } // varchar(255)
		[Column(), Nullable] public double? Pagado { get; set; } // float
		[Column(), Nullable] public double? Planificado { get; set; } // float
		[Column(), Nullable] public double? Ejecutado { get; set; } // float
		[Column(), Nullable] public double? Vigente { get; set; } // float
		[Column(), Nullable] public double? Modificacion { get; set; } // float
		[Column(), Nullable] public DateTime? FechaPresupuesto { get; set; } // datetime
		[Column(), Nullable] public double? Anio { get; set; } // float
		[Column(), Nullable] public double? Pais { get; set; } // float
		[Column(), Nullable] public double? Depto { get; set; } // float
		[Column(), Nullable] public DateTime? FechaCargueArchivo { get; set; } // datetime
		[Column(), NotNull] public string FuenteDatos { get; set; } // varchar(91)
	}

	[Table(Schema = "dbo", Name = "VwDatosAbiertosProgramasIndicadores", IsView = true)]
	public partial class VwDatosAbiertosProgramasIndicadore
	{
		[Column, NotNull] public int Nivel { get; set; } // int
		[Column, NotNull] public int CodigoEntidad { get; set; } // int
		[Column, Nullable] public string Entidad { get; set; } // varchar(60)
		[Column, NotNull] public int ClasePrograma { get; set; } // int
		[Column, NotNull] public int CodigoPrograma { get; set; } // int
		[Column, NotNull] public string NombrePrograma { get; set; } // varchar(60)
		[Column, NotNull] public int CodigoProyectoActividad { get; set; } // int
		[Column, Nullable] public string NombreActividadProyecto { get; set; } // varchar(250)
		[Column, NotNull] public int CodigoIndicador { get; set; } // int
		[Column, Nullable] public string NombreIndicador { get; set; } // varchar(1000)
		[Column, Nullable] public decimal? MetaIndicador { get; set; } // numeric(22, 2)
		[Column, Nullable] public decimal? AvanceIndicador { get; set; } // numeric(22, 2)
		[Column, Nullable] public decimal? DenominadorIndicador { get; set; } // numeric(22, 2)
		[Column, Nullable] public decimal? PorcentajeMeta { get; set; } // numeric(22, 2)
		[Column, Nullable] public decimal? PorcentajeAvance { get; set; } // numeric(22, 2)
		[Column, Nullable] public string TipoIndicador { get; set; } // varchar(50)
		[Column, Nullable] public string TamanoIndicador { get; set; } // varchar(50)
		[Column, Nullable] public string Tipo2Indicador { get; set; } // varchar(50)
		[Column, Nullable] public string FecuenciaIndicador { get; set; } // varchar(50)
		[Column, NotNull] public int Anio { get; set; } // int
		[Column, Nullable] public DateTime? FechaCargueArchivo { get; set; } // datetime
		[Column, NotNull] public string FuenteDatos { get; set; } // varchar(91)
	}

	[Table(Schema = "dbo", Name = "VwDatosAbiertosProgramasMetasFinancieras", IsView = true)]
	public partial class VwDatosAbiertosProgramasMetasFinanciera
	{
		[Column, NotNull] public int Nivel { get; set; } // int
		[Column, Nullable] public int? CodigoEntidad { get; set; } // int
		[Column, Nullable] public string Entidad { get; set; } // varchar(60)
		[Column, NotNull] public int ClasePrograma { get; set; } // int
		[Column, NotNull] public int CodigoPrograma { get; set; } // int
		[Column, NotNull] public string NombrePrograma { get; set; } // varchar(60)
		[Column, NotNull] public int CodigoProyectoActividad { get; set; } // int
		[Column, Nullable] public string NombreActividadProyecto { get; set; } // varchar(250)
		[Column, NotNull] public int CodigoObjeto { get; set; } // int
		[Column, Nullable] public string NombreObjeto { get; set; } // varchar(8000)
		[Column, NotNull] public int Fuente { get; set; } // int
		[Column, Nullable] public string NombreFuente { get; set; } // varchar(255)
		[Column, NotNull] public int Financiador { get; set; } // int
		[Column, Nullable] public string NombreFinanciador { get; set; } // varchar(255)
		[Column, Nullable] public decimal? Meta { get; set; } // numeric(38, 0)
		[Column, Nullable] public decimal? Avance { get; set; } // numeric(38, 0)
		[Column, NotNull] public DateTime FechaMeta { get; set; } // datetime
		[Column, Nullable] public DateTime? FechaCargueArchivo { get; set; } // datetime
		[Column, NotNull] public string FuenteDatos { get; set; } // varchar(91)
	}

	[Table(Schema = "dbo", Name = "VwDatosAbiertosProgramasMetasFisicas", IsView = true)]
	public partial class VwDatosAbiertosProgramasMetasFisica
	{
		[Column, NotNull] public int Nivel { get; set; } // int
		[Column, Nullable] public int? CodigoEntidad { get; set; } // int
		[Column, Nullable] public string Entidad { get; set; } // varchar(60)
		[Column, NotNull] public int ClasePrograma { get; set; } // int
		[Column, NotNull] public int CodigoPrograma { get; set; } // int
		[Column, NotNull] public string NombrePrograma { get; set; } // varchar(60)
		[Column, NotNull] public int CodigoProyectoActividad { get; set; } // int
		[Column, Nullable] public string NombreActividadProyecto { get; set; } // varchar(250)
		[Column, Nullable] public string Objetivo { get; set; } // varchar(2000)
		[Column, Nullable] public string ResultadoIntermedio { get; set; } // varchar(1000)
		[Column, Nullable] public string ResultadoInmediato { get; set; } // varchar(2000)
		[Column, Nullable] public string Unidad { get; set; } // varchar(60)
		[Column, Nullable] public decimal? MetaTotal { get; set; } // numeric(17, 2)
		[Column, Nullable] public decimal? Meta { get; set; } // numeric(17, 2)
		[Column, Nullable] public decimal? Avance { get; set; } // numeric(17, 2)
		[Column, NotNull] public DateTime FechaMeta { get; set; } // datetime
		[Column, NotNull] public DateTime FechaCargueArchivo { get; set; } // datetime
		[Column, NotNull] public string FuenteDatos { get; set; } // varchar(91)
	}

	[Table(Schema = "dbo", Name = "VwDatosAbiertosProgramasSubsidios", IsView = true)]
	public partial class VwDatosAbiertosProgramasSubsidio
	{
		[Column, Nullable] public int? Nivel { get; set; } // int
		[Column, Nullable] public int? CodigoEntidad { get; set; } // int
		[Column, Nullable] public string Entidad { get; set; } // varchar(60)
		[Column, NotNull] public int ClasePrograma { get; set; } // int
		[Column, NotNull] public int CodigoPrograma { get; set; } // int
		[Column, NotNull] public string NombrePrograma { get; set; } // varchar(60)
		[Column, NotNull] public int CodigoProyectoActividad { get; set; } // int
		[Column, Nullable] public string NombreActividadProyecto { get; set; } // varchar(250)
		[Column, Nullable] public int? TipoSubsidioPrograma { get; set; } // int
		[Column, Nullable] public string NumeroDocumento { get; set; } // nvarchar(50)
		[Column, Nullable] public string NombreBeneficiario { get; set; } // nvarchar(255)
		[Column, Nullable] public string IdDepartamento { get; set; } // nvarchar(10)
		[Column, Nullable] public string NombreDepartamento { get; set; } // nvarchar(255)
		[Column, Nullable] public string IdMunicipio { get; set; } // nvarchar(10)
		[Column, Nullable] public string NombreMunicipio { get; set; } // nvarchar(255)
		[Column, Nullable] public string CaracteristicaSubsidio { get; set; } // nvarchar(255)
		[Column, NotNull] public string TipoSubsidio { get; set; } // varchar(55)
		[Column, Nullable] public int? ValorSubsidio { get; set; } // int
		[Column, Nullable] public int? CantidadSubsidio { get; set; } // int
		[Column, Nullable] public DateTime? FechaCargueArchivo { get; set; } // datetime
		[Column, NotNull] public string FuenteDatos { get; set; } // varchar(45)
	}

	[Table(Schema = "dbo", Name = "VwDatosAbiertosProgramasSubsidios_Pytyvo", IsView = true)]
	public partial class VwDatosAbiertosProgramasSubsidiosPytyvo
	{
		[Column("codigoNivel"), Nullable] public int? CodigoNivel { get; set; } // int
		[Column(), Nullable] public int? CodigoEntidad { get; set; } // int
		[Column(), Nullable] public string NombreEntidad { get; set; } // varchar(255)
		[Column(), Nullable] public int? CodigoClasePograma { get; set; } // int
		[Column(), Nullable] public int? CodigoPrograma { get; set; } // int
		[Column(), Nullable] public string NombrePrograma { get; set; } // varchar(255)
		[Column(), Nullable] public string NombreActividad { get; set; } // varchar(255)
		[Column("tipoSubsidioPrograma"), NotNull] public string TipoSubsidioPrograma { get; set; } // varchar(6)
		[Column(), NotNull] public string TipoSubsidio { get; set; } // varchar(52)
		[Column(), NotNull] public string CaracteristicaSubsidio { get; set; } // varchar(23)
		[Column(), Nullable] public string IdDepartamento { get; set; } // varchar(10)
		[Column(), Nullable] public string NombreDepartamento { get; set; } // varchar(50)
		[Column(), Nullable] public string IdMunicipio { get; set; } // varchar(10)
		[Column(), Nullable] public string NombreMunicipio { get; set; } // varchar(50)
		[Column(), Nullable] public double? NumeroDocumento { get; set; } // float
		[Column(), Nullable] public string NombreBeneficiario { get; set; } // nvarchar(255)
		[Column(), Nullable] public long? Valor { get; set; } // bigint
		[Column("cantidad"), Nullable] public long? Cantidad { get; set; } // bigint
		[Column(), NotNull] public string FechaCargueArchivo { get; set; } // varchar(10)
		[Column(), NotNull] public string FuenteDatos { get; set; } // varchar(34)
	}

	[Table(Schema = "dbo", Name = "VwDatosAbiertosProgramasSubsidiosTable")]
	public partial class VwDatosAbiertosProgramasSubsidiosTable
	{
		[Column, NotNull] public int Nivel { get; set; } // int
		[Column, Nullable] public int? CodigoEntidad { get; set; } // int
		[Column, Nullable] public string Entidad { get; set; } // varchar(60)
		[Column, NotNull] public int ClasePrograma { get; set; } // int
		[Column, NotNull] public int CodigoPrograma { get; set; } // int
		[Column, NotNull] public string NombrePrograma { get; set; } // varchar(60)
		[Column, NotNull] public int CodigoProyectoActividad { get; set; } // int
		[Column, Nullable] public string NombreActividadProyecto { get; set; } // varchar(250)
		[Column, Nullable] public int? TipoSubsidioPrograma { get; set; } // int
		[Column, Nullable] public string NumeroDocumento { get; set; } // nvarchar(50)
		[Column, Nullable] public string NombreBeneficiario { get; set; } // nvarchar(255)
		[Column, Nullable] public string IdDepartamento { get; set; } // varchar(8000)
		[Column, Nullable] public string NombreDepartamento { get; set; } // varchar(8000)
		[Column, Nullable] public string IdMunicipio { get; set; } // varchar(8000)
		[Column, Nullable] public string NombreMunicipio { get; set; } // varchar(8000)
		[Column, NotNull] public string CaracteristicaSubsidio { get; set; } // nvarchar(255)
		[Column, NotNull] public string TipoSubsidio { get; set; } // varchar(55)
		[Column, Nullable] public int? ValorSubsidio { get; set; } // int
		[Column, Nullable] public int? CantidadSubsidio { get; set; } // int
		[Column, Nullable] public DateTime? FechaCargueArchivo { get; set; } // datetime
		[Column, NotNull] public string FuenteDatos { get; set; } // varchar(45)
	}

	[Table(Schema = "dbo", Name = "VwDatosAbiertosSalarios", IsView = true)]
	public partial class VwDatosAbiertosSalario
	{
		[Column, NotNull] public long Idregistro { get; set; } // bigint
		[Column, Nullable] public string NombreEntidad { get; set; } // varchar(255)
		[Column, Nullable] public string NombreActividad { get; set; } // varchar(255)
		[Column, NotNull] public DateTime FechaPresupuesto { get; set; } // datetime
		[Column, Nullable] public decimal? ValorSalario { get; set; } // numeric(38, 6)
		[Column, Nullable] public DateTime? FechaCargueArchivo { get; set; } // datetime
		[Column, NotNull] public string FuenteDatos { get; set; } // varchar(22)
	}

	[Table(Schema = "dbo", Name = "VwDonacionesConsolidadas", IsView = true)]
	public partial class VwDonacionesConsolidada
	{
		[Column, NotNull] public long RowNum { get; set; } // bigint
		[Column, Nullable] public int? TotalDonantes { get; set; } // int
		[Column, Nullable] public int? TotalBeneficiarios { get; set; } // int
		[Column, Nullable] public int? TotalDonaciones { get; set; } // int
	}

	[Table(Schema = "dbo", Name = "VwDonacionesConsolidadasListado", IsView = true)]
	public partial class VwDonacionesConsolidadasListado
	{
		[Column, Nullable] public long? IdListadoDonateBeneficiario { get; set; } // bigint
		[Column, Nullable] public string ListadoDonanteBeneficiario { get; set; } // nvarchar(500)
		[Column, NotNull] public string TipoLista { get; set; } // varchar(12)
		[Column, Nullable] public int? TotalBeneficiariosDonates { get; set; } // int
		[Column, Nullable] public int? TotalDonaciones { get; set; } // int
		[Column, Nullable] public int? TotalProductos { get; set; } // int
	}

	[Table(Schema = "dbo", Name = "VwDonacionesDonantes", IsView = true)]
	public partial class VwDonacionesDonante
	{
		[Column, NotNull] public int IdDonante { get; set; } // int
		[Column, NotNull] public string Donante { get; set; } // varchar(500)
		[Column, Nullable] public string Donacion { get; set; } // varchar(50)
		[Column, Nullable] public string FechaRecepcion { get; set; } // varchar(50)
		[Column, Nullable] public string Producto { get; set; } // varchar(500)
		[Column, Nullable] public int? CantidadRecibida { get; set; } // int
		[Column, Nullable] public string Receptor { get; set; } // varchar(500)
	}

	[Table(Schema = "dbo", Name = "VwDonacionesEntidadesBeneficiarias", IsView = true)]
	public partial class VwDonacionesEntidadesBeneficiaria
	{
		[Column, Nullable] public long? IdBeneficiario { get; set; } // bigint
		[Column, Nullable] public string EntidadBeneficiaria { get; set; } // nvarchar(500)
		[Column, Nullable] public string Producto { get; set; } // nvarchar(500)
		[Column, Nullable] public int? CantidadRecibida { get; set; } // int
		[Column, NotNull] public int IdDonante { get; set; } // int
		[Column, NotNull] public string Donante { get; set; } // varchar(500)
		[Column, Nullable] public string Donacion { get; set; } // nvarchar(50)
		[Column, Nullable] public string FechaEntrega { get; set; } // nvarchar(50)
	}

	[Table(Schema = "dbo", Name = "VwDonacionesEntidadesBeneficiariasListado", IsView = true)]
	public partial class VwDonacionesEntidadesBeneficiariasListado
	{
		[Column, Nullable] public long? IdBeneficiario { get; set; } // bigint
		[Column, Nullable] public string EntidadBeneficiaria { get; set; } // nvarchar(500)
	}

	[Table(Schema = "dbo", Name = "VwEntidadEjecutora", IsView = true)]
	public partial class VwEntidadEjecutora
	{
		[Column, NotNull] public int IdProyecto { get; set; } // int
		[Column, NotNull] public string IdEntidad { get; set; } // varchar(30)
		[Column, NotNull] public string NombreEntidad { get; set; } // varchar(200)
		[Column, Nullable] public long? COUNT { get; set; } // bigint
	}

	[Table(Schema = "dbo", Name = "VwEstadoProyectosDeptoInv", IsView = true)]
	public partial class VwEstadoProyectosDeptoInv
	{
		[Column, NotNull] public string IdDepartamento { get; set; } // varchar(10)
		[Column, NotNull] public int IdEstado { get; set; } // int
		[Column, NotNull] public string NombreEstado { get; set; } // varchar(30)
		[Column, Nullable] public long? NumeroProyectos { get; set; } // bigint
		[Column, Nullable] public decimal? ValorProyectos { get; set; } // decimal(38, 2)
	}

	[Table(Schema = "dbo", Name = "VwEstadoProyectosInv", IsView = true)]
	public partial class VwEstadoProyectosInv
	{
		[Column, NotNull] public string IdDepartamento { get; set; } // varchar(10)
		[Column, NotNull] public string IdMunicipio { get; set; } // varchar(10)
		[Column, NotNull] public int IdEstado { get; set; } // int
		[Column, NotNull] public string NombreEstado { get; set; } // varchar(30)
		[Column, Nullable] public int? NumeroProyectos { get; set; } // int
		[Column, Nullable] public decimal? ValorProyectos { get; set; } // decimal(38, 2)
	}

	[Table(Schema = "dbo", Name = "VwFuenteFinanciacion", IsView = true)]
	public partial class VwFuenteFinanciacion
	{
		[Column("id"), Nullable] public long? Id { get; set; } // bigint
		[Column(), NotNull] public int IdProyecto { get; set; } // int
		[Column(), NotNull] public string IdOrganismoFinanciador { get; set; } // varchar(30)
		[Column(), NotNull] public string OrganismoFinanciador { get; set; } // varchar(200)
		[Column(), NotNull] public int IdFuenteFinanciacion { get; set; } // int
		[Column(), NotNull] public string FuenteFinanciacion { get; set; } // varchar(200)
		[Column(), NotNull] public int Vigencia { get; set; } // int
		[Column(), NotNull] public decimal PresupuestoVigente { get; set; } // decimal(18, 2)
		[Column(), NotNull] public decimal PresupuestoObligado { get; set; } // decimal(18, 2)
		[Column(), NotNull] public decimal PresupuestoPagado { get; set; } // decimal(18, 2)
	}

	[Table(Schema = "dbo", Name = "VwFuentesFinanciacion", IsView = true)]
	public partial class VwFuentesFinanciacion
	{
		[Column, NotNull] public int IdProyecto { get; set; } // int
		[Column, NotNull] public string IdOrganismoFinanciador { get; set; } // varchar(30)
		[Column, NotNull] public string OrganismoFinanciador { get; set; } // varchar(200)
		[Column, NotNull] public int IdFuenteFinanciacion { get; set; } // int
		[Column, NotNull] public string FuenteFinanciacion { get; set; } // varchar(200)
		[Column, NotNull] public int Vigencia { get; set; } // int
		[Column, NotNull] public decimal PresupuestoVigente { get; set; } // decimal(18, 2)
		[Column, NotNull] public decimal PresupuestoObligado { get; set; } // decimal(18, 2)
		[Column, NotNull] public decimal PresupuestoPagado { get; set; } // decimal(18, 2)
	}

	[Table(Schema = "dbo", Name = "VwGaleriaEntidadesTerritorialesDepartamentos", IsView = true)]
	public partial class VwGaleriaEntidadesTerritorialesDepartamento
	{
		[Column, Nullable] public int? IdImageXEnteTerritorial { get; set; } // int
		[Column, NotNull] public string IdDepartamento { get; set; } // varchar(10)
		[Column, NotNull] public string NombreDepartamento { get; set; } // varchar(50)
		[Column, Nullable] public string IdRegion { get; set; } // varchar(10)
		[Column, Nullable] public string IdImage { get; set; } // varchar(42)
		[Column, Nullable] public string UrlImagePequenia { get; set; } // varchar(max)
		[Column, Nullable] public string UrlImageMediana { get; set; } // varchar(max)
		[Column, Nullable] public string UrlImageGrande { get; set; } // varchar(max)
		[Column, Nullable] public string DescripcionImage { get; set; } // varchar(max)
	}

	[Table(Schema = "dbo", Name = "VwGaleriaEntidadesTerritorialesMunicipios", IsView = true)]
	public partial class VwGaleriaEntidadesTerritorialesMunicipio
	{
		[Column, Nullable] public int? IdImageXEnteTerritorial { get; set; } // int
		[Column, Nullable] public string IdRegion { get; set; } // varchar(10)
		[Column, NotNull] public string IdDepartamento { get; set; } // varchar(10)
		[Column, NotNull] public string NombreDepartamento { get; set; } // varchar(50)
		[Column, NotNull] public string IdMunicipio { get; set; } // varchar(10)
		[Column, NotNull] public string NombreMunicipio { get; set; } // varchar(50)
		[Column, Nullable] public string IdImage { get; set; } // varchar(42)
		[Column, Nullable] public string UrlImagePequenia { get; set; } // varchar(max)
		[Column, Nullable] public string UrlImageMediana { get; set; } // varchar(max)
		[Column, Nullable] public string UrlImageGrande { get; set; } // varchar(max)
		[Column, Nullable] public string DescripcionImage { get; set; } // varchar(max)
	}

	[Table(Schema = "dbo", Name = "VwGaleriaProgramas", IsView = true)]
	public partial class VwGaleriaPrograma
	{
		[Column, Nullable] public int? IdPrograma { get; set; } // int
		[Column, NotNull] public string Programa { get; set; } // varchar(60)
		[Column, Nullable] public int? IdImage { get; set; } // int
		[Column, NotNull] public string UrlImagePequenia { get; set; } // varchar(38)
		[Column, NotNull] public string UrlImageMediana { get; set; } // varchar(38)
		[Column, NotNull] public string UrlImageGrande { get; set; } // varchar(38)
		[Column, NotNull] public string DescripcionImage { get; set; } // varchar(15)
	}

	[Table(Schema = "dbo", Name = "VwInformacionGeneralPerfilLocalizacion", IsView = true)]
	public partial class VwInformacionGeneralPerfilLocalizacion
	{
		[Column, NotNull] public string IdDepartamento { get; set; } // varchar(10)
		[Column, NotNull] public string IdMunicipio { get; set; } // varchar(10)
		[Column, Nullable] public decimal? ValorPromedioProyecto { get; set; } // decimal(38, 6)
		[Column, Nullable] public int? NumeroProyectos { get; set; } // int
		[Column, Nullable] public decimal? DuracionPromedioProyectos { get; set; } // decimal(38, 6)
	}

	[Table(Schema = "dbo", Name = "VwInformacionGeneralPerfilLocalizacionDepto", IsView = true)]
	public partial class VwInformacionGeneralPerfilLocalizacionDepto
	{
		[Column, NotNull] public string IdDepartamento { get; set; } // varchar(10)
		[Column, Nullable] public decimal? ValorPromedioProyecto { get; set; } // decimal(38, 6)
		[Column, Nullable] public int? NumeroProyectos { get; set; } // int
		[Column, Nullable] public decimal? DuracionPromedioProyectos { get; set; } // decimal(38, 6)
	}

	[Table(Schema = "dbo", Name = "VwInformacionGeneralPerfilLocalizacionDeptoCovid", IsView = true)]
	public partial class VwInformacionGeneralPerfilLocalizacionDeptoCovid
	{
		[Column, NotNull] public char IdPrograma { get; set; } // varchar(1)
		[Column, NotNull] public string IdDepartamento { get; set; } // varchar(10)
		[Column, Nullable] public decimal? TotalContratos { get; set; } // decimal(38, 2)
		[Column, Nullable] public decimal? ValorEjecutado { get; set; } // decimal(38, 6)
		[Column, Nullable] public int? NumeroProyectos { get; set; } // int
	}

	[Table(Schema = "dbo", Name = "VwInformacionGeneralPerfilSector", IsView = true)]
	public partial class VwInformacionGeneralPerfilSector
	{
		[Column, NotNull] public int IdSector { get; set; } // int
		[Column, NotNull] public string NombreSector { get; set; } // varchar(200)
		[Column, Nullable] public decimal? ValorPromedioProyecto { get; set; } // decimal(38, 6)
		[Column, Nullable] public int? NumeroProyectos { get; set; } // int
		[Column, Nullable] public decimal? DuracionPromedioProyectos { get; set; } // decimal(38, 6)
	}

	[Table(Schema = "dbo", Name = "Vw_InformacionProcesoConYSinCodigoContratacion", IsView = true)]
	public partial class VwInformacionProcesoConYSinCodigoContratacion
	{
		[Column(), Nullable] public int? Anio { get; set; } // int
		[Column(), Nullable] public string UnidadCompra { get; set; } // varchar(150)
		[Column(), Nullable] public string EstadoProceso { get; set; } // varchar(30)
		[Column(), Nullable] public string CodigoContrato { get; set; } // varchar(30)
		[Column(), Nullable] public string CodigoProceso { get; set; } // varchar(30)
		[Column("tipodocumento"), NotNull] public string Tipodocumento { get; set; } // varchar(6)
		[Column("numerodocumento"), Nullable] public string Numerodocumento { get; set; } // varchar(30)
		[Column(), Nullable] public string Contratista { get; set; } // varchar(150)
		[Column(), Nullable] public string DocURL { get; set; } // varchar(324)
		[Column(), Nullable] public string UrlResumenAdjudicacion { get; set; } // varchar(250)
		[Column(), Nullable] public string UrlInvitados { get; set; } // varchar(250)
		[Column(), Nullable] public DateTime? FechaPublicacion { get; set; } // datetime2(7)
		[Column(), Nullable] public int? OfertaPeriodoDuracion { get; set; } // int
		[Column(), Nullable] public DateTime? FechaFirmaContrato { get; set; } // datetime2(7)
		[Column(), Nullable] public DateTime? FechaInicioContrato { get; set; } // datetime2(7)
		[Column(), Nullable] public DateTime? FechaFinContrato { get; set; } // datetime2(7)
		[Column(), Nullable] public long? ValorContrato { get; set; } // bigint
		[Column(), Nullable] public string MetodoContratacion { get; set; } // varchar(300)
		[Column(), Nullable] public string CategoriaContratacion { get; set; } // varchar(200)
		[Column("FCH_INICIO_PUBLICACION"), Nullable] public DateTime? FchInicioPublicacion { get; set; } // datetime2(7)
		[Column("FCH_FIN_PUBLICACION"), Nullable] public DateTime? FchFinPublicacion { get; set; } // datetime2(7)
		[Column("FCH_ESTIMADA_ADJUDICACION"), Nullable] public DateTime? FchEstimadaAdjudicacion { get; set; } // datetime2(7)
		[Column(), Nullable] public string DescripcionContrato { get; set; } // varchar(8000)
		[Column(), Nullable] public string DescripcionProceso { get; set; } // varchar(8000)
		[Column(), NotNull] public int COVID19 { get; set; } // int
		[Column(), Nullable] public string IdProyecto { get; set; } // varchar(50)
		[Column("Id_Programa"), Nullable] public int? IdPrograma { get; set; } // int
		[Column("awardID"), Nullable] public string AwardID { get; set; } // varchar(250)
	}

	[Table(Schema = "dbo", Name = "VwInformeAvanceFisicoProyecto", IsView = true)]
	public partial class VwInformeAvanceFisicoProyecto
	{
		[Column, NotNull] public int IdProyecto { get; set; } // int
		[Column, NotNull] public DateTime FechaInicioInforme { get; set; } // datetime
		[Column, NotNull] public DateTime FechaFinInforme { get; set; } // datetime
		[Column, NotNull] public string Descripcion { get; set; } // varchar(4000)
	}

	[Table(Schema = "dbo", Name = "VwLicitaciones", IsView = true)]
	public partial class VwLicitacione
	{
		[Column("ID_Proyecto"), NotNull] public int IdProyecto { get; set; } // int
		[Column("Codigo_BPIN"), Nullable] public string CodigoBpin { get; set; } // varchar(max)
		[Column(), NotNull] public string URL { get; set; } // varchar(4000)
		[Column(), NotNull] public string NroLicitacion { get; set; } // varchar(4000)
		[Column(), NotNull] public string Objeto { get; set; } // varchar(4000)
		[Column(), NotNull] public DateTime FechaPublicacion { get; set; } // datetime
		[Column(), NotNull] public DateTime PresentacionOfertas { get; set; } // datetime
		[Column(), NotNull] public DateTime FechaLimiteConsultas { get; set; } // datetime
		[Column(), NotNull] public long Beneficiarios { get; set; } // bigint
		[Column(), NotNull] public DateTime AperturaOfertas { get; set; } // datetime
		[Column(), NotNull] public string Pregunta { get; set; } // varchar(4000)
		[Column(), NotNull] public string FechaLimiteParaContestar { get; set; } // varchar(4000)
		[Column(), NotNull] public string EstadoNombre { get; set; } // varchar(4000)
		[Column(), NotNull] public string EstadoPublicacionNombre { get; set; } // varchar(4000)
		[Column(), NotNull] public string CategoriaNombre { get; set; } // varchar(4000)
		[Column(), NotNull] public string LocalidadNombre { get; set; } // varchar(4000)
		[Column(), NotNull] public string Presupuesto { get; set; } // varchar(4000)
	}

	[Table(Schema = "dbo", Name = "vwMunicipioDepartamentoGeo", IsView = true)]
	public partial class VwMunicipioDepartamentoGeo
	{
		[Column(), NotNull] public string IdMunicipio { get; set; } // varchar(20)
		[Column(), NotNull] public string NombreMunicipio { get; set; } // varchar(100)
		[Column(), Nullable] public SqlGeography GeoPoligonoEntidadTerritorial { get; set; } // geography
		[Column("geomlat"), Nullable] public double? Geomlat { get; set; } // float
		[Column("geomlong"), Nullable] public double? Geomlong { get; set; } // float
		[Column(), Nullable] public string CodigoDANE { get; set; } // varchar(50)
		[Column(), Nullable] public SqlGeography TopLeft { get; set; } // geography
		[Column(), Nullable] public SqlGeography BottomRight { get; set; } // geography
		[Column(), Nullable] public string Tipo { get; set; } // varchar(50)
		[Column(), Nullable] public int? Version { get; set; } // int
		[Column(), Nullable] public string Geojson { get; set; } // varchar(max)
		[Column(), Nullable] public string IdDepartamento { get; set; } // varchar(20)
		[Column(), NotNull] public DateTime FechaUltimaModificacion { get; set; } // datetime
		[Column(), NotNull] public string NombreDepartamento { get; set; } // varchar(100)
		[Column("deptopais"), NotNull] public string Deptopais { get; set; } // varchar(110)
	}

	[Table(Schema = "dbo", Name = "VwNoComentarios", IsView = true)]
	public partial class VwNoComentario
	{
		[Column, NotNull] public int Idpregunta { get; set; } // int
		[Column, NotNull] public string TextoPregunta { get; set; } // varchar(200)
		[Column, Nullable] public int? Comentarios { get; set; } // int
	}

	[Table(Schema = "dbo", Name = "VwNoProyectosComentarios", IsView = true)]
	public partial class VwNoProyectosComentario
	{
		[Column, NotNull] public int IdProyecto { get; set; } // int
		[Column, NotNull] public string NombreProyecto { get; set; } // varchar(max)
		[Column, Nullable] public int? Comentarios { get; set; } // int
	}

    [Table(Schema = "stp", Name = "Vw_PND2030_STP", IsView = true)]
    public partial class stp_VwPND2030Stp
    {
        [Column("idPlan"), Nullable] public int? IdPlan { get; set; } // int
        [Column("nombrePlan"), Nullable] public string NombrePlan { get; set; } // varchar(max)
        [Column("descripcionPlan"), Nullable] public string DescripcionPlan { get; set; } // varchar(max)
        [Column("idEjeEstrategico"), Nullable] public int? IdEjeEstrategico { get; set; } // int
        [Column("ejeEstrategicoNombre"), Nullable] public string EjeEstrategicoNombre { get; set; } // varchar(max)
        [Column("ejeEstrategicoDescripcion"), Nullable] public string EjeEstrategicoDescripcion { get; set; } // varchar(max)
        [Column("lineaTransversalId"), Nullable] public int? LineaTransversalId { get; set; } // int
        [Column("lineaTransversalNombre"), Nullable] public string LineaTransversalNombre { get; set; } // varchar(max)
        [Column("estrategiaId"), Nullable] public int? EstrategiaId { get; set; } // int
        [Column("estrategiaNombre"), Nullable] public string EstrategiaNombre { get; set; } // varchar(max)
        [Column("estrategiadescripcion"), Nullable] public string Estrategiadescripcion { get; set; } // varchar(max)
        [Column("idObjetivo"), Nullable] public int? IdObjetivo { get; set; } // int
        [Column("objetivoNombre"), Nullable] public string ObjetivoNombre { get; set; } // nvarchar(max)
        [Column("nivel"), Nullable] public int? Nivel { get; set; } // int
        [Column("entidad"), Nullable] public int? Entidad { get; set; } // int
        [Column("tipo_presupuesto"), Nullable] public int? TipoPresupuesto { get; set; } // int
        [Column("programa"), Nullable] public int? Programa { get; set; } // int
        [Column("subprograma"), Nullable] public int? Subprograma { get; set; } // int
        [Column("proyecto"), Nullable] public int? Proyecto { get; set; } // int
        [Column("producto"), Nullable] public int? Producto { get; set; } // int
    }

  [Table(Schema = "stpPsgr", Name = "Vw_ObjetivosPND_STP", IsView = true)]
  public partial class stpPsgr_VwObjetivosPNDStp
  {
    [Column("idPlan"), NotNull] public int IdPlan { get; set; } // int
    [Column("codPlan"), Nullable] public int? CodPlan { get; set; } // int
    [Column("nombrePlan"), Nullable] public string NombrePlan { get; set; } // varchar(255)
    [Column("idEje"), NotNull] public int IdEje { get; set; } // int
    [Column("codEje"), Nullable] public int? CodEje { get; set; } // int
    [Column("nombreEje"), Nullable] public string NombreEje { get; set; } // varchar(255)
    [Column("idLinea"), NotNull] public int IdLinea { get; set; } // int
    [Column("codLinea"), Nullable] public int? CodLinea { get; set; } // int
    [Column("nombreLinea"), Nullable] public string NombreLinea { get; set; } // varchar(255)
    [Column("idObjetivoEstrategico"), NotNull] public int IdObjetivoEstrategico { get; set; } // int
    [Column("codObjetivoEstrategico"), Nullable] public int? CodObjetivoEstrategico { get; set; } // int
    [Column("nombreObjetivoEstrategico"), Nullable] public string NombreObjetivoEstrategico { get; set; } // varchar(255)
    [Column("descripcionObjetivoEstrategico"), Nullable] public string DescripcionObjetivoEstrategico { get; set; } // varchar(255)
    [Column("idTipoObjetivo"), NotNull] public int IdTipoObjetivo { get; set; } // int
    [Column("codTipoObjetivo"), Nullable] public int? CodTipoObjetivo { get; set; } // int
    [Column("nombreObjetivo"), Nullable] public string NombreObjetivo { get; set; } // varchar(255)
    [Column("idObjetivoEspecifico"), NotNull] public int IdObjetivoEspecifico { get; set; } // int
    [Column("codObjetivoEspecifico"), Nullable] public int? CodObjetivoEspecifico { get; set; } // int
    [Column("nombreObjetivoEspecifico"), Nullable] public string NombreObjetivoEspecifico { get; set; } // varchar(255)
  }


  [Table(Schema = "dbo", Name = "VwProcesoXAwardXContrato", IsView = true)]
	public partial class VwProcesoXAwardXContrato
	{
		[Column(), NotNull] public string OCID { get; set; } // varchar(30)
		[Column(), NotNull] public string AwardId { get; set; } // varchar(250)
		[Column(), Nullable] public string Estado { get; set; } // varchar(30)
		[Column(), Nullable] public long? Valor { get; set; } // bigint
		[Column(), Nullable] public string MonedaValor { get; set; } // varchar(5)
		[Column(), Nullable] public string Proveedor { get; set; } // varchar(250)
		[Column(), NotNull] public string CodigoProveedor { get; set; } // varchar(40)
		[Column(), Nullable] public DateTime? FechaModificacion { get; set; } // datetime
		[Column(), Nullable] public string CodigoContrato { get; set; } // varchar(30)
		[Column(), Nullable] public string IdProceso { get; set; } // varchar(150)
		[Column("Es_Covid"), Nullable] public int? EsCovid { get; set; } // int
		[Column(), Nullable] public DateTime? FechaProcesoPublicacion { get; set; } // datetime2(7)
	}

	[Table(Schema = "dbo", Name = "vwProduccionLiquidacion", IsView = true)]
	public partial class VwProduccionLiquidacion
	{
		[Column, NotNull] public int AñoLiquidado { get; set; } // int
		[Column, NotNull] public int PeriodoLiquidado { get; set; } // int
		[Column, Nullable] public string NombreRegion { get; set; } // varchar(50)
		[Column, NotNull] public string NombreDepartamento { get; set; } // varchar(50)
		[Column, NotNull] public string NombreMunicipio { get; set; } // varchar(50)
		[Column, Nullable] public string CodigoDANE { get; set; } // varchar(15)
		[Column, Nullable] public string NombreTipoDeRecurso { get; set; } // varchar(50)
		[Column, NotNull] public string NombreRecursoNatural { get; set; } // varchar(250)
		[Column, NotNull] public string IdCampo { get; set; } // nvarchar(50)
		[Column, NotNull] public string NombreCampoOProyecto { get; set; } // varchar(250)
		[Column, Nullable] public string Cantidad { get; set; } // nvarchar(4000)
		[Column, NotNull] public string NombreUnidadMedida { get; set; } // varchar(250)
		[Column, Nullable] public string ValorRegalia { get; set; } // nvarchar(4000)
	}

    [Table(Schema = "stp", Name = "Vw_productoXresultadoInmediato_STP", IsView = true)]
    public partial class stp_VwProductoXresultadoInmediatoStp
    {
        [Column("objetivo_id"), Nullable] public int? ObjetivoId { get; set; } // int
        [Column("objetivo_tipo_objetivo_id"), Nullable] public int? ObjetivoTipoObjetivoId { get; set; } // int
        [Column("objetivo_anho"), Nullable] public int? ObjetivoAnho { get; set; } // int
        [Column("objetivo_version"), Nullable] public int? ObjetivoVersion { get; set; } // int
        [Column("objetivo_rel_id"), Nullable] public int? ObjetivoRelId { get; set; } // int
        [Column("objetivo_rel_tipo_objetivo_id"), Nullable] public int? ObjetivoRelTipoObjetivoId { get; set; } // int
        [Column("objetivo_rel_anho"), Nullable] public int? ObjetivoRelAnho { get; set; } // int
        [Column("objetivo_rel_version"), Nullable] public int? ObjetivoRelVersion { get; set; } // int
        [Column("colaboracion"), Nullable] public double? Colaboracion { get; set; } // float
        [Column("influencia"), Nullable] public double? Influencia { get; set; } // float
        [Column("nivel"), Nullable] public int? Nivel { get; set; } // int
        [Column("entidad"), Nullable] public int? Entidad { get; set; } // int
        [Column("tipo_presupuesto"), Nullable] public int? TipoPresupuesto { get; set; } // int
        [Column("programa"), Nullable] public int? Programa { get; set; } // int
        [Column("subprograma"), Nullable] public int? Subprograma { get; set; } // int
        [Column("proyecto"), Nullable] public int? Proyecto { get; set; } // int
        [Column("producto"), Nullable] public int? Producto { get; set; } // int
        [Column("unidad_responsable"), Nullable] public int? UnidadResponsable { get; set; } // int
        [Column("producto_concat"), Nullable] public string ProductoConcat { get; set; } // nvarchar(max)
        [Column("borrado"), Nullable] public string Borrado { get; set; } // varchar(5)
        [Column("fecha_actualizacion"), Nullable] public DateTime? FechaActualizacion { get; set; } // datetime2(6)
        [Column("fecha_insercion"), Nullable] public DateTime? FechaInsercion { get; set; } // datetime2(6)
        [Column("usuario_responsable"), Nullable] public string UsuarioResponsable { get; set; } // nvarchar(max)
        [Column("id"), Nullable] public int? Id { get; set; } // int
        [Column("nombre"), Nullable] public string Nombre { get; set; } // nvarchar(max)
        [Column("descripcion"), Nullable] public string Descripcion { get; set; } // nvarchar(max)
        [Column("tipo_objetivo_id"), Nullable] public int? TipoObjetivoId { get; set; } // int
    }

    [Table(Schema = "dbo", Name = "VwProgramaCifrasConsolidadasCovid", IsView = true)]
	public partial class VwProgramaCifrasConsolidadasCovid
	{
		[Column, Nullable] public int? CodigoPrograma { get; set; } // int
		[Column, NotNull] public int Nivel { get; set; } // int
		[Column, NotNull] public int CodigoEntidad { get; set; } // int
		[Column, Nullable] public string Entidad { get; set; } // varchar(60)
		[Column, NotNull] public int ClasePrograma { get; set; } // int
		[Column, Nullable] public string NombrePrograma { get; set; } // varchar(72)
		[Column, Nullable] public int? Fuente { get; set; } // int
		[Column, Nullable] public string NombreFuente { get; set; } // varchar(50)
		[Column, NotNull] public int Financiador { get; set; } // int
		[Column, Nullable] public string NombreFinanciador { get; set; } // varchar(60)
		[Column, Nullable] public int? CodigoDepartamento { get; set; } // int
		[Column, Nullable] public decimal? PresupuestoProgramas { get; set; } // numeric(38, 0)
		[Column, Nullable] public decimal? GastoActual { get; set; } // numeric(38, 0)
		[Column, Nullable] public int? NroProyectosActividadesAsociados { get; set; } // int
	}

	[Table(Schema = "dbo", Name = "VwProgramaIndicadoresCovid", IsView = true)]
	public partial class VwProgramaIndicadoresCovid
	{
		[Column("codigoprograma"), Nullable] public int? Codigoprograma { get; set; } // int
		[Column(), NotNull] public int Nivel { get; set; } // int
		[Column(), NotNull] public int CodigoEntidad { get; set; } // int
		[Column(), NotNull] public int ClasePrograma { get; set; } // int
		[Column(), NotNull] public int CodigoSubPrograma { get; set; } // int
		[Column(), NotNull] public int CodigoProyecto { get; set; } // int
		[Column(), NotNull] public int EsProgramaCovid { get; set; } // int
		[Column(), Nullable] public string NombrePrograma { get; set; } // varchar(65)
		[Column(), NotNull] public int Anio { get; set; } // int
		[Column(), NotNull] public int CodigoIndicador { get; set; } // int
		[Column(), Nullable] public string NombreIndicador { get; set; } // varchar(1000)
		[Column(), Nullable] public decimal? MetaIndicador { get; set; } // numeric(22, 2)
		[Column(), Nullable] public decimal? AvanceIndicador { get; set; } // numeric(22, 2)
		[Column(), Nullable] public decimal? DenominadorIndicador { get; set; } // numeric(22, 2)
		[Column(), Nullable] public decimal? PorcentajeMeta { get; set; } // numeric(22, 2)
		[Column(), Nullable] public decimal? PorcentajeAvance { get; set; } // numeric(22, 2)
		[Column(), Nullable] public string TipoIndicador { get; set; } // varchar(50)
		[Column(), Nullable] public string TamanoIndicador { get; set; } // varchar(50)
		[Column(), Nullable] public string Tipo2Indicador { get; set; } // varchar(50)
		[Column(), Nullable] public string FecuenciaIndicador { get; set; } // varchar(50)
	}

	[Table(Schema = "dbo", Name = "VwProgramaLineaCompleta", IsView = true)]
	public partial class VwProgramaLineaCompleta
	{
		[Column(), NotNull] public string LineaPresupuestal { get; set; } // varchar(96)
		[Column(), NotNull] public int Id { get; set; } // int
		[Column(), NotNull] public int Nivel { get; set; } // int
		[Column(), NotNull] public int CodigoEntidad { get; set; } // int
		[Column(), NotNull] public int ClasePrograma { get; set; } // int
		[Column(), NotNull] public int CodigoPrograma { get; set; } // int
		[Column(), NotNull] public string NombrePrograma { get; set; } // varchar(60)
		[Column(), NotNull] public int CodigoSubPrograma { get; set; } // int
		[Column(), NotNull] public int CodigoProyecto { get; set; } // int
		[Column(), NotNull] public int EsProgramaCovid { get; set; } // int
		[Column(), Nullable] public string NombreActividadProyecto { get; set; } // varchar(250)
		[Column("codigoprogramaNegocio"), Nullable] public int? CodigoprogramaNegocio { get; set; } // int
		[Column(), NotNull] public int CodigoProducto { get; set; } // int
		[Column(), NotNull] public int CodigoObjeto { get; set; } // int
		[Column(), NotNull] public int Financiador { get; set; } // int
		[Column(), NotNull] public int Fuente { get; set; } // int
		[Column(), NotNull] public int CodigoDepartamento { get; set; } // int
		[Column("avance"), Nullable] public decimal? Avance { get; set; } // numeric(38, 0)
		[Column("meta"), Nullable] public decimal? Meta { get; set; } // numeric(38, 0)
	}

	[Table(Schema = "dbo", Name = "VwProgramaPorcentajeSalarios", IsView = true)]
	public partial class VwProgramaPorcentajeSalario
	{
		[Column(), NotNull] public long Idregistro { get; set; } // bigint
		[Column(), NotNull] public decimal ValorSalarios { get; set; } // numeric(38, 2)
		[Column(), NotNull] public decimal ValorPresupuestaria { get; set; } // numeric(38, 0)
		[Column("porcentaje"), Nullable] public decimal? Porcentaje { get; set; } // numeric(38, 6)
	}

	[Table(Schema = "dbo", Name = "VwProgramaSalarios", IsView = true)]
	public partial class VwProgramaSalario
	{
		[Column, NotNull] public long Idregistro { get; set; } // bigint
		[Column, Nullable] public string NombreEntidad { get; set; } // varchar(255)
		[Column, Nullable] public string NombreActividad { get; set; } // varchar(255)
		[Column, NotNull] public DateTime FechaPresupuesto { get; set; } // datetime
		[Column, Nullable] public decimal? ValorSalario { get; set; } // numeric(38, 6)
		[Column, Nullable] public string IdEntidad { get; set; } // varchar(21)
	}

	[Table(Schema = "dbo", Name = "VwProyeccionProgramasRecursosLeyEmergencia", IsView = true)]
	public partial class VwProyeccionProgramasRecursosLeyEmergencia
	{
		[Column(), NotNull] public int IdItem { get; set; } // int
		[Column(), Nullable] public string Item { get; set; } // varchar(30)
		[Column(), NotNull] public int Planificado { get; set; } // int
		[Column(), NotNull] public int Transferido { get; set; } // int
		[Column("codigoprogramaNegocio"), Nullable] public int? CodigoprogramaNegocio { get; set; } // int
		[Column(), NotNull] public int Nivel { get; set; } // int
		[Column(), Nullable] public int? CodigoEntidad { get; set; } // int
		[Column(), Nullable] public string Entidad { get; set; } // varchar(60)
		[Column(), NotNull] public int ClasePrograma { get; set; } // int
		[Column(), NotNull] public int CodigoPrograma { get; set; } // int
		[Column(), NotNull] public string NombrePrograma { get; set; } // varchar(60)
		[Column(), NotNull] public int CodigoProyecto { get; set; } // int
		[Column(), Nullable] public string NombreActividadProyecto { get; set; } // varchar(250)
		[Column(), Nullable] public decimal? PresupuestoProgramaxActividad { get; set; } // numeric(38, 0)
		[Column(), Nullable] public decimal? AvanceProgramaxActividad { get; set; } // numeric(38, 0)
		[Column(), NotNull] public int CodigoObjeto { get; set; } // int
		[Column(), Nullable] public string NombreObjeto { get; set; } // varchar(8000)
		[Column(), Nullable] public decimal? PresupuestoProgramaxObjeto { get; set; } // numeric(38, 0)
		[Column(), Nullable] public decimal? AvanceProgramaxObjeto { get; set; } // numeric(38, 0)
	}

	[Table(Schema = "dbo", Name = "VwProyeccionProgramasRecursosLeyEmergenciaITEMS", IsView = true)]
	public partial class VwProyeccionProgramasRecursosLeyEmergenciaITEM
	{
		[Column(), NotNull] public int IdItem { get; set; } // int
		[Column(), Nullable] public string Item { get; set; } // varchar(30)
		[Column(), NotNull] public int IdArticulo { get; set; } // int
		[Column(), Nullable] public string Articulo { get; set; } // varchar(30)
		[Column(), Nullable] public string DescripcionArticulo { get; set; } // varchar(4000)
		[Column(), NotNull] public int PlanificadoValorUSD { get; set; } // int
		[Column(), NotNull] public int TransferidoValorUSD { get; set; } // int
		[Column("codigoprogramaNegocio"), Nullable] public int? CodigoprogramaNegocio { get; set; } // int
		[Column(), NotNull] public int Nivel { get; set; } // int
		[Column(), Nullable] public int? CodigoEntidad { get; set; } // int
		[Column(), Nullable] public string Entidad { get; set; } // varchar(60)
		[Column(), NotNull] public int ClasePrograma { get; set; } // int
		[Column(), NotNull] public int CodigoPrograma { get; set; } // int
		[Column(), NotNull] public string NombrePrograma { get; set; } // varchar(60)
		[Column(), NotNull] public int CodigoProyecto { get; set; } // int
		[Column(), Nullable] public string NombreActividadProyecto { get; set; } // varchar(250)
		[Column(), Nullable] public int? Financiador { get; set; } // int
		[Column(), Nullable] public string NombreOF { get; set; } // varchar(255)
		[Column(), Nullable] public int? Fuente { get; set; } // int
		[Column(), Nullable] public string NombreFF { get; set; } // varchar(255)
		[Column(), Nullable] public decimal? PresupuestoProgramaxActividad { get; set; } // numeric(38, 0)
		[Column(), Nullable] public decimal? AvanceProgramaxActividad { get; set; } // numeric(38, 0)
		[Column(), NotNull] public int CodigoObjeto { get; set; } // int
		[Column(), Nullable] public string NombreObjeto { get; set; } // varchar(8000)
		[Column(), Nullable] public decimal? PresupuestoProgramaxObjeto { get; set; } // numeric(38, 0)
		[Column(), Nullable] public decimal? AvanceProgramaxObjeto { get; set; } // numeric(38, 0)
	}

	[Table(Schema = "dbo", Name = "VwProyeccionProgramasRecursosLeyEmergenciaOLD", IsView = true)]
	public partial class VwProyeccionProgramasRecursosLeyEmergenciaOLD
	{
		[Column(), NotNull] public int IdItem { get; set; } // int
		[Column(), NotNull] public string Item { get; set; } // varchar(30)
		[Column(), NotNull] public int Planificado { get; set; } // int
		[Column(), NotNull] public int Transferido { get; set; } // int
		[Column("codigoprogramaNegocio"), Nullable] public int? CodigoprogramaNegocio { get; set; } // int
		[Column(), NotNull] public int Nivel { get; set; } // int
		[Column(), Nullable] public int? CodigoEntidad { get; set; } // int
		[Column(), Nullable] public string Entidad { get; set; } // varchar(60)
		[Column(), NotNull] public int ClasePrograma { get; set; } // int
		[Column(), NotNull] public int CodigoPrograma { get; set; } // int
		[Column(), NotNull] public string NombrePrograma { get; set; } // varchar(60)
		[Column(), NotNull] public int CodigoProyecto { get; set; } // int
		[Column(), NotNull] public string NombreActividadProyecto { get; set; } // varchar(250)
		[Column(), Nullable] public decimal? PresupuestoProgramaxActividad { get; set; } // numeric(38, 0)
		[Column(), Nullable] public decimal? AvanceProgramaxActividad { get; set; } // numeric(38, 0)
		[Column(), NotNull] public int CodigoObjeto { get; set; } // int
		[Column(), Nullable] public string NombreObjeto { get; set; } // varchar(8000)
		[Column(), Nullable] public decimal? PresupuestoProgramaxObjeto { get; set; } // numeric(38, 0)
		[Column(), Nullable] public decimal? AvanceProgramaxObjeto { get; set; } // numeric(38, 0)
	}

	[Table(Schema = "dbo", Name = "VwProyectosAprobados", IsView = true)]
	public partial class VwProyectosAprobado
	{
		[Column, NotNull] public int IdProyecto { get; set; } // int
		[Column, NotNull] public DateTime FechaInicioProyecto { get; set; } // datetime
		[Column, NotNull] public DateTime FechaFinProyecto { get; set; } // datetime
		[Column, NotNull] public string NombreProyecto { get; set; } // varchar(max)
		[Column, NotNull] public decimal VlrTotalProyectoFuenteRegalias { get; set; } // decimal(18, 2)
		[Column, NotNull] public decimal VlrTotalProyectoTodasLasFuentes { get; set; } // decimal(18, 2)
		[Column, NotNull] public int IdSector { get; set; } // int
	}

	[Table(Schema = "dbo", Name = "VwProyectosAprobadosInv", IsView = true)]
	public partial class VwProyectosAprobadosInv
	{
		[Column, NotNull] public int IdProyecto { get; set; } // int
		[Column, NotNull] public DateTime FechaInicioProyecto { get; set; } // datetime
		[Column, NotNull] public string MesInicioProyecto { get; set; } // nvarchar(3)
		[Column, NotNull] public int AnioInicioProyecto { get; set; } // int
		[Column, NotNull] public DateTime FechaFinProyecto { get; set; } // datetime
		[Column, NotNull] public string MesFinProyecto { get; set; } // nvarchar(3)
		[Column, NotNull] public int AnioFinProyecto { get; set; } // int
		[Column, NotNull] public string NombreProyecto { get; set; } // varchar(max)
		[Column, NotNull] public decimal VlrTotalProyectoFuenteRegalias { get; set; } // decimal(18, 2)
		[Column, NotNull] public decimal VlrTotalProyectoTodasLasFuentes { get; set; } // decimal(18, 2)
		[Column, NotNull] public int IdSector { get; set; } // int
		[Column, NotNull] public string NombreSector { get; set; } // varchar(200)
		[Column, NotNull] public string URLImagen { get; set; } // nvarchar(4000)
		[Column, NotNull] public int NumeroImagenes { get; set; } // int
		[Column, Nullable] public decimal? AvanceFinanciero { get; set; } // decimal(10, 2)
		[Column, NotNull] public decimal AvanceFisico { get; set; } // decimal(10, 2)
		[Column, NotNull] public string IdEntidadEjecutora { get; set; } // varchar(30)
		[Column, NotNull] public string EntidadEjecutora { get; set; } // varchar(200)
		[Column, Nullable] public decimal? DuracionProyecto { get; set; } // decimal(18, 0)
		[Column, NotNull] public int MeGusta { get; set; } // int
		[Column, NotNull] public int Comentarios { get; set; } // int
		[Column, NotNull] public string TipoProyecto { get; set; } // varchar(13)
		[Column, NotNull] public int IdPrograma { get; set; } // int
		[Column, NotNull] public string Programa { get; set; } // varchar(60)
		[Column, NotNull] public int COVID19 { get; set; } // int
		[Column, NotNull] public string CodigoSNIP { get; set; } // varchar(max)
	}

	[Table(Schema = "dbo", Name = "VwReporteComentariosParticipacion", IsView = true)]
	public partial class VwReporteComentariosParticipacion
	{
		[Column, NotNull] public int IdProyecto { get; set; } // int
		[Column, NotNull] public string CodigoProyecto { get; set; } // varchar(max)
		[Column, NotNull] public string NombreProyecto { get; set; } // varchar(max)
		[Column, NotNull] public int IdSector { get; set; } // int
		[Column, NotNull] public string NombreSector { get; set; } // varchar(200)
		[Column, NotNull] public string IdEntidadEjecutora { get; set; } // varchar(100)
		[Column, NotNull] public string EntidadEjecutora { get; set; } // varchar(200)
		[Column, NotNull] public string IdDepartamento { get; set; } // varchar(10)
		[Column, NotNull] public string NombreDepartamento { get; set; } // varchar(50)
		[Column, NotNull] public string IdMunicipio { get; set; } // varchar(10)
		[Column, NotNull] public string NombreMunicipio { get; set; } // varchar(50)
		[Column, NotNull] public int Idpregunta { get; set; } // int
		[Column, NotNull] public string TextoPregunta { get; set; } // varchar(200)
		[Column, Nullable] public int? IdOpcionRespuesta { get; set; } // int
		[Column, Nullable] public string EtiquetaOpcion { get; set; } // varchar(200)
		[Column, Nullable] public DateTime? Fecha { get; set; } // datetime
		[Column, Nullable] public string ComentarioRespuesta { get; set; } // varchar(4000)
	}

	[Table(Schema = "dbo", Name = "VwSectorListadoPorDeptoInv", IsView = true)]
	public partial class VwSectorListadoPorDeptoInv
	{
		[Column, NotNull] public string IdDepartamento { get; set; } // varchar(10)
		[Column, NotNull] public int IdEstado { get; set; } // int
		[Column, NotNull] public int IdSector { get; set; } // int
		[Column, NotNull] public string NombreSector { get; set; } // varchar(200)
		[Column, NotNull] public int IdProyecto { get; set; } // int
	}

	[Table(Schema = "dbo", Name = "VwSectorPerfilDeptoInv", IsView = true)]
	public partial class VwSectorPerfilDeptoInv
	{
		[Column, NotNull] public int IdSector { get; set; } // int
		[Column, NotNull] public string NombreSector { get; set; } // varchar(200)
		[Column, NotNull] public string IdDepartamento { get; set; } // varchar(10)
		[Column, NotNull] public string NombreDepartamento { get; set; } // varchar(50)
		[Column, Nullable] public long? NumeroProyectosSect { get; set; } // bigint
		[Column, NotNull] public int IdEstado { get; set; } // int
		[Column, NotNull] public string NombreEstado { get; set; } // varchar(30)
		[Column, Nullable] public long? NumeroProyectosxEstado { get; set; } // bigint
	}

	[Table(Schema = "dbo", Name = "VwSectorPerfilProyectosInv", IsView = true)]
	public partial class VwSectorPerfilProyectosInv
	{
		[Column, NotNull] public int IdSector { get; set; } // int
		[Column, NotNull] public string NombreSector { get; set; } // varchar(200)
		[Column, Nullable] public int? NumeroProyectosSect { get; set; } // int
		[Column, NotNull] public int IdEstado { get; set; } // int
		[Column, NotNull] public string NombreEstado { get; set; } // varchar(30)
		[Column, Nullable] public int? NumeroProyectosxEstado { get; set; } // int
	}

	[Table(Schema = "dbo", Name = "VwSectorProyectosDeptoInv", IsView = true)]
	public partial class VwSectorProyectosDeptoInv
	{
		[Column, NotNull] public string IdDepartamento { get; set; } // varchar(10)
		[Column, NotNull] public int IdSector { get; set; } // int
		[Column, NotNull] public string NombreSector { get; set; } // varchar(200)
		[Column, Nullable] public long? NumeroProyectosSect { get; set; } // bigint
		[Column, NotNull] public int IdEstado { get; set; } // int
		[Column, NotNull] public string NombreEstado { get; set; } // varchar(30)
		[Column, Nullable] public long? NumeroProyectosxEstado { get; set; } // bigint
	}

	[Table(Schema = "dbo", Name = "VwSectorProyectosInv", IsView = true)]
	public partial class VwSectorProyectosInv
	{
		[Column, NotNull] public string IdDepartamento { get; set; } // varchar(10)
		[Column, NotNull] public string IdMunicipio { get; set; } // varchar(10)
		[Column, NotNull] public int IdSector { get; set; } // int
		[Column, NotNull] public string NombreSector { get; set; } // varchar(200)
		[Column, Nullable] public int? NumeroProyectosSect { get; set; } // int
		[Column, NotNull] public int IdEstado { get; set; } // int
		[Column, NotNull] public string NombreEstado { get; set; } // varchar(30)
		[Column, Nullable] public int? NumeroProyectosxEstado { get; set; } // int
	}

	[Table(Schema = "dbo", Name = "vwSeguimientoProyectoAfinanciero", IsView = true)]
	public partial class VwSeguimientoProyectoAfinanciero
	{
		[Column(), NotNull] public long IdSeguimientoProyecto { get; set; } // bigint
		[Column("codigoBPIN"), Nullable] public string CodigoBPIN { get; set; } // nvarchar(255)
		[Column(), NotNull] public string NombreProyecto { get; set; } // varchar(4000)
		[Column(), Nullable] public decimal? AvanceFinanciero { get; set; } // decimal(18, 4)
		[Column(), NotNull] public DateTime FechaInicio { get; set; } // datetime
		[Column(), NotNull] public DateTime FechaFin { get; set; } // datetime
		[Column(), Nullable] public int? DiasTotales { get; set; } // int
		[Column(), Nullable] public int? DiasTranscurridos { get; set; } // int
		[Column(), Nullable] public string NombreEstado { get; set; } // varchar(100)
		[Column(), NotNull] public int IdSector { get; set; } // int
		[Column(), Nullable] public string NombreSector { get; set; } // varchar(100)
	}

	[Table(Schema = "dbo", Name = "VWSubsidioPytyvoV1", IsView = true)]
	public partial class VWSubsidioPytyvoV1
	{
		[Column, NotNull] public long ID { get; set; } // bigint
		[Column, Nullable] public string Departamento { get; set; } // nvarchar(255)
		[Column, Nullable] public decimal? Pago1 { get; set; } // decimal(38, 2)
		[Column, Nullable] public decimal? Pago2 { get; set; } // decimal(38, 2)
	}

	[Table(Schema = "dbo", Name = "VWSubsidioPytyvoV2", IsView = true)]
	public partial class VWSubsidioPytyvoV2
	{
		[Column, NotNull] public long ID { get; set; } // bigint
		[Column, NotNull] public string Departamento { get; set; } // varchar(50)
		[Column, Nullable] public double? Pago1 { get; set; } // float
		[Column, Nullable] public double? Pago2 { get; set; } // float
		[Column, Nullable] public double? Pago3 { get; set; } // float
	}

	[Table(Schema = "dbo", Name = "VwSubsidiosConsolidados", IsView = true)]
	public partial class VwSubsidiosConsolidado
	{
		[Column, NotNull] public string IdSubsidio { get; set; } // varchar(24)
		[Column, Nullable] public int? IdPrograma { get; set; } // int
		[Column, NotNull] public int IdTipoSubsidio { get; set; } // int
		[Column, Nullable] public string TipoSubsidio { get; set; } // varchar(100)
		[Column, Nullable] public decimal? TotalSubsidio { get; set; } // decimal(18, 2)
		[Column, Nullable] public int? TotalBeneficiarios { get; set; } // int
		[Column, Nullable] public int? TotalSubsidiosEntregados { get; set; } // int
		[Column, NotNull] public string URLSubsidios { get; set; } // varchar(38)
	}

	[Table(Schema = "dbo", Name = "VWSubsidioSubsidioArtistas", IsView = true)]
	public partial class VWSubsidioSubsidioArtista
	{
		[Column, NotNull] public long ID { get; set; } // bigint
		[Column, Nullable] public string Departamento { get; set; } // varchar(50)
		[Column, Nullable] public long? Pago1 { get; set; } // bigint
		[Column, Nullable] public long? Pago2 { get; set; } // bigint
		[Column, Nullable] public long? Pago3 { get; set; } // bigint
	}

	[Table(Schema = "dbo", Name = "VwSubsidiosxLocalizacion", IsView = true)]
	public partial class VwSubsidiosxLocalizacion
	{
		[Column, NotNull] public string IdSubsidio { get; set; } // varchar(8000)
		[Column, Nullable] public string IdDepartamento { get; set; } // varchar(8000)
		[Column, Nullable] public string NombreDepartamento { get; set; } // varchar(8000)
		[Column, Nullable] public string IdMunicipio { get; set; } // varchar(8000)
		[Column, Nullable] public string NombreMunicipio { get; set; } // varchar(8000)
		[Column, NotNull] public string CaracteristicaSubsidio { get; set; } // nvarchar(255)
		[Column, NotNull] public string ClaseSubsidio { get; set; } // varchar(55)
		[Column, Nullable] public decimal? ValorSubsidio { get; set; } // money
		[Column, Nullable] public int? CantidadSubsidio { get; set; } // int
		[Column, NotNull] public string GeoJson { get; set; } // varchar(max)
	}

	[Table(Schema = "dbo", Name = "VwSubsidiosxLocalizacionANT", IsView = true)]
	public partial class VwSubsidiosxLocalizacionANT
	{
		[Column, NotNull] public string IdSubsidio { get; set; } // varchar(8000)
		[Column, Nullable] public string IdDepartamento { get; set; } // varchar(8000)
		[Column, Nullable] public string NombreDepartamento { get; set; } // varchar(8000)
		[Column, Nullable] public string IdMunicipio { get; set; } // varchar(8000)
		[Column, Nullable] public string NombreMunicipio { get; set; } // varchar(8000)
		[Column, NotNull] public string CaracteristicaSubsidio { get; set; } // nvarchar(255)
		[Column, NotNull] public string ClaseSubsidio { get; set; } // varchar(55)
		[Column, Nullable] public decimal? ValorSubsidio { get; set; } // money
		[Column, Nullable] public int? CantidadSubsidio { get; set; } // int
		[Column, NotNull] public string GeoJson { get; set; } // varchar(max)
	}

	[Table(Schema = "dbo", Name = "VwSubsidiosxLocalizacionTable")]
	public partial class VwSubsidiosxLocalizacionTable
	{
		[Column, NotNull] public string IdSubsidio { get; set; } // varchar(8000)
		[Column, Nullable] public string IdDepartamento { get; set; } // varchar(8000)
		[Column, Nullable] public string NombreDepartamento { get; set; } // varchar(8000)
		[Column, Nullable] public string IdMunicipio { get; set; } // varchar(8000)
		[Column, Nullable] public string NombreMunicipio { get; set; } // varchar(8000)
		[Column, NotNull] public string CaracteristicaSubsidio { get; set; } // nvarchar(255)
		[Column, NotNull] public string ClaseSubsidio { get; set; } // varchar(55)
		[Column, Nullable] public decimal? ValorSubsidio { get; set; } // money
		[Column, Nullable] public int? CantidadSubsidio { get; set; } // int
		[Column, NotNull] public string GeoJson { get; set; } // varchar(max)
	}

	[Table(Schema = "dbo", Name = "VwSubsidiosxLocalizacionTableOld")]
	public partial class VwSubsidiosxLocalizacionTableOld
	{
		[Column, NotNull] public string IdSubsidio { get; set; } // varchar(8000)
		[Column, Nullable] public string IdDepartamento { get; set; } // varchar(8000)
		[Column, Nullable] public string NombreDepartamento { get; set; } // varchar(8000)
		[Column, Nullable] public string IdMunicipio { get; set; } // varchar(8000)
		[Column, Nullable] public string NombreMunicipio { get; set; } // varchar(8000)
		[Column, NotNull] public string CaracteristicaSubsidio { get; set; } // nvarchar(255)
		[Column, NotNull] public string ClaseSubsidio { get; set; } // varchar(55)
		[Column, Nullable] public decimal? ValorSubsidio { get; set; } // money
		[Column, Nullable] public int? CantidadSubsidio { get; set; } // int
		[Column, NotNull] public string GeoJson { get; set; } // varchar(max)
	}

  [Table(Schema = "stp", Name = "VinculacionPND_Presupuesto_x_Entidad_STP")]
  public partial class stp_VinculacionPNDPresupuestoXEntidadStp
  {
    [Column("codEjeEstrategico"), Nullable] public int? CodEjeEstrategico { get; set; } // int
    [Column("nombreEjeEstrategico"), NotNull] public string NombreEjeEstrategico { get; set; } // varchar(256)
    [Column("codObjetivoEstrategico"), Nullable] public int? CodObjetivoEstrategico { get; set; } // int
    [Column("nombreObjetivoEstrategico"), NotNull] public string NombreObjetivoEstrategico { get; set; } // varchar(256)
    [Column("codObjetivoEspecifico"), Nullable] public int? CodObjetivoEspecifico { get; set; } // int
    [Column("nombreObjetivoEspecifico"), NotNull] public string NombreObjetivoEspecifico { get; set; } // varchar(256)
    [Column("codODS"), Nullable] public int? CodODS { get; set; } // int
    [Column("nombreODS"), Nullable] public string NombreODS { get; set; } // varchar(255)
    [Column("descripcionODS"), Nullable] public string DescripcionODS { get; set; } // varchar(255)
    [Column("codNivelEntidad"), NotNull] public string CodNivelEntidad { get; set; } // varchar(47)
    [Column("entidad"), Nullable] public string Entidad { get; set; } // varchar(255)
    [Column("siglaEntidad"), Nullable] public string SiglaEntidad { get; set; } // varchar(255)
    [Column("numSector"), Nullable] public int? NumSector { get; set; } // int
    [Column("nombreSector"), Nullable] public string NombreSector { get; set; } // varchar(100)
    [Column("clasificacionSector"), Nullable] public string ClasificacionSector { get; set; } // varchar(100)
    [Column(), Nullable] public string IdNegocioProyecto { get; set; } // varchar(255)
    [Column("nombreProyecto"), Nullable] public string NombreProyecto { get; set; } // varchar(255)
    [Column("aportePorcentualAlObjetivo"), Nullable] public double? AportePorcentualAlObjetivo { get; set; } // float
    [Column("aportePresupuestalAlObjetivo"), Nullable] public double? AportePresupuestalAlObjetivo { get; set; } // float
    [Column(), NotNull] public int AnioPresupuesto { get; set; } // int
    [Column("version"), NotNull] public int Version { get; set; } // int
  }

  [Table(Schema = "consulta", Name = "VinculacionPND_Presupuesto_x_Entidad_STP")]
  public partial class consulta_VinculacionPNDPresupuestoXEntidadStp
  {
    [Column("codEjeEstrategico"), Nullable] public int? CodEjeEstrategico { get; set; } // int
    [Column("nombreEjeEstrategico"), NotNull] public string NombreEjeEstrategico { get; set; } // varchar(256)
    [Column("codObjetivoEstrategico"), Nullable] public int? CodObjetivoEstrategico { get; set; } // int
    [Column("nombreObjetivoEstrategico"), NotNull] public string NombreObjetivoEstrategico { get; set; } // varchar(256)
    [Column("codObjetivoEspecifico"), Nullable] public int? CodObjetivoEspecifico { get; set; } // int
    [Column("nombreObjetivoEspecifico"), NotNull] public string NombreObjetivoEspecifico { get; set; } // varchar(256)
    [Column("codODS"), Nullable] public int? CodODS { get; set; } // int
    [Column("nombreODS"), Nullable] public string NombreODS { get; set; } // varchar(255)
    [Column("descripcionODS"), Nullable] public string DescripcionODS { get; set; } // varchar(255)
    [Column("codNivelEntidad"), NotNull] public string CodNivelEntidad { get; set; } // varchar(47)
    [Column("entidad"), Nullable] public string Entidad { get; set; } // varchar(255)
    [Column("siglaEntidad"), Nullable] public string SiglaEntidad { get; set; } // varchar(255)
    [Column("numSector"), Nullable] public int? NumSector { get; set; } // int
    [Column("nombreSector"), Nullable] public string NombreSector { get; set; } // varchar(100)
    [Column("clasificacionSector"), Nullable] public string ClasificacionSector { get; set; } // varchar(100)
    [Column(), Nullable] public string IdNegocioProyecto { get; set; } // varchar(255)
    [Column("nombreProyecto"), Nullable] public string NombreProyecto { get; set; } // varchar(255)
    [Column("aportePorcentualAlObjetivo"), Nullable] public double? AportePorcentualAlObjetivo { get; set; } // float
    [Column("aportePresupuestalAlObjetivo"), Nullable] public double? AportePresupuestalAlObjetivo { get; set; } // float
    [Column(), NotNull] public int AnioPresupuesto { get; set; } // int
    [Column("version"), NotNull] public int Version { get; set; } // int
  }



  public static partial class TransparenciaDBStoredProcedures
	{
		#region EncabezadoContratosCancelados

		public static IEnumerable<VwContratosPerfilContratosCancelado> EncabezadoContratosCancelados(this TransparenciaDB dataConnection)
		{
			return dataConnection.QueryProc<VwContratosPerfilContratosCancelado>("[dbo].[EncabezadoContratosCancelados]");
		}

		#endregion

		#region EncabezadoContratosRP

		public static int EncabezadoContratosRP(this TransparenciaDB dataConnection, ref int? @TOTALREGISTROS, ref long? @VALORCONTRATOS)
		{
			var ret = dataConnection.ExecuteProc("[dbo].[EncabezadoContratosRP]",
				new DataParameter("@TOTALREGISTROS", @TOTALREGISTROS, LinqToDB.DataType.Int32) { Direction = ParameterDirection.InputOutput },
				new DataParameter("@VALORCONTRATOS", @VALORCONTRATOS, LinqToDB.DataType.Int64) { Direction = ParameterDirection.InputOutput });

			@TOTALREGISTROS = Converter.ChangeTypeTo<int?>(((IDbDataParameter)dataConnection.Command.Parameters["@TOTALREGISTROS"]).Value);
			@VALORCONTRATOS = Converter.ChangeTypeTo<long?>(((IDbDataParameter)dataConnection.Command.Parameters["@VALORCONTRATOS"]).Value);

			return ret;
		}

		#endregion

		#region GetDataGraficaLiquidadoPorDepartamento

		public static IEnumerable<GetDataGraficaLiquidadoPorDepartamentoResult> GetDataGraficaLiquidadoPorDepartamento(this TransparenciaDB dataConnection, string @periodosList)
		{
			return dataConnection.QueryProc<GetDataGraficaLiquidadoPorDepartamentoResult>("[dbo].[GetDataGraficaLiquidadoPorDepartamento]",
				new DataParameter("@periodosList", @periodosList, LinqToDB.DataType.VarChar));
		}

		public partial class GetDataGraficaLiquidadoPorDepartamentoResult
		{
			public string NombreDepartamento { get; set; }
			public decimal? Liquidado { get; set; }
		}

		#endregion

		#region GetDataGraficaLiquidadoPorRecurso

		public static IEnumerable<GetDataGraficaLiquidadoPorRecursoResult> GetDataGraficaLiquidadoPorRecurso(this TransparenciaDB dataConnection, string @periodosList)
		{
			return dataConnection.QueryProc<GetDataGraficaLiquidadoPorRecursoResult>("[dbo].[GetDataGraficaLiquidadoPorRecurso]",
				new DataParameter("@periodosList", @periodosList, LinqToDB.DataType.VarChar));
		}

		public partial class GetDataGraficaLiquidadoPorRecursoResult
		{
			public string NombreRecursoNatural { get; set; }
			public decimal? Liquidado { get; set; }
		}

		#endregion

		#region GetDataGraficaLiquidadoPorTipoRecurso

		public static IEnumerable<GetDataGraficaLiquidadoPorTipoRecursoResult> GetDataGraficaLiquidadoPorTipoRecurso(this TransparenciaDB dataConnection, string @periodosList)
		{
			return dataConnection.QueryProc<GetDataGraficaLiquidadoPorTipoRecursoResult>("[dbo].[GetDataGraficaLiquidadoPorTipoRecurso]",
				new DataParameter("@periodosList", @periodosList, LinqToDB.DataType.VarChar));
		}

		public partial class GetDataGraficaLiquidadoPorTipoRecursoResult
		{
			public string NombreTipoRecursoNatural { get; set; }
			public decimal? Liquidado { get; set; }
		}

		#endregion

		#region GetDataGraficaProduccionPorRecurso

		public static IEnumerable<GetDataGraficaProduccionPorRecursoResult> GetDataGraficaProduccionPorRecurso(this TransparenciaDB dataConnection, string @periodosList)
		{
			return dataConnection.QueryProc<GetDataGraficaProduccionPorRecursoResult>("[dbo].[GetDataGraficaProduccionPorRecurso]",
				new DataParameter("@periodosList", @periodosList, LinqToDB.DataType.VarChar));
		}

		public partial class GetDataGraficaProduccionPorRecursoResult
		{
			public string NombreRecursoNatural { get; set; }
			public decimal? Cantidad { get; set; }
			public string NombreUnidadMedida { get; set; }
		}

		#endregion

		#region InsertDataCabeceraMunicipio

		public static int InsertDataCabeceraMunicipio(this TransparenciaDB dataConnection, string @NombreDepartamento, string @NombreMunicipio, decimal? @Latitud, decimal? @Longitud, string @CodigoDane, SqlGeography @PuntoUbicacion)
		{
			return dataConnection.ExecuteProc("[dbo].[InsertDataCabeceraMunicipio]",
				new DataParameter("@NombreDepartamento", @NombreDepartamento, LinqToDB.DataType.NVarChar),
				new DataParameter("@NombreMunicipio", @NombreMunicipio, LinqToDB.DataType.NVarChar),
				new DataParameter("@Latitud", @Latitud, LinqToDB.DataType.Decimal),
				new DataParameter("@Longitud", @Longitud, LinqToDB.DataType.Decimal),
				new DataParameter("@CodigoDane", @CodigoDane, LinqToDB.DataType.VarChar),
				new DataParameter("@PuntoUbicacion", @PuntoUbicacion, LinqToDB.DataType.Udt));
		}

		#endregion

		#region InsertDataEntidadTerritorial

		public static int InsertDataEntidadTerritorial(this TransparenciaDB dataConnection, string @IdRegion, string @IdDepartamento, string @IdMunicipio, string @NombreRegion, string @NombreDepartamento, string @NombreMunicipio, SqlGeography @GeoPoligonoEntidadTerritorial, string @CodigoDANE, int? @ConsecutivoCarga, SqlGeography @TopLef, SqlGeography @BottomRight, string @Tipo, int? @Version, SqlGeography @Centroide, string @Geojson)
		{
			return dataConnection.ExecuteProc("[dbo].[InsertDataEntidadTerritorial]",
				new DataParameter("@IdRegion", @IdRegion, LinqToDB.DataType.VarChar),
				new DataParameter("@IdDepartamento", @IdDepartamento, LinqToDB.DataType.VarChar),
				new DataParameter("@IdMunicipio", @IdMunicipio, LinqToDB.DataType.VarChar),
				new DataParameter("@NombreRegion", @NombreRegion, LinqToDB.DataType.VarChar),
				new DataParameter("@NombreDepartamento", @NombreDepartamento, LinqToDB.DataType.VarChar),
				new DataParameter("@NombreMunicipio", @NombreMunicipio, LinqToDB.DataType.VarChar),
				new DataParameter("@GeoPoligonoEntidadTerritorial", @GeoPoligonoEntidadTerritorial, LinqToDB.DataType.Udt),
				new DataParameter("@CodigoDANE", @CodigoDANE, LinqToDB.DataType.VarChar),
				new DataParameter("@ConsecutivoCarga", @ConsecutivoCarga, LinqToDB.DataType.Int32),
				new DataParameter("@TopLef", @TopLef, LinqToDB.DataType.Udt),
				new DataParameter("@BottomRight", @BottomRight, LinqToDB.DataType.Udt),
				new DataParameter("@Tipo", @Tipo, LinqToDB.DataType.VarChar),
				new DataParameter("@Version", @Version, LinqToDB.DataType.Int32),
				new DataParameter("@Centroide", @Centroide, LinqToDB.DataType.Udt),
				new DataParameter("@Geojson", @Geojson, LinqToDB.DataType.VarChar));
		}

		#endregion

		#region LLenarBusqueda

		public static int LLenarBusqueda(this TransparenciaDB dataConnection)
		{
			return dataConnection.ExecuteProc("[dbo].[LLenarBusqueda]");
		}

		#endregion

		#region LLenarBusquedaCovid

		public static int LLenarBusquedaCovid(this TransparenciaDB dataConnection)
		{
			return dataConnection.ExecuteProc("[dbo].[LLenarBusquedaCovid]");
		}

		#endregion

		#region ObtenerAnniosContratos

		public static IEnumerable<ObtenerAnniosContratosResult> ObtenerAnniosContratos(this TransparenciaDB dataConnection)
		{
			return dataConnection.QueryProc<ObtenerAnniosContratosResult>("[dbo].[ObtenerAnniosContratos]");
		}

		public partial class ObtenerAnniosContratosResult
		{
			public int? ANIOINICIOCONTRATO { get; set; }
		}

		#endregion

		#region ObtenerAnniosContratosPorPrograma

		public static IEnumerable<ObtenerAnniosContratosPorProgramaResult> ObtenerAnniosContratosPorPrograma(this TransparenciaDB dataConnection, int? @IDPROGRAMA)
		{
			return dataConnection.QueryProc<ObtenerAnniosContratosPorProgramaResult>("[dbo].[ObtenerAnniosContratosPorPrograma]",
				new DataParameter("@IDPROGRAMA", @IDPROGRAMA, LinqToDB.DataType.Int32));
		}

		public partial class ObtenerAnniosContratosPorProgramaResult
		{
			public int? ANIOINICIOCONTRATO { get; set; }
		}

		#endregion

		#region ObtenerAnniosContratosPorProyecto

		public static IEnumerable<ObtenerAnniosContratosPorProyectoResult> ObtenerAnniosContratosPorProyecto(this TransparenciaDB dataConnection, int? @IDPROYECTO)
		{
			return dataConnection.QueryProc<ObtenerAnniosContratosPorProyectoResult>("[dbo].[ObtenerAnniosContratosPorProyecto]",
				new DataParameter("@IDPROYECTO", @IDPROYECTO, LinqToDB.DataType.Int32));
		}

		public partial class ObtenerAnniosContratosPorProyectoResult
		{
			public int? ANIOINICIOCONTRATO { get; set; }
		}

		#endregion

		#region ObtenerAnniosContratosPorRuC

		public static IEnumerable<ObtenerAnniosContratosPorRuCResult> ObtenerAnniosContratosPorRuC(this TransparenciaDB dataConnection, string @RUC)
		{
			return dataConnection.QueryProc<ObtenerAnniosContratosPorRuCResult>("[dbo].[ObtenerAnniosContratosPorRuC]",
				new DataParameter("@RUC", @RUC, LinqToDB.DataType.VarChar));
		}

		public partial class ObtenerAnniosContratosPorRuCResult
		{
			public int? ANIOINICIOCONTRATO { get; set; }
		}

		#endregion

		#region ObtenerAnniosContratosRP

		public static IEnumerable<ObtenerAnniosContratosRPResult> ObtenerAnniosContratosRP(this TransparenciaDB dataConnection)
		{
			return dataConnection.QueryProc<ObtenerAnniosContratosRPResult>("[dbo].[ObtenerAnniosContratosRP]");
		}

		public partial class ObtenerAnniosContratosRPResult
		{
			public int? ANIOINICIOCONTRATO { get; set; }
		}

		#endregion

		#region ObtenerComentariosPorEstados

		public static IEnumerable<ObtenerComentariosPorEstadosResult> ObtenerComentariosPorEstados(this TransparenciaDB dataConnection, int? @IDESTADO, int? @IDASOCIACION, int? @TIPOCOMENTARIO, int? @NUMEROPAGINA, int? @REGPORPAGINA, ref int? @TOTALREGISTROS)
		{
			var ret = dataConnection.QueryProc<ObtenerComentariosPorEstadosResult>("[dbo].[ObtenerComentariosPorEstados]",
				new DataParameter("@IDESTADO", @IDESTADO, LinqToDB.DataType.Int32),
				new DataParameter("@IDASOCIACION", @IDASOCIACION, LinqToDB.DataType.Int32),
				new DataParameter("@TIPOCOMENTARIO", @TIPOCOMENTARIO, LinqToDB.DataType.Int32),
				new DataParameter("@NUMEROPAGINA", @NUMEROPAGINA, LinqToDB.DataType.Int32),
				new DataParameter("@REGPORPAGINA", @REGPORPAGINA, LinqToDB.DataType.Int32),
				new DataParameter("@TOTALREGISTROS", @TOTALREGISTROS, LinqToDB.DataType.Int32) { Direction = ParameterDirection.InputOutput }).ToList();

			@TOTALREGISTROS = Converter.ChangeTypeTo<int?>(((IDbDataParameter)dataConnection.Command.Parameters["@TOTALREGISTROS"]).Value);

			return ret;
		}

		public partial class ObtenerComentariosPorEstadosResult
		{
			public long? NUMBER { get; set; }
			public int IdUsuario { get; set; }
			public string Nombre { get; set; }
			public string NombreRol { get; set; }
			public string NombreGenero { get; set; }
			public string email { get; set; }
			public DateTime fechaCreacion { get; set; }
			public string ComentarioOriginal { get; set; }
			public string ComentarioModerado { get; set; }
			public int? IdTipoRespuesta { get; set; }
			public int? ComentarioRelacionado { get; set; }
			public int IdEstado { get; set; }
			public int IdComentario { get; set; }
			public string EstadoComentario { get; set; }
			public int? IdAsociacion { get; set; }
			public int? IdPrograma { get; set; }
			public string NombrePrograma { get; set; }
			public string CodigoContrato { get; set; }
			public int? IdProyecto { get; set; }
			public string NombreProyecto { get; set; }
			public bool? Anonimo { get; set; }
			public int IdTipoComentario { get; set; }
			public string TipoComentario { get; set; }
			public string IdDepartamento { get; set; }
			public string IdMunicipio { get; set; }
			public int? CodEnteTerritorialBeneficiario { get; set; }
			public string NombreMunicipio { get; set; }
			public string NombreDepartamento { get; set; }
		}

		#endregion

		#region ObtenerComentariosPublicar

		public static IEnumerable<ObtenerComentariosPublicarResult> ObtenerComentariosPublicar(this TransparenciaDB dataConnection, int? @IDESTADO, int? @IDASOCIACION, int? @TIPOCOMENTARIO, int? @NUMEROPAGINA, int? @REGPORPAGINA, ref int? @TOTALREGISTROS)
		{
			var ret = dataConnection.QueryProc<ObtenerComentariosPublicarResult>("[dbo].[ObtenerComentariosPublicar]",
				new DataParameter("@IDESTADO", @IDESTADO, LinqToDB.DataType.Int32),
				new DataParameter("@IDASOCIACION", @IDASOCIACION, LinqToDB.DataType.Int32),
				new DataParameter("@TIPOCOMENTARIO", @TIPOCOMENTARIO, LinqToDB.DataType.Int32),
				new DataParameter("@NUMEROPAGINA", @NUMEROPAGINA, LinqToDB.DataType.Int32),
				new DataParameter("@REGPORPAGINA", @REGPORPAGINA, LinqToDB.DataType.Int32),
				new DataParameter("@TOTALREGISTROS", @TOTALREGISTROS, LinqToDB.DataType.Int32) { Direction = ParameterDirection.InputOutput }).ToList();

			@TOTALREGISTROS = Converter.ChangeTypeTo<int?>(((IDbDataParameter)dataConnection.Command.Parameters["@TOTALREGISTROS"]).Value);

			return ret;
		}

		public partial class ObtenerComentariosPublicarResult
		{
			public long? NUMBER { get; set; }
			public int IdUsuario { get; set; }
			public string Nombre { get; set; }
			public string NombreRol { get; set; }
			public string NombreGenero { get; set; }
			public string email { get; set; }
			public DateTime fechaCreacion { get; set; }
			public string ComentarioOriginal { get; set; }
			public string ComentarioModerado { get; set; }
			public int? IdTipoRespuesta { get; set; }
			public int? ComentarioRelacionado { get; set; }
			public int IdEstado { get; set; }
			public int IdComentario { get; set; }
			public string EstadoComentario { get; set; }
			public int? IdAsociacion { get; set; }
			public int? IdPrograma { get; set; }
			public string NombrePrograma { get; set; }
			public string CodigoContrato { get; set; }
			public int? IdProyecto { get; set; }
			public string NombreProyecto { get; set; }
			public bool? Anonimo { get; set; }
			public int IdTipoComentario { get; set; }
			public string TipoComentario { get; set; }
			public string IdDepartamento { get; set; }
			public string IdMunicipio { get; set; }
			public int? CodEnteTerritorialBeneficiario { get; set; }
			public string NombreMunicipio { get; set; }
			public string NombreDepartamento { get; set; }
		}

		#endregion

		#region ObtenerConfiguracionAlertas

		public static IEnumerable<Alerta> ObtenerConfiguracionAlertas(this TransparenciaDB dataConnection)
		{
			return dataConnection.QueryProc<Alerta>("[dbo].[ObtenerConfiguracionAlertas]");
		}

		#endregion

		#region ObtenerEntidadRPPorNombre

		public static IEnumerable<ObtenerEntidadRPPorNombreResult> ObtenerEntidadRPPorNombre(this TransparenciaDB dataConnection, string @NOMBREENTIDAD)
		{
			return dataConnection.QueryProc<ObtenerEntidadRPPorNombreResult>("[dbo].[ObtenerEntidadRPPorNombre]",
				new DataParameter("@NOMBREENTIDAD", @NOMBREENTIDAD, LinqToDB.DataType.VarChar));
		}

		public partial class ObtenerEntidadRPPorNombreResult
		{
			public string ENTIDAD { get; set; }
		}

		#endregion

		#region ObtenerFichaProduccionParaEnte

		public static IEnumerable<ObtenerFichaProduccionParaEnteResult> ObtenerFichaProduccionParaEnte(this TransparenciaDB dataConnection, string @IdRegion, string @IdDpto, string @IdMunicipio, int? @Periodo)
		{
			return dataConnection.QueryProc<ObtenerFichaProduccionParaEnteResult>("[dbo].[ObtenerFichaProduccionParaEnte]",
				new DataParameter("@IdRegion", @IdRegion, LinqToDB.DataType.VarChar),
				new DataParameter("@IdDpto", @IdDpto, LinqToDB.DataType.VarChar),
				new DataParameter("@IdMunicipio", @IdMunicipio, LinqToDB.DataType.VarChar),
				new DataParameter("@Periodo", @Periodo, LinqToDB.DataType.Int32));
		}

		public partial class ObtenerFichaProduccionParaEnteResult
		{
			public string NombreTipoDeRecurso { get; set; }
			public string IdRecurso { get; set; }
			public string NombreRecursoNatural { get; set; }
			public string IdCampo { get; set; }
			public string NombreCampoOProyecto { get; set; }
			public decimal? Cantidad { get; set; }
			public string NombreUnidadMedida { get; set; }
			public decimal? ValorRegalia { get; set; }
		}

		#endregion

		#region ObtenerFiltroCampoMinaPorGeografia

		public static IEnumerable<ObtenerFiltroCampoMinaPorGeografiaResult> ObtenerFiltroCampoMinaPorGeografia(this TransparenciaDB dataConnection, string @IdRegion, string @IdDpto, string @IdMunicipio)
		{
			return dataConnection.QueryProc<ObtenerFiltroCampoMinaPorGeografiaResult>("[dbo].[ObtenerFiltroCampoMinaPorGeografia]",
				new DataParameter("@IdRegion", @IdRegion, LinqToDB.DataType.VarChar),
				new DataParameter("@IdDpto", @IdDpto, LinqToDB.DataType.VarChar),
				new DataParameter("@IdMunicipio", @IdMunicipio, LinqToDB.DataType.VarChar));
		}

		public partial class ObtenerFiltroCampoMinaPorGeografiaResult
		{
			public string value { get; set; }
			public string name { get; set; }
		}

		#endregion

		#region ObtenerFiscalizacionesFichaPorFiltros

		public static IEnumerable<ObtenerFiscalizacionesFichaPorFiltrosResult> ObtenerFiscalizacionesFichaPorFiltros(this TransparenciaDB dataConnection, string @IdRegion, string @IdDpto, string @IdMunicipio, string @IdRecurso, string @periodosList, int? @IdTipoFiscalizacion, string @TextoBusqueda, string @IdTipoRecurso, int? @IdEtapaCampoMina)
		{
			return dataConnection.QueryProc<ObtenerFiscalizacionesFichaPorFiltrosResult>("[dbo].[ObtenerFiscalizacionesFichaPorFiltros]",
				new DataParameter("@IdRegion", @IdRegion, LinqToDB.DataType.VarChar),
				new DataParameter("@IdDpto", @IdDpto, LinqToDB.DataType.VarChar),
				new DataParameter("@IdMunicipio", @IdMunicipio, LinqToDB.DataType.VarChar),
				new DataParameter("@IdRecurso", @IdRecurso, LinqToDB.DataType.VarChar),
				new DataParameter("@periodosList", @periodosList, LinqToDB.DataType.VarChar),
				new DataParameter("@IdTipoFiscalizacion", @IdTipoFiscalizacion, LinqToDB.DataType.Int32),
				new DataParameter("@TextoBusqueda", @TextoBusqueda, LinqToDB.DataType.NVarChar),
				new DataParameter("@IdTipoRecurso", @IdTipoRecurso, LinqToDB.DataType.VarChar),
				new DataParameter("@IdEtapaCampoMina", @IdEtapaCampoMina, LinqToDB.DataType.Int32));
		}

		public partial class ObtenerFiscalizacionesFichaPorFiltrosResult
		{
			public string NombreCampoMina { get; set; }
			public string IdFiscalizacion { get; set; }
			public DateTime? FechaActividad { get; set; }
			public string recurso { get; set; }
			public char? CodigoTipoRecurso { get; set; }
			public string Actividad { get; set; }
			public string Observacion { get; set; }
		}

		#endregion

		#region ObtenerFiscalizacionPorBusquedaTextoCompuesta

		public static IEnumerable<ObtenerFiscalizacionPorBusquedaTextoCompuestaResult> ObtenerFiscalizacionPorBusquedaTextoCompuesta(this TransparenciaDB dataConnection, string @TextoBusqueda, string @periodosList)
		{
			return dataConnection.QueryProc<ObtenerFiscalizacionPorBusquedaTextoCompuestaResult>("[dbo].[ObtenerFiscalizacionPorBusquedaTextoCompuesta]",
				new DataParameter("@TextoBusqueda", @TextoBusqueda, LinqToDB.DataType.VarChar),
				new DataParameter("@periodosList", @periodosList, LinqToDB.DataType.VarChar));
		}

		public partial class ObtenerFiscalizacionPorBusquedaTextoCompuestaResult
		{
			public string IdRegion { get; set; }
			public string IdDepartamento { get; set; }
			public string IdMunicipio { get; set; }
			public string NombreRegion { get; set; }
			public string NombreDepartamento { get; set; }
			public string NombreMunicipio { get; set; }
			public string TextoCompuesto { get; set; }
			public string NombreRecurso { get; set; }
			public int AñoFiscalizacion { get; set; }
			public int? Fiscalizaciones { get; set; }
		}

		#endregion

		#region ObtenerFiscalizacionPorDepartamentoPorFiltros

		public static IEnumerable<ObtenerFiscalizacionPorDepartamentoPorFiltrosResult> ObtenerFiscalizacionPorDepartamentoPorFiltros(this TransparenciaDB dataConnection, string @IdRegion, string @IdDpto, string @IdMunicipio, string @IdRecurso, string @IdCampoOMina, string @periodosList, SqlGeography @CuadradoVisualIntersectar, int? @IdTipoFiscalizacion)
		{
			return dataConnection.QueryProc<ObtenerFiscalizacionPorDepartamentoPorFiltrosResult>("[dbo].[ObtenerFiscalizacionPorDepartamentoPorFiltros]",
				new DataParameter("@IdRegion", @IdRegion, LinqToDB.DataType.VarChar),
				new DataParameter("@IdDpto", @IdDpto, LinqToDB.DataType.VarChar),
				new DataParameter("@IdMunicipio", @IdMunicipio, LinqToDB.DataType.VarChar),
				new DataParameter("@IdRecurso", @IdRecurso, LinqToDB.DataType.VarChar),
				new DataParameter("@IdCampoOMina", @IdCampoOMina, LinqToDB.DataType.NVarChar),
				new DataParameter("@periodosList", @periodosList, LinqToDB.DataType.VarChar),
				new DataParameter("@CuadradoVisualIntersectar", @CuadradoVisualIntersectar, LinqToDB.DataType.Udt),
				new DataParameter("@IdTipoFiscalizacion", @IdTipoFiscalizacion, LinqToDB.DataType.Int32));
		}

		public partial class ObtenerFiscalizacionPorDepartamentoPorFiltrosResult
		{
			public string IdEntidad { get; set; }
			public string NombreEntidad { get; set; }
			public string Url { get; set; }
			public int AñoFiscalizacion { get; set; }
			public int? Fiscalizaciones { get; set; }
		}

		#endregion

		#region ObtenerFiscalizacionPorDepartamentoPorFiltrosV2

		public static IEnumerable<ObtenerFiscalizacionPorDepartamentoPorFiltrosV2Result> ObtenerFiscalizacionPorDepartamentoPorFiltrosV2(this TransparenciaDB dataConnection, string @IdRegion, string @IdDpto, string @IdMunicipio, string @IdRecurso, string @IdCampoOMina, int? @AñoLiquidado, SqlGeography @CuadradoVisualIntersectar, int? @IdTipoFiscalizacion, string @IdTipoRecurso, int? @IdEtapaCampoMina)
		{
			return dataConnection.QueryProc<ObtenerFiscalizacionPorDepartamentoPorFiltrosV2Result>("[dbo].[ObtenerFiscalizacionPorDepartamentoPorFiltrosV2]",
				new DataParameter("@IdRegion", @IdRegion, LinqToDB.DataType.VarChar),
				new DataParameter("@IdDpto", @IdDpto, LinqToDB.DataType.VarChar),
				new DataParameter("@IdMunicipio", @IdMunicipio, LinqToDB.DataType.VarChar),
				new DataParameter("@IdRecurso", @IdRecurso, LinqToDB.DataType.VarChar),
				new DataParameter("@IdCampoOMina", @IdCampoOMina, LinqToDB.DataType.NVarChar),
				new DataParameter("@AñoLiquidado", @AñoLiquidado, LinqToDB.DataType.Int32),
				new DataParameter("@CuadradoVisualIntersectar", @CuadradoVisualIntersectar, LinqToDB.DataType.Udt),
				new DataParameter("@IdTipoFiscalizacion", @IdTipoFiscalizacion, LinqToDB.DataType.Int32),
				new DataParameter("@IdTipoRecurso", @IdTipoRecurso, LinqToDB.DataType.VarChar),
				new DataParameter("@IdEtapaCampoMina", @IdEtapaCampoMina, LinqToDB.DataType.Int32));
		}

		public partial class ObtenerFiscalizacionPorDepartamentoPorFiltrosV2Result
		{
			public string IdEntidad { get; set; }
			public string NombreEntidad { get; set; }
			public string Url { get; set; }
			public int? TotalCamposMinas { get; set; }
			public int? TotalFiscalizaciones { get; set; }
			public decimal? Porcentaje { get; set; }
		}

		#endregion

		#region ObtenerFiscalizacionPorMunicipioPorFiltros

		public static IEnumerable<ObtenerFiscalizacionPorMunicipioPorFiltrosResult> ObtenerFiscalizacionPorMunicipioPorFiltros(this TransparenciaDB dataConnection, string @IdRegion, string @IdDpto, string @IdMunicipio, string @IdRecurso, string @IdCampoOMina, string @periodosList, SqlGeography @CuadradoVisualIntersectar, int? @IdTipoFiscalizacion)
		{
			return dataConnection.QueryProc<ObtenerFiscalizacionPorMunicipioPorFiltrosResult>("[dbo].[ObtenerFiscalizacionPorMunicipioPorFiltros]",
				new DataParameter("@IdRegion", @IdRegion, LinqToDB.DataType.VarChar),
				new DataParameter("@IdDpto", @IdDpto, LinqToDB.DataType.VarChar),
				new DataParameter("@IdMunicipio", @IdMunicipio, LinqToDB.DataType.VarChar),
				new DataParameter("@IdRecurso", @IdRecurso, LinqToDB.DataType.VarChar),
				new DataParameter("@IdCampoOMina", @IdCampoOMina, LinqToDB.DataType.NVarChar),
				new DataParameter("@periodosList", @periodosList, LinqToDB.DataType.VarChar),
				new DataParameter("@CuadradoVisualIntersectar", @CuadradoVisualIntersectar, LinqToDB.DataType.Udt),
				new DataParameter("@IdTipoFiscalizacion", @IdTipoFiscalizacion, LinqToDB.DataType.Int32));
		}

		public partial class ObtenerFiscalizacionPorMunicipioPorFiltrosResult
		{
			public string IdEntidad { get; set; }
			public string NombreEntidad { get; set; }
			public string Url { get; set; }
			public int AñoFiscalizacion { get; set; }
			public int? Fiscalizaciones { get; set; }
		}

		#endregion

		#region ObtenerFiscalizacionPorMunicipioPorFiltrosV2

		public static IEnumerable<ObtenerFiscalizacionPorMunicipioPorFiltrosV2Result> ObtenerFiscalizacionPorMunicipioPorFiltrosV2(this TransparenciaDB dataConnection, string @IdRegion, string @IdDpto, string @IdMunicipio, string @IdRecurso, string @IdCampoOMina, int? @AñoLiquidado, SqlGeography @CuadradoVisualIntersectar, int? @IdTipoFiscalizacion, string @IdTipoRecurso, int? @IdEtapaCampoMina)
		{
			return dataConnection.QueryProc<ObtenerFiscalizacionPorMunicipioPorFiltrosV2Result>("[dbo].[ObtenerFiscalizacionPorMunicipioPorFiltrosV2]",
				new DataParameter("@IdRegion", @IdRegion, LinqToDB.DataType.VarChar),
				new DataParameter("@IdDpto", @IdDpto, LinqToDB.DataType.VarChar),
				new DataParameter("@IdMunicipio", @IdMunicipio, LinqToDB.DataType.VarChar),
				new DataParameter("@IdRecurso", @IdRecurso, LinqToDB.DataType.VarChar),
				new DataParameter("@IdCampoOMina", @IdCampoOMina, LinqToDB.DataType.NVarChar),
				new DataParameter("@AñoLiquidado", @AñoLiquidado, LinqToDB.DataType.Int32),
				new DataParameter("@CuadradoVisualIntersectar", @CuadradoVisualIntersectar, LinqToDB.DataType.Udt),
				new DataParameter("@IdTipoFiscalizacion", @IdTipoFiscalizacion, LinqToDB.DataType.Int32),
				new DataParameter("@IdTipoRecurso", @IdTipoRecurso, LinqToDB.DataType.VarChar),
				new DataParameter("@IdEtapaCampoMina", @IdEtapaCampoMina, LinqToDB.DataType.Int32));
		}

		public partial class ObtenerFiscalizacionPorMunicipioPorFiltrosV2Result
		{
			public string IdEntidad { get; set; }
			public string NombreEntidad { get; set; }
			public string Url { get; set; }
			public int? TotalCamposMinas { get; set; }
			public int? TotalFiscalizaciones { get; set; }
			public decimal? Porcentaje { get; set; }
		}

		#endregion

		#region ObtenerFiscalizacionPorRegionPorFiltros

		public static IEnumerable<ObtenerFiscalizacionPorRegionPorFiltrosResult> ObtenerFiscalizacionPorRegionPorFiltros(this TransparenciaDB dataConnection, string @IdRegion, string @IdDpto, string @IdMunicipio, string @IdRecurso, string @IdCampoOMina, string @periodosList, SqlGeography @CuadradoVisualIntersectar, int? @IdTipoFiscalizacion)
		{
			return dataConnection.QueryProc<ObtenerFiscalizacionPorRegionPorFiltrosResult>("[dbo].[ObtenerFiscalizacionPorRegionPorFiltros]",
				new DataParameter("@IdRegion", @IdRegion, LinqToDB.DataType.VarChar),
				new DataParameter("@IdDpto", @IdDpto, LinqToDB.DataType.VarChar),
				new DataParameter("@IdMunicipio", @IdMunicipio, LinqToDB.DataType.VarChar),
				new DataParameter("@IdRecurso", @IdRecurso, LinqToDB.DataType.VarChar),
				new DataParameter("@IdCampoOMina", @IdCampoOMina, LinqToDB.DataType.NVarChar),
				new DataParameter("@periodosList", @periodosList, LinqToDB.DataType.VarChar),
				new DataParameter("@CuadradoVisualIntersectar", @CuadradoVisualIntersectar, LinqToDB.DataType.Udt),
				new DataParameter("@IdTipoFiscalizacion", @IdTipoFiscalizacion, LinqToDB.DataType.Int32));
		}

		public partial class ObtenerFiscalizacionPorRegionPorFiltrosResult
		{
			public string IdEntidad { get; set; }
			public string NombreEntidad { get; set; }
			public string Url { get; set; }
			public int? AñoFiscalizacion { get; set; }
			public int? Fiscalizaciones { get; set; }
		}

		#endregion

		#region ObtenerFiscalizacionPorRegionPorFiltrosV2

		public static IEnumerable<ObtenerFiscalizacionPorRegionPorFiltrosV2Result> ObtenerFiscalizacionPorRegionPorFiltrosV2(this TransparenciaDB dataConnection, string @IdRegion, string @IdDpto, string @IdMunicipio, string @IdRecurso, string @IdCampoOMina, int? @AñoLiquidado, SqlGeography @CuadradoVisualIntersectar, int? @IdTipoFiscalizacion, string @IdTipoRecurso, int? @IdEtapaCampoMina)
		{
			return dataConnection.QueryProc<ObtenerFiscalizacionPorRegionPorFiltrosV2Result>("[dbo].[ObtenerFiscalizacionPorRegionPorFiltrosV2]",
				new DataParameter("@IdRegion", @IdRegion, LinqToDB.DataType.VarChar),
				new DataParameter("@IdDpto", @IdDpto, LinqToDB.DataType.VarChar),
				new DataParameter("@IdMunicipio", @IdMunicipio, LinqToDB.DataType.VarChar),
				new DataParameter("@IdRecurso", @IdRecurso, LinqToDB.DataType.VarChar),
				new DataParameter("@IdCampoOMina", @IdCampoOMina, LinqToDB.DataType.NVarChar),
				new DataParameter("@AñoLiquidado", @AñoLiquidado, LinqToDB.DataType.Int32),
				new DataParameter("@CuadradoVisualIntersectar", @CuadradoVisualIntersectar, LinqToDB.DataType.Udt),
				new DataParameter("@IdTipoFiscalizacion", @IdTipoFiscalizacion, LinqToDB.DataType.Int32),
				new DataParameter("@IdTipoRecurso", @IdTipoRecurso, LinqToDB.DataType.VarChar),
				new DataParameter("@IdEtapaCampoMina", @IdEtapaCampoMina, LinqToDB.DataType.Int32));
		}

		public partial class ObtenerFiscalizacionPorRegionPorFiltrosV2Result
		{
			public string IdEntidad { get; set; }
			public string NombreEntidad { get; set; }
			public string Url { get; set; }
			public int? TotalCamposMinas { get; set; }
			public int? TotalFiscalizaciones { get; set; }
			public decimal? Porcentaje { get; set; }
		}

		#endregion

		#region ObtenerFiscalizacionPorTipoActividad

		public static IEnumerable<ObtenerFiscalizacionPorTipoActividadResult> ObtenerFiscalizacionPorTipoActividad(this TransparenciaDB dataConnection, int? @Periodo, string @IdTipoRecurso)
		{
			return dataConnection.QueryProc<ObtenerFiscalizacionPorTipoActividadResult>("[dbo].[ObtenerFiscalizacionPorTipoActividad]",
				new DataParameter("@Periodo", @Periodo, LinqToDB.DataType.Int32),
				new DataParameter("@IdTipoRecurso", @IdTipoRecurso, LinqToDB.DataType.VarChar));
		}

		public partial class ObtenerFiscalizacionPorTipoActividadResult
		{
			public string TipoActividad { get; set; }
			public int? Campos { get; set; }
			public int? Total { get; set; }
			public string Id { get; set; }
		}

		#endregion

		#region ObtenerFiscalizacionPorTipoRecurso

		public static IEnumerable<ObtenerFiscalizacionPorTipoRecursoResult> ObtenerFiscalizacionPorTipoRecurso(this TransparenciaDB dataConnection, int? @Periodo, string @IdTipoRecurso)
		{
			return dataConnection.QueryProc<ObtenerFiscalizacionPorTipoRecursoResult>("[dbo].[ObtenerFiscalizacionPorTipoRecurso]",
				new DataParameter("@Periodo", @Periodo, LinqToDB.DataType.Int32),
				new DataParameter("@IdTipoRecurso", @IdTipoRecurso, LinqToDB.DataType.VarChar));
		}

		public partial class ObtenerFiscalizacionPorTipoRecursoResult
		{
			public string Tipo { get; set; }
			public int? Campos { get; set; }
		}

		#endregion

		#region ObtenerFotosPorEstados

		public static IEnumerable<ObtenerFotosPorEstadosResult> ObtenerFotosPorEstados(this TransparenciaDB dataConnection, int? @IDESTADO, int? @NUMEROPAGINA, int? @REGPORPAGINA, ref int? @TOTALREGISTROS)
		{
			var ret = dataConnection.QueryProc<ObtenerFotosPorEstadosResult>("[dbo].[ObtenerFotosPorEstados]",
				new DataParameter("@IDESTADO", @IDESTADO, LinqToDB.DataType.Int32),
				new DataParameter("@NUMEROPAGINA", @NUMEROPAGINA, LinqToDB.DataType.Int32),
				new DataParameter("@REGPORPAGINA", @REGPORPAGINA, LinqToDB.DataType.Int32),
				new DataParameter("@TOTALREGISTROS", @TOTALREGISTROS, LinqToDB.DataType.Int32) { Direction = ParameterDirection.InputOutput }).ToList();

			@TOTALREGISTROS = Converter.ChangeTypeTo<int?>(((IDbDataParameter)dataConnection.Command.Parameters["@TOTALREGISTROS"]).Value);

			return ret;
		}

		public partial class ObtenerFotosPorEstadosResult
		{
			public long? NUMBER { get; set; }
			public string Descripcion { get; set; }
			public string RutaFotoGrande { get; set; }
			public string RutaFotoPequeno { get; set; }
			public int IdFotoUsuario { get; set; }
			public DateTime Fecha { get; set; }
			public string IdDepartamento { get; set; }
			public string IdMunicipio { get; set; }
			public int IdProyecto { get; set; }
			public string NombreProyecto { get; set; }
			public int IdUsuario { get; set; }
			public string Nombre { get; set; }
			public string NombreMunicipio { get; set; }
			public string NombreDepartamento { get; set; }
		}

		#endregion

		#region ObtenerIdProyectoPorBpin

		public static IEnumerable<ObtenerIdProyectoPorBpinResult> ObtenerIdProyectoPorBpin(this TransparenciaDB dataConnection, string @BPIN)
		{
			return dataConnection.QueryProc<ObtenerIdProyectoPorBpinResult>("[dbo].[ObtenerIdProyectoPorBpin]",
				new DataParameter("@BPIN", @BPIN, LinqToDB.DataType.VarChar));
		}

		public partial class ObtenerIdProyectoPorBpinResult
		{
			public int? ReturnValue { get; set; }
		}

		#endregion

		#region ObtenerInformacionContrato

		public static IEnumerable<ObtenerInformacionContratoResult> ObtenerInformacionContrato(this TransparenciaDB dataConnection, string @CODIGOCONTRATO)
		{
			return dataConnection.QueryProc<ObtenerInformacionContratoResult>("[dbo].[ObtenerInformacionContrato]",
				new DataParameter("@CODIGOCONTRATO", @CODIGOCONTRATO, LinqToDB.DataType.VarChar));
		}

		public partial class ObtenerInformacionContratoResult
		{
			public long? NUMBER { get; set; }
			public int? Anio { get; set; }
			public string UnidadCompra { get; set; }
			public string EstadoProceso { get; set; }
			public string CodigoContrato { get; set; }
			public string CodigoProceso { get; set; }
			public string tipodocumento { get; set; }
			public string numerodocumento { get; set; }
			public string Contratista { get; set; }
			public string DocURL { get; set; }
			public string UrlResumenAdjudicacion { get; set; }
			public string UrlInvitados { get; set; }
			public DateTime? FechaIncioPublicacionProceso { get; set; }
			public int? OfertaPeriodoDuracion { get; set; }
			public DateTime? FechaPublicacion { get; set; }
			public DateTime? FechaInicioContrato { get; set; }
			public DateTime? FechaFinContrato { get; set; }
			public long? ValorContrato { get; set; }
			public string MetodoContratacion { get; set; }
			public string CategoriaContratacion { get; set; }
			public DateTime? FCH_INICIO_PUBLICACION { get; set; }
			public DateTime? FCH_FIN_PUBLICACION { get; set; }
			public DateTime? FCH_ESTIMADA_ADJUDICACION { get; set; }
			public string DescripcionContrato { get; set; }
			public string DescripcionProceso { get; set; }
			public int COVID19 { get; set; }
		}

		#endregion

		#region ObtenerInformacionContratosCancelados

		public static IEnumerable<VwContratosCancelado> ObtenerInformacionContratosCancelados(this TransparenciaDB dataConnection)
		{
			return dataConnection.QueryProc<VwContratosCancelado>("[dbo].[ObtenerInformacionContratosCancelados]");
		}

		#endregion

		#region ObtenerInformacionContratosPorFiltros

		public static IEnumerable<ObtenerInformacionContratosPorFiltrosResult> ObtenerInformacionContratosPorFiltros(this TransparenciaDB dataConnection, int? @ANNIO, string @NUMERODOCUMENTO, string @NOMBRE, int? @NUMEROPAGINA, int? @REGPORPAGINA, int? @IDPROYECTO, int? @IDPROGRAMA, int? @COVID19, string @NOMBREPROCESO, string @NOMBREENTIDAD, ref int? @TOTALREGISTROS)
		{
			var ret = dataConnection.QueryProc<ObtenerInformacionContratosPorFiltrosResult>("[dbo].[ObtenerInformacionContratosPorFiltros]",
				new DataParameter("@ANNIO", @ANNIO, LinqToDB.DataType.Int32),
				new DataParameter("@NUMERODOCUMENTO", @NUMERODOCUMENTO, LinqToDB.DataType.VarChar),
				new DataParameter("@NOMBRE", @NOMBRE, LinqToDB.DataType.VarChar),
				new DataParameter("@NUMEROPAGINA", @NUMEROPAGINA, LinqToDB.DataType.Int32),
				new DataParameter("@REGPORPAGINA", @REGPORPAGINA, LinqToDB.DataType.Int32),
				new DataParameter("@IDPROYECTO", @IDPROYECTO, LinqToDB.DataType.Int32),
				new DataParameter("@IDPROGRAMA", @IDPROGRAMA, LinqToDB.DataType.Int32),
				new DataParameter("@COVID19", @COVID19, LinqToDB.DataType.Int32),
				new DataParameter("@NOMBREPROCESO", @NOMBREPROCESO, LinqToDB.DataType.VarChar),
				new DataParameter("@NOMBREENTIDAD", @NOMBREENTIDAD, LinqToDB.DataType.VarChar),
				new DataParameter("@TOTALREGISTROS", @TOTALREGISTROS, LinqToDB.DataType.Int32) { Direction = ParameterDirection.InputOutput }).ToList();

			@TOTALREGISTROS = Converter.ChangeTypeTo<int?>(((IDbDataParameter)dataConnection.Command.Parameters["@TOTALREGISTROS"]).Value);

			return ret;
		}

		public partial class ObtenerInformacionContratosPorFiltrosResult
		{
			public long? NUMBER { get; set; }
			public int? Anio { get; set; }
			public string UnidadCompra { get; set; }
			public string EstadoProceso { get; set; }
			public string CodigoContrato { get; set; }
			public string CodigoProceso { get; set; }
			public string tipodocumento { get; set; }
			public string numerodocumento { get; set; }
			public string Contratista { get; set; }
			public string DocURL { get; set; }
			public string UrlResumenAdjudicacion { get; set; }
			public string UrlInvitados { get; set; }
			public DateTime? FechaFirmaContrato { get; set; }
			public int? OfertaPeriodoDuracion { get; set; }
			public DateTime? FechaPublicacion { get; set; }
			public DateTime? FechaInicioContrato { get; set; }
			public DateTime? FechaFinContrato { get; set; }
			public long? ValorContrato { get; set; }
			public string MetodoContratacion { get; set; }
			public string CategoriaContratacion { get; set; }
			public DateTime? FCH_INICIO_PUBLICACION { get; set; }
			public DateTime? FCH_FIN_PUBLICACION { get; set; }
			public DateTime? FCH_ESTIMADA_ADJUDICACION { get; set; }
			public string DescripcionContrato { get; set; }
			public string DescripcionProceso { get; set; }
			public int COVID19 { get; set; }
		}

		#endregion

		#region ObtenerInformacionContratosRPPorFiltros

		public static IEnumerable<ObtenerInformacionContratosRPPorFiltrosResult> ObtenerInformacionContratosRPPorFiltros(this TransparenciaDB dataConnection, int? @ANNIO, string @NOMBRE, int? @NUMEROPAGINA, int? @REGPORPAGINA, string @NOMBREPROCESO, string @NOMBREENTIDAD, ref int? @TOTALREGISTROS)
		{
			var ret = dataConnection.QueryProc<ObtenerInformacionContratosRPPorFiltrosResult>("[dbo].[ObtenerInformacionContratosRPPorFiltros]",
				new DataParameter("@ANNIO", @ANNIO, LinqToDB.DataType.Int32),
				new DataParameter("@NOMBRE", @NOMBRE, LinqToDB.DataType.VarChar),
				new DataParameter("@NUMEROPAGINA", @NUMEROPAGINA, LinqToDB.DataType.Int32),
				new DataParameter("@REGPORPAGINA", @REGPORPAGINA, LinqToDB.DataType.Int32),
				new DataParameter("@NOMBREPROCESO", @NOMBREPROCESO, LinqToDB.DataType.VarChar),
				new DataParameter("@NOMBREENTIDAD", @NOMBREENTIDAD, LinqToDB.DataType.VarChar),
				new DataParameter("@TOTALREGISTROS", @TOTALREGISTROS, LinqToDB.DataType.Int32) { Direction = ParameterDirection.InputOutput }).ToList();

			@TOTALREGISTROS = Converter.ChangeTypeTo<int?>(((IDbDataParameter)dataConnection.Command.Parameters["@TOTALREGISTROS"]).Value);

			return ret;
		}

		public partial class ObtenerInformacionContratosRPPorFiltrosResult
		{
			public long? NUMBER { get; set; }
			public int? Anio { get; set; }
			public string UnidadCompra { get; set; }
			public string EstadoProceso { get; set; }
			public string CodigoContrato { get; set; }
			public string CodigoProceso { get; set; }
			public string tipodocumento { get; set; }
			public string numerodocumento { get; set; }
			public string Contratista { get; set; }
			public string DocURL { get; set; }
			public string UrlResumenAdjudicacion { get; set; }
			public string UrlInvitados { get; set; }
			public DateTime? FechaFirmaContrato { get; set; }
			public int? OfertaPeriodoDuracion { get; set; }
			public DateTime? FechaPublicacion { get; set; }
			public DateTime? FechaInicioContrato { get; set; }
			public DateTime? FechaFinContrato { get; set; }
			public long? ValorContrato { get; set; }
			public string MetodoContratacion { get; set; }
			public string CategoriaContratacion { get; set; }
			public DateTime? FCH_INICIO_PUBLICACION { get; set; }
			public DateTime? FCH_FIN_PUBLICACION { get; set; }
			public DateTime? FCH_ESTIMADA_ADJUDICACION { get; set; }
			public string DescripcionContrato { get; set; }
			public string DescripcionProceso { get; set; }
			public int COVID19 { get; set; }
			public short ORDEN { get; set; }
		}

		#endregion

		#region ObtenerListaDepartamentosHome

		public static IEnumerable<ObtenerListaDepartamentosHomeResult> ObtenerListaDepartamentosHome(this TransparenciaDB dataConnection)
		{
			return dataConnection.QueryProc<ObtenerListaDepartamentosHomeResult>("[dbo].[ObtenerListaDepartamentosHome]");
		}

		public partial class ObtenerListaDepartamentosHomeResult
		{
			public string IdDepartamento { get; set; }
			public string NombreDepartamento { get; set; }
			public decimal? VlrTotalProyectoFuenteRegalias { get; set; }
			public decimal? VlrTotalProyectoTodasLasFuentes { get; set; }
			public int? projectNumber { get; set; }
			public string UrlImagePequenia { get; set; }
		}

		#endregion

		#region ObtenerListadoDeCamposOProyectos

		public static IEnumerable<ObtenerListadoDeCamposOProyectosResult> ObtenerListadoDeCamposOProyectos(this TransparenciaDB dataConnection)
		{
			return dataConnection.QueryProc<ObtenerListadoDeCamposOProyectosResult>("[dbo].[ObtenerListadoDeCamposOProyectos]");
		}

		public partial class ObtenerListadoDeCamposOProyectosResult
		{
			public string value { get; set; }
			public string name { get; set; }
		}

		#endregion

		#region ObtenerListadoDeCamposOProyectosFiscalizacion

		public static IEnumerable<ObtenerListadoDeCamposOProyectosFiscalizacionResult> ObtenerListadoDeCamposOProyectosFiscalizacion(this TransparenciaDB dataConnection)
		{
			return dataConnection.QueryProc<ObtenerListadoDeCamposOProyectosFiscalizacionResult>("[dbo].[ObtenerListadoDeCamposOProyectosFiscalizacion]");
		}

		public partial class ObtenerListadoDeCamposOProyectosFiscalizacionResult
		{
			public string value { get; set; }
			public string name { get; set; }
			public char TipoRecurso { get; set; }
		}

		#endregion

		#region ObtenerListadoDeCamposOProyectosFiscalizacionPorFiltro

		public static IEnumerable<ObtenerListadoDeCamposOProyectosFiscalizacionPorFiltroResult> ObtenerListadoDeCamposOProyectosFiscalizacionPorFiltro(this TransparenciaDB dataConnection, string @NombreCampoOProyecto, string @IdTipoRecurso)
		{
			return dataConnection.QueryProc<ObtenerListadoDeCamposOProyectosFiscalizacionPorFiltroResult>("[dbo].[ObtenerListadoDeCamposOProyectosFiscalizacionPorFiltro]",
				new DataParameter("@NombreCampoOProyecto", @NombreCampoOProyecto, LinqToDB.DataType.VarChar),
				new DataParameter("@IdTipoRecurso", @IdTipoRecurso, LinqToDB.DataType.VarChar));
		}

		public partial class ObtenerListadoDeCamposOProyectosFiscalizacionPorFiltroResult
		{
			public string IdCampoOProyecto { get; set; }
			public string NombreCampoOProyecto { get; set; }
			public char TipoRecurso { get; set; }
		}

		#endregion

		#region ObtenerListadoDeEstadoJuridicoCamposOProyectos

		public static IEnumerable<ObtenerListadoDeEstadoJuridicoCamposOProyectosResult> ObtenerListadoDeEstadoJuridicoCamposOProyectos(this TransparenciaDB dataConnection)
		{
			return dataConnection.QueryProc<ObtenerListadoDeEstadoJuridicoCamposOProyectosResult>("[dbo].[ObtenerListadoDeEstadoJuridicoCamposOProyectos]");
		}

		public partial class ObtenerListadoDeEstadoJuridicoCamposOProyectosResult
		{
			public string IdEstadoJuridicoCampoOProyecto { get; set; }
			public string NombreEstadoJuridicoCampoOProyecto { get; set; }
			public string IdTipoCampoOProyecto { get; set; }
		}

		#endregion

		#region ObtenerListadoDeEtapaCamposOProyectos

		public static IEnumerable<ObtenerListadoDeEtapaCamposOProyectosResult> ObtenerListadoDeEtapaCamposOProyectos(this TransparenciaDB dataConnection)
		{
			return dataConnection.QueryProc<ObtenerListadoDeEtapaCamposOProyectosResult>("[dbo].[ObtenerListadoDeEtapaCamposOProyectos]");
		}

		public partial class ObtenerListadoDeEtapaCamposOProyectosResult
		{
			public int IdEtapaCampoOProyecto { get; set; }
			public string NombreEtapaCampoOProyecto { get; set; }
			public string IdTipoCampoOProyecto { get; set; }
		}

		#endregion

		#region ObtenerListadoDeRecursosNaturales

		public static IEnumerable<ObtenerListadoDeRecursosNaturalesResult> ObtenerListadoDeRecursosNaturales(this TransparenciaDB dataConnection)
		{
			return dataConnection.QueryProc<ObtenerListadoDeRecursosNaturalesResult>("[dbo].[ObtenerListadoDeRecursosNaturales]");
		}

		public partial class ObtenerListadoDeRecursosNaturalesResult
		{
			public string value { get; set; }
			public string name { get; set; }
		}

		#endregion

		#region ObtenerListadoDeRecursosNaturalesFiscalizacion

		public static IEnumerable<ObtenerListadoDeRecursosNaturalesFiscalizacionResult> ObtenerListadoDeRecursosNaturalesFiscalizacion(this TransparenciaDB dataConnection)
		{
			return dataConnection.QueryProc<ObtenerListadoDeRecursosNaturalesFiscalizacionResult>("[dbo].[ObtenerListadoDeRecursosNaturalesFiscalizacion]");
		}

		public partial class ObtenerListadoDeRecursosNaturalesFiscalizacionResult
		{
			public string value { get; set; }
			public string name { get; set; }
			public char IdTipoRecursoNatural { get; set; }
		}

		#endregion

		#region ObtenerListadoDeTiposDeFiscalizacion

		public static IEnumerable<ObtenerListadoDeTiposDeFiscalizacionResult> ObtenerListadoDeTiposDeFiscalizacion(this TransparenciaDB dataConnection)
		{
			return dataConnection.QueryProc<ObtenerListadoDeTiposDeFiscalizacionResult>("[dbo].[ObtenerListadoDeTiposDeFiscalizacion]");
		}

		public partial class ObtenerListadoDeTiposDeFiscalizacionResult
		{
			public char value { get; set; }
			public string name { get; set; }
		}

		#endregion

		#region ObtenerListadoDeTiposRecursosNaturales

		public static IEnumerable<ObtenerListadoDeTiposRecursosNaturalesResult> ObtenerListadoDeTiposRecursosNaturales(this TransparenciaDB dataConnection)
		{
			return dataConnection.QueryProc<ObtenerListadoDeTiposRecursosNaturalesResult>("[dbo].[ObtenerListadoDeTiposRecursosNaturales]");
		}

		public partial class ObtenerListadoDeTiposRecursosNaturalesResult
		{
			public char value { get; set; }
			public string name { get; set; }
		}

		#endregion

		#region ObtenerListadoPeriodosParaRecursos

		public static IEnumerable<ObtenerListadoPeriodosParaRecursosResult> ObtenerListadoPeriodosParaRecursos(this TransparenciaDB dataConnection)
		{
			return dataConnection.QueryProc<ObtenerListadoPeriodosParaRecursosResult>("[dbo].[ObtenerListadoPeriodosParaRecursos]");
		}

		public partial class ObtenerListadoPeriodosParaRecursosResult
		{
			public int? value { get; set; }
			public int? name { get; set; }
		}

		#endregion

		#region ObtenerListadoTiposDeRecursosFuente

		public static IEnumerable<ObtenerListadoTiposDeRecursosFuenteResult> ObtenerListadoTiposDeRecursosFuente(this TransparenciaDB dataConnection)
		{
			return dataConnection.QueryProc<ObtenerListadoTiposDeRecursosFuenteResult>("[dbo].[ObtenerListadoTiposDeRecursosFuente]");
		}

		public partial class ObtenerListadoTiposDeRecursosFuenteResult
		{
			public int value { get; set; }
			public string name { get; set; }
		}

		#endregion

		#region ObtenerListaMunicipiosHome

		public static IEnumerable<ObtenerListaMunicipiosHomeResult> ObtenerListaMunicipiosHome(this TransparenciaDB dataConnection)
		{
			return dataConnection.QueryProc<ObtenerListaMunicipiosHomeResult>("[dbo].[ObtenerListaMunicipiosHome]");
		}

		public partial class ObtenerListaMunicipiosHomeResult
		{
			public string IdMunicipio { get; set; }
			public string NombreMunicipio { get; set; }
			public decimal? VlrTotalProyectoFuenteRegalias { get; set; }
			public decimal? VlrTotalProyectoTodasLasFuentes { get; set; }
			public int? projectNumber { get; set; }
			public string UrlImagePequenia { get; set; }
		}

		#endregion

		#region ObtenerMunicipiosPorFiltrosGeograficos

		public static IEnumerable<ObtenerMunicipiosPorFiltrosGeograficosResult> ObtenerMunicipiosPorFiltrosGeograficos(this TransparenciaDB dataConnection, string @IdRegion, string @IdDpto, string @IdMunicipio, SqlGeography @CuadradoVisualIntersectar)
		{
			return dataConnection.QueryProc<ObtenerMunicipiosPorFiltrosGeograficosResult>("[dbo].[ObtenerMunicipiosPorFiltrosGeograficos]",
				new DataParameter("@IdRegion", @IdRegion, LinqToDB.DataType.VarChar),
				new DataParameter("@IdDpto", @IdDpto, LinqToDB.DataType.VarChar),
				new DataParameter("@IdMunicipio", @IdMunicipio, LinqToDB.DataType.VarChar),
				new DataParameter("@CuadradoVisualIntersectar", @CuadradoVisualIntersectar, LinqToDB.DataType.Udt));
		}

		public partial class ObtenerMunicipiosPorFiltrosGeograficosResult
		{
			public string IdEntidad { get; set; }
			public string NombreEntidad { get; set; }
		}

		#endregion

		#region ObtenerNombresActoresPorRolYProyecto

		public static IEnumerable<ObtenerNombresActoresPorRolYProyectoResult> ObtenerNombresActoresPorRolYProyecto(this TransparenciaDB dataConnection, int? @IdRol, int? @IdProyecto)
		{
			return dataConnection.QueryProc<ObtenerNombresActoresPorRolYProyectoResult>("[dbo].[ObtenerNombresActoresPorRolYProyecto]",
				new DataParameter("@IdRol", @IdRol, LinqToDB.DataType.Int32),
				new DataParameter("@IdProyecto", @IdProyecto, LinqToDB.DataType.Int32));
		}

		public partial class ObtenerNombresActoresPorRolYProyectoResult
		{
			public string NombreActor { get; set; }
			public string Rol { get; set; }
		}

		#endregion

		#region ObtenerNombresGeografiasBeneficiadasProyecto

		public static IEnumerable<ObtenerNombresGeografiasBeneficiadasProyectoResult> ObtenerNombresGeografiasBeneficiadasProyecto(this TransparenciaDB dataConnection, int? @IdProyecto)
		{
			return dataConnection.QueryProc<ObtenerNombresGeografiasBeneficiadasProyectoResult>("[dbo].[ObtenerNombresGeografiasBeneficiadasProyecto]",
				new DataParameter("@IdProyecto", @IdProyecto, LinqToDB.DataType.Int32));
		}

		public partial class ObtenerNombresGeografiasBeneficiadasProyectoResult
		{
			public string NombreEntidad { get; set; }
			public string IdDepartamento { get; set; }
			public string IdMunicipio { get; set; }
			public string Tipo { get; set; }
		}

		#endregion

		#region ObtenerPinesFiscalizacionPorBusquedaDeTexto

		public static IEnumerable<ObtenerPinesFiscalizacionPorBusquedaDeTextoResult> ObtenerPinesFiscalizacionPorBusquedaDeTexto(this TransparenciaDB dataConnection, string @TextoBusqueda, string @periodosList)
		{
			return dataConnection.QueryProc<ObtenerPinesFiscalizacionPorBusquedaDeTextoResult>("[dbo].[ObtenerPinesFiscalizacionPorBusquedaDeTexto]",
				new DataParameter("@TextoBusqueda", @TextoBusqueda, LinqToDB.DataType.VarChar),
				new DataParameter("@periodosList", @periodosList, LinqToDB.DataType.VarChar));
		}

		public partial class ObtenerPinesFiscalizacionPorBusquedaDeTextoResult
		{
			public string IdRegion { get; set; }
			public string IdDepartamento { get; set; }
			public string IdMunicipio { get; set; }
			public decimal Latitud { get; set; }
			public decimal Longitud { get; set; }
			public string NombreRegion { get; set; }
			public string NombreDepartamento { get; set; }
			public string NombreMunicipio { get; set; }
			public string TextoCompuesto { get; set; }
			public string NombreRecurso { get; set; }
			public int AñoFiscalizacion { get; set; }
			public int? Fiscalizaciones { get; set; }
		}

		#endregion

		#region ObtenerPinesFiscalizacionPorBusquedaDeTextoV2

		public static IEnumerable<ObtenerPinesFiscalizacionPorBusquedaDeTextoV2Result> ObtenerPinesFiscalizacionPorBusquedaDeTextoV2(this TransparenciaDB dataConnection, string @TextoBusqueda, int? @AñoLiquidado)
		{
			return dataConnection.QueryProc<ObtenerPinesFiscalizacionPorBusquedaDeTextoV2Result>("[dbo].[ObtenerPinesFiscalizacionPorBusquedaDeTextoV2]",
				new DataParameter("@TextoBusqueda", @TextoBusqueda, LinqToDB.DataType.VarChar),
				new DataParameter("@AñoLiquidado", @AñoLiquidado, LinqToDB.DataType.Int32));
		}

		public partial class ObtenerPinesFiscalizacionPorBusquedaDeTextoV2Result
		{
			public string IdRegion { get; set; }
			public string IdDepartamento { get; set; }
			public string IdMunicipio { get; set; }
			public decimal? Latitud { get; set; }
			public decimal? Longitud { get; set; }
			public string NombreRegion { get; set; }
			public string NombreDepartamento { get; set; }
			public string NombreMunicipio { get; set; }
			public string TextoCompuesto { get; set; }
			public int? TotalCamposMinas { get; set; }
			public int? TotalFiscalizaciones { get; set; }
		}

		#endregion

		#region ObtenerPinesFiscalizacionPorDepartamentoFiltros

		public static IEnumerable<ObtenerPinesFiscalizacionPorDepartamentoFiltrosResult> ObtenerPinesFiscalizacionPorDepartamentoFiltros(this TransparenciaDB dataConnection, string @IdRegion, string @IdDpto, string @IdMunicipio, string @IdRecurso, string @IdCampoOMina, string @periodosList, SqlGeography @CuadradoVisualIntersectar, int? @IdTipoFiscalizacion)
		{
			return dataConnection.QueryProc<ObtenerPinesFiscalizacionPorDepartamentoFiltrosResult>("[dbo].[ObtenerPinesFiscalizacionPorDepartamentoFiltros]",
				new DataParameter("@IdRegion", @IdRegion, LinqToDB.DataType.VarChar),
				new DataParameter("@IdDpto", @IdDpto, LinqToDB.DataType.VarChar),
				new DataParameter("@IdMunicipio", @IdMunicipio, LinqToDB.DataType.VarChar),
				new DataParameter("@IdRecurso", @IdRecurso, LinqToDB.DataType.VarChar),
				new DataParameter("@IdCampoOMina", @IdCampoOMina, LinqToDB.DataType.NVarChar),
				new DataParameter("@periodosList", @periodosList, LinqToDB.DataType.VarChar),
				new DataParameter("@CuadradoVisualIntersectar", @CuadradoVisualIntersectar, LinqToDB.DataType.Udt),
				new DataParameter("@IdTipoFiscalizacion", @IdTipoFiscalizacion, LinqToDB.DataType.Int32));
		}

		public partial class ObtenerPinesFiscalizacionPorDepartamentoFiltrosResult
		{
			public string IdEntidad { get; set; }
			public string NombreEntidad { get; set; }
			public decimal? Latitud { get; set; }
			public decimal? Longitud { get; set; }
			public string Url { get; set; }
			public int AñoFiscalizacion { get; set; }
			public int? Fiscalizaciones { get; set; }
		}

		#endregion

		#region ObtenerPinesFiscalizacionPorDepartamentoFiltrosV2

		public static IEnumerable<ObtenerPinesFiscalizacionPorDepartamentoFiltrosV2Result> ObtenerPinesFiscalizacionPorDepartamentoFiltrosV2(this TransparenciaDB dataConnection, string @IdRegion, string @IdDpto, string @IdMunicipio, string @IdRecurso, string @IdCampoOMina, int? @AñoLiquidado, SqlGeography @CuadradoVisualIntersectar, int? @IdTipoFiscalizacion, string @IdTipoRecurso, int? @IdEtapaCampoMina)
		{
			return dataConnection.QueryProc<ObtenerPinesFiscalizacionPorDepartamentoFiltrosV2Result>("[dbo].[ObtenerPinesFiscalizacionPorDepartamentoFiltrosV2]",
				new DataParameter("@IdRegion", @IdRegion, LinqToDB.DataType.VarChar),
				new DataParameter("@IdDpto", @IdDpto, LinqToDB.DataType.VarChar),
				new DataParameter("@IdMunicipio", @IdMunicipio, LinqToDB.DataType.VarChar),
				new DataParameter("@IdRecurso", @IdRecurso, LinqToDB.DataType.VarChar),
				new DataParameter("@IdCampoOMina", @IdCampoOMina, LinqToDB.DataType.NVarChar),
				new DataParameter("@AñoLiquidado", @AñoLiquidado, LinqToDB.DataType.Int32),
				new DataParameter("@CuadradoVisualIntersectar", @CuadradoVisualIntersectar, LinqToDB.DataType.Udt),
				new DataParameter("@IdTipoFiscalizacion", @IdTipoFiscalizacion, LinqToDB.DataType.Int32),
				new DataParameter("@IdTipoRecurso", @IdTipoRecurso, LinqToDB.DataType.VarChar),
				new DataParameter("@IdEtapaCampoMina", @IdEtapaCampoMina, LinqToDB.DataType.Int32));
		}

		public partial class ObtenerPinesFiscalizacionPorDepartamentoFiltrosV2Result
		{
			public string IdEntidad { get; set; }
			public string NombreEntidad { get; set; }
			public decimal? Latitud { get; set; }
			public decimal? Longitud { get; set; }
			public string Url { get; set; }
			public int? TotalCamposMinas { get; set; }
			public int? TotalFiscalizaciones { get; set; }
			public decimal? Porcentaje { get; set; }
		}

		#endregion

		#region ObtenerPinesFiscalizacionPorMunicipioPorFiltros

		public static IEnumerable<ObtenerPinesFiscalizacionPorMunicipioPorFiltrosResult> ObtenerPinesFiscalizacionPorMunicipioPorFiltros(this TransparenciaDB dataConnection, string @IdRegion, string @IdDpto, string @IdMunicipio, string @IdRecurso, string @IdCampoOMina, string @periodosList, SqlGeography @CuadradoVisualIntersectar, int? @IdTipoFiscalizacion)
		{
			return dataConnection.QueryProc<ObtenerPinesFiscalizacionPorMunicipioPorFiltrosResult>("[dbo].[ObtenerPinesFiscalizacionPorMunicipioPorFiltros]",
				new DataParameter("@IdRegion", @IdRegion, LinqToDB.DataType.VarChar),
				new DataParameter("@IdDpto", @IdDpto, LinqToDB.DataType.VarChar),
				new DataParameter("@IdMunicipio", @IdMunicipio, LinqToDB.DataType.VarChar),
				new DataParameter("@IdRecurso", @IdRecurso, LinqToDB.DataType.VarChar),
				new DataParameter("@IdCampoOMina", @IdCampoOMina, LinqToDB.DataType.NVarChar),
				new DataParameter("@periodosList", @periodosList, LinqToDB.DataType.VarChar),
				new DataParameter("@CuadradoVisualIntersectar", @CuadradoVisualIntersectar, LinqToDB.DataType.Udt),
				new DataParameter("@IdTipoFiscalizacion", @IdTipoFiscalizacion, LinqToDB.DataType.Int32));
		}

		public partial class ObtenerPinesFiscalizacionPorMunicipioPorFiltrosResult
		{
			public string IdEntidad { get; set; }
			public string NombreEntidad { get; set; }
			public decimal Latitud { get; set; }
			public decimal Longitud { get; set; }
			public string Url { get; set; }
			public int AñoFiscalizacion { get; set; }
			public int? Fiscalizaciones { get; set; }
		}

		#endregion

		#region ObtenerPinesFiscalizacionPorMunicipioPorFiltrosV2

		public static IEnumerable<ObtenerPinesFiscalizacionPorMunicipioPorFiltrosV2Result> ObtenerPinesFiscalizacionPorMunicipioPorFiltrosV2(this TransparenciaDB dataConnection, string @IdRegion, string @IdDpto, string @IdMunicipio, string @IdRecurso, string @IdCampoOMina, int? @AñoLiquidado, SqlGeography @CuadradoVisualIntersectar, int? @IdTipoFiscalizacion, string @IdTipoRecurso, int? @IdEtapaCampoMina)
		{
			return dataConnection.QueryProc<ObtenerPinesFiscalizacionPorMunicipioPorFiltrosV2Result>("[dbo].[ObtenerPinesFiscalizacionPorMunicipioPorFiltrosV2]",
				new DataParameter("@IdRegion", @IdRegion, LinqToDB.DataType.VarChar),
				new DataParameter("@IdDpto", @IdDpto, LinqToDB.DataType.VarChar),
				new DataParameter("@IdMunicipio", @IdMunicipio, LinqToDB.DataType.VarChar),
				new DataParameter("@IdRecurso", @IdRecurso, LinqToDB.DataType.VarChar),
				new DataParameter("@IdCampoOMina", @IdCampoOMina, LinqToDB.DataType.NVarChar),
				new DataParameter("@AñoLiquidado", @AñoLiquidado, LinqToDB.DataType.Int32),
				new DataParameter("@CuadradoVisualIntersectar", @CuadradoVisualIntersectar, LinqToDB.DataType.Udt),
				new DataParameter("@IdTipoFiscalizacion", @IdTipoFiscalizacion, LinqToDB.DataType.Int32),
				new DataParameter("@IdTipoRecurso", @IdTipoRecurso, LinqToDB.DataType.VarChar),
				new DataParameter("@IdEtapaCampoMina", @IdEtapaCampoMina, LinqToDB.DataType.Int32));
		}

		public partial class ObtenerPinesFiscalizacionPorMunicipioPorFiltrosV2Result
		{
			public string IdEntidad { get; set; }
			public string NombreEntidad { get; set; }
			public decimal? Latitud { get; set; }
			public decimal? Longitud { get; set; }
			public string Url { get; set; }
			public int? TotalCamposMinas { get; set; }
			public int? TotalFiscalizaciones { get; set; }
			public decimal? Porcentaje { get; set; }
		}

		#endregion

		#region ObtenerPinesFiscalizacionPorRegionFiltros

		public static IEnumerable<ObtenerPinesFiscalizacionPorRegionFiltrosResult> ObtenerPinesFiscalizacionPorRegionFiltros(this TransparenciaDB dataConnection, string @IdRegion, string @IdDpto, string @IdMunicipio, string @IdRecurso, string @IdCampoOMina, string @periodosList, SqlGeography @CuadradoVisualIntersectar, int? @IdTipoFiscalizacion)
		{
			return dataConnection.QueryProc<ObtenerPinesFiscalizacionPorRegionFiltrosResult>("[dbo].[ObtenerPinesFiscalizacionPorRegionFiltros]",
				new DataParameter("@IdRegion", @IdRegion, LinqToDB.DataType.VarChar),
				new DataParameter("@IdDpto", @IdDpto, LinqToDB.DataType.VarChar),
				new DataParameter("@IdMunicipio", @IdMunicipio, LinqToDB.DataType.VarChar),
				new DataParameter("@IdRecurso", @IdRecurso, LinqToDB.DataType.VarChar),
				new DataParameter("@IdCampoOMina", @IdCampoOMina, LinqToDB.DataType.NVarChar),
				new DataParameter("@periodosList", @periodosList, LinqToDB.DataType.VarChar),
				new DataParameter("@CuadradoVisualIntersectar", @CuadradoVisualIntersectar, LinqToDB.DataType.Udt),
				new DataParameter("@IdTipoFiscalizacion", @IdTipoFiscalizacion, LinqToDB.DataType.Int32));
		}

		public partial class ObtenerPinesFiscalizacionPorRegionFiltrosResult
		{
			public string IdEntidad { get; set; }
			public string NombreEntidad { get; set; }
			public decimal? Latitud { get; set; }
			public decimal? Longitud { get; set; }
			public string Url { get; set; }
			public int AñoFiscalizacion { get; set; }
			public int? Fiscalizaciones { get; set; }
		}

		#endregion

		#region ObtenerPinesFiscalizacionPorRegionFiltrosV2

		public static IEnumerable<ObtenerPinesFiscalizacionPorRegionFiltrosV2Result> ObtenerPinesFiscalizacionPorRegionFiltrosV2(this TransparenciaDB dataConnection, string @IdRegion, string @IdDpto, string @IdMunicipio, string @IdRecurso, string @IdCampoOMina, int? @AñoLiquidado, SqlGeography @CuadradoVisualIntersectar, int? @IdTipoFiscalizacion, string @IdTipoRecurso, int? @IdEtapaCampoMina)
		{
			return dataConnection.QueryProc<ObtenerPinesFiscalizacionPorRegionFiltrosV2Result>("[dbo].[ObtenerPinesFiscalizacionPorRegionFiltrosV2]",
				new DataParameter("@IdRegion", @IdRegion, LinqToDB.DataType.VarChar),
				new DataParameter("@IdDpto", @IdDpto, LinqToDB.DataType.VarChar),
				new DataParameter("@IdMunicipio", @IdMunicipio, LinqToDB.DataType.VarChar),
				new DataParameter("@IdRecurso", @IdRecurso, LinqToDB.DataType.VarChar),
				new DataParameter("@IdCampoOMina", @IdCampoOMina, LinqToDB.DataType.NVarChar),
				new DataParameter("@AñoLiquidado", @AñoLiquidado, LinqToDB.DataType.Int32),
				new DataParameter("@CuadradoVisualIntersectar", @CuadradoVisualIntersectar, LinqToDB.DataType.Udt),
				new DataParameter("@IdTipoFiscalizacion", @IdTipoFiscalizacion, LinqToDB.DataType.Int32),
				new DataParameter("@IdTipoRecurso", @IdTipoRecurso, LinqToDB.DataType.VarChar),
				new DataParameter("@IdEtapaCampoMina", @IdEtapaCampoMina, LinqToDB.DataType.Int32));
		}

		public partial class ObtenerPinesFiscalizacionPorRegionFiltrosV2Result
		{
			public string IdEntidad { get; set; }
			public string NombreEntidad { get; set; }
			public decimal? Latitud { get; set; }
			public decimal? Longitud { get; set; }
			public string Url { get; set; }
			public int? TotalCamposMinas { get; set; }
			public int? TotalFiscalizaciones { get; set; }
			public decimal? Porcentaje { get; set; }
		}

		#endregion

		#region ObtenerPinesProduccionPorBusquedaDeTexto

		public static IEnumerable<ObtenerPinesProduccionPorBusquedaDeTextoResult> ObtenerPinesProduccionPorBusquedaDeTexto(this TransparenciaDB dataConnection, string @TextoBusqueda, string @periodosList)
		{
			return dataConnection.QueryProc<ObtenerPinesProduccionPorBusquedaDeTextoResult>("[dbo].[ObtenerPinesProduccionPorBusquedaDeTexto]",
				new DataParameter("@TextoBusqueda", @TextoBusqueda, LinqToDB.DataType.VarChar),
				new DataParameter("@periodosList", @periodosList, LinqToDB.DataType.VarChar));
		}

		public partial class ObtenerPinesProduccionPorBusquedaDeTextoResult
		{
			public string IdRegion { get; set; }
			public string IdDepartamento { get; set; }
			public string IdMunicipio { get; set; }
			public decimal Latitud { get; set; }
			public decimal Longitud { get; set; }
			public string NombreRegion { get; set; }
			public string NombreDepartamento { get; set; }
			public string NombreMunicipio { get; set; }
			public string TextoCompuesto { get; set; }
			public string NombreRecurso { get; set; }
			public decimal? Cantidad { get; set; }
			public string UnidadDeMedida { get; set; }
		}

		#endregion

		#region ObtenerPinesProduccionPorDepartamentoFiltros

		public static IEnumerable<ObtenerPinesProduccionPorDepartamentoFiltrosResult> ObtenerPinesProduccionPorDepartamentoFiltros(this TransparenciaDB dataConnection, string @IdRegion, string @IdDpto, string @IdMunicipio, string @IdRecurso, string @IdCampoOMina, string @periodosList, SqlGeography @CuadradoVisualIntersectar)
		{
			return dataConnection.QueryProc<ObtenerPinesProduccionPorDepartamentoFiltrosResult>("[dbo].[ObtenerPinesProduccionPorDepartamentoFiltros]",
				new DataParameter("@IdRegion", @IdRegion, LinqToDB.DataType.VarChar),
				new DataParameter("@IdDpto", @IdDpto, LinqToDB.DataType.VarChar),
				new DataParameter("@IdMunicipio", @IdMunicipio, LinqToDB.DataType.VarChar),
				new DataParameter("@IdRecurso", @IdRecurso, LinqToDB.DataType.VarChar),
				new DataParameter("@IdCampoOMina", @IdCampoOMina, LinqToDB.DataType.NVarChar),
				new DataParameter("@periodosList", @periodosList, LinqToDB.DataType.VarChar),
				new DataParameter("@CuadradoVisualIntersectar", @CuadradoVisualIntersectar, LinqToDB.DataType.Udt));
		}

		public partial class ObtenerPinesProduccionPorDepartamentoFiltrosResult
		{
			public string IdEntidad { get; set; }
			public string NombreEntidad { get; set; }
			public decimal? Latitud { get; set; }
			public decimal? Longitud { get; set; }
			public string Url { get; set; }
			public string NombreRecurso { get; set; }
			public decimal? Cantidad { get; set; }
			public string UnidadDeMedida { get; set; }
		}

		#endregion

		#region ObtenerPinesProduccionPorMunicipioPorFiltros

		public static IEnumerable<ObtenerPinesProduccionPorMunicipioPorFiltrosResult> ObtenerPinesProduccionPorMunicipioPorFiltros(this TransparenciaDB dataConnection, string @IdRegion, string @IdDpto, string @IdMunicipio, string @IdRecurso, string @IdCampoOMina, string @periodosList, SqlGeography @CuadradoVisualIntersectar)
		{
			return dataConnection.QueryProc<ObtenerPinesProduccionPorMunicipioPorFiltrosResult>("[dbo].[ObtenerPinesProduccionPorMunicipioPorFiltros]",
				new DataParameter("@IdRegion", @IdRegion, LinqToDB.DataType.VarChar),
				new DataParameter("@IdDpto", @IdDpto, LinqToDB.DataType.VarChar),
				new DataParameter("@IdMunicipio", @IdMunicipio, LinqToDB.DataType.VarChar),
				new DataParameter("@IdRecurso", @IdRecurso, LinqToDB.DataType.VarChar),
				new DataParameter("@IdCampoOMina", @IdCampoOMina, LinqToDB.DataType.NVarChar),
				new DataParameter("@periodosList", @periodosList, LinqToDB.DataType.VarChar),
				new DataParameter("@CuadradoVisualIntersectar", @CuadradoVisualIntersectar, LinqToDB.DataType.Udt));
		}

		public partial class ObtenerPinesProduccionPorMunicipioPorFiltrosResult
		{
			public string IdEntidad { get; set; }
			public string NombreEntidad { get; set; }
			public decimal Latitud { get; set; }
			public decimal Longitud { get; set; }
			public string Url { get; set; }
			public string NombreRecurso { get; set; }
			public decimal? Cantidad { get; set; }
			public string UnidadDeMedida { get; set; }
		}

		#endregion

		#region ObtenerPinesProduccionPorRegionFiltros

		public static IEnumerable<ObtenerPinesProduccionPorRegionFiltrosResult> ObtenerPinesProduccionPorRegionFiltros(this TransparenciaDB dataConnection, string @IdRegion, string @IdDpto, string @IdMunicipio, string @IdRecurso, string @IdCampoOMina, string @periodosList, SqlGeography @CuadradoVisualIntersectar)
		{
			return dataConnection.QueryProc<ObtenerPinesProduccionPorRegionFiltrosResult>("[dbo].[ObtenerPinesProduccionPorRegionFiltros]",
				new DataParameter("@IdRegion", @IdRegion, LinqToDB.DataType.VarChar),
				new DataParameter("@IdDpto", @IdDpto, LinqToDB.DataType.VarChar),
				new DataParameter("@IdMunicipio", @IdMunicipio, LinqToDB.DataType.VarChar),
				new DataParameter("@IdRecurso", @IdRecurso, LinqToDB.DataType.VarChar),
				new DataParameter("@IdCampoOMina", @IdCampoOMina, LinqToDB.DataType.NVarChar),
				new DataParameter("@periodosList", @periodosList, LinqToDB.DataType.VarChar),
				new DataParameter("@CuadradoVisualIntersectar", @CuadradoVisualIntersectar, LinqToDB.DataType.Udt));
		}

		public partial class ObtenerPinesProduccionPorRegionFiltrosResult
		{
			public string IdEntidad { get; set; }
			public string NombreEntidad { get; set; }
			public decimal? Latitud { get; set; }
			public decimal? Longitud { get; set; }
			public string Url { get; set; }
			public string NombreRecurso { get; set; }
			public decimal? Cantidad { get; set; }
			public string UnidadDeMedida { get; set; }
		}

		#endregion

		#region ObtenerPresupuestoPorDepartamentoPorFiltros

		public static IEnumerable<ObtenerPresupuestoPorDepartamentoPorFiltrosResult> ObtenerPresupuestoPorDepartamentoPorFiltros(this TransparenciaDB dataConnection, string @IdRegion, string @IdDpto, string @IdMunicipio, int? @IdTipoRecurso, string @periodosList)
		{
			return dataConnection.QueryProc<ObtenerPresupuestoPorDepartamentoPorFiltrosResult>("[dbo].[ObtenerPresupuestoPorDepartamentoPorFiltros]",
				new DataParameter("@IdRegion", @IdRegion, LinqToDB.DataType.VarChar),
				new DataParameter("@IdDpto", @IdDpto, LinqToDB.DataType.VarChar),
				new DataParameter("@IdMunicipio", @IdMunicipio, LinqToDB.DataType.VarChar),
				new DataParameter("@IdTipoRecurso", @IdTipoRecurso, LinqToDB.DataType.Int32),
				new DataParameter("@periodosList", @periodosList, LinqToDB.DataType.VarChar));
		}

		public partial class ObtenerPresupuestoPorDepartamentoPorFiltrosResult
		{
			public int? PeriodoPresupuestado { get; set; }
			public string IdDepartamento { get; set; }
			public string NombreDepartamento { get; set; }
			public decimal? ValorPresupuesto { get; set; }
		}

		#endregion

		#region ObtenerPresupuestoPorMunicipioPorFiltros

		public static IEnumerable<ObtenerPresupuestoPorMunicipioPorFiltrosResult> ObtenerPresupuestoPorMunicipioPorFiltros(this TransparenciaDB dataConnection, string @IdRegion, string @IdDpto, string @IdMunicipio, int? @IdTipoRecurso, string @periodosList)
		{
			return dataConnection.QueryProc<ObtenerPresupuestoPorMunicipioPorFiltrosResult>("[dbo].[ObtenerPresupuestoPorMunicipioPorFiltros]",
				new DataParameter("@IdRegion", @IdRegion, LinqToDB.DataType.VarChar),
				new DataParameter("@IdDpto", @IdDpto, LinqToDB.DataType.VarChar),
				new DataParameter("@IdMunicipio", @IdMunicipio, LinqToDB.DataType.VarChar),
				new DataParameter("@IdTipoRecurso", @IdTipoRecurso, LinqToDB.DataType.Int32),
				new DataParameter("@periodosList", @periodosList, LinqToDB.DataType.VarChar));
		}

		public partial class ObtenerPresupuestoPorMunicipioPorFiltrosResult
		{
			public int? PeriodoPresupuestado { get; set; }
			public string IdMunicipio { get; set; }
			public string NombreMunicipio { get; set; }
			public decimal? ValorPresupuesto { get; set; }
		}

		#endregion

		#region ObtenerPresupuestoPorRegionPorFiltros

		public static IEnumerable<ObtenerPresupuestoPorRegionPorFiltrosResult> ObtenerPresupuestoPorRegionPorFiltros(this TransparenciaDB dataConnection, string @IdRegion, string @IdDpto, string @IdMunicipio, int? @IdTipoRecurso, string @periodosList)
		{
			return dataConnection.QueryProc<ObtenerPresupuestoPorRegionPorFiltrosResult>("[dbo].[ObtenerPresupuestoPorRegionPorFiltros]",
				new DataParameter("@IdRegion", @IdRegion, LinqToDB.DataType.VarChar),
				new DataParameter("@IdDpto", @IdDpto, LinqToDB.DataType.VarChar),
				new DataParameter("@IdMunicipio", @IdMunicipio, LinqToDB.DataType.VarChar),
				new DataParameter("@IdTipoRecurso", @IdTipoRecurso, LinqToDB.DataType.Int32),
				new DataParameter("@periodosList", @periodosList, LinqToDB.DataType.VarChar));
		}

		public partial class ObtenerPresupuestoPorRegionPorFiltrosResult
		{
			public int? PeriodoPresupuestado { get; set; }
			public string IdRegion { get; set; }
			public string NombreRegion { get; set; }
			public decimal? ValorPresupuesto { get; set; }
		}

		#endregion

		#region ObtenerProduccionPorBusquedaDeTexto

		public static IEnumerable<ObtenerProduccionPorBusquedaDeTextoResult> ObtenerProduccionPorBusquedaDeTexto(this TransparenciaDB dataConnection, string @TextoBusqueda, string @periodosList)
		{
			return dataConnection.QueryProc<ObtenerProduccionPorBusquedaDeTextoResult>("[dbo].[ObtenerProduccionPorBusquedaDeTexto]",
				new DataParameter("@TextoBusqueda", @TextoBusqueda, LinqToDB.DataType.VarChar),
				new DataParameter("@periodosList", @periodosList, LinqToDB.DataType.VarChar));
		}

		public partial class ObtenerProduccionPorBusquedaDeTextoResult
		{
			public string IdRegion { get; set; }
			public string IdDepartamento { get; set; }
			public string IdMunicipio { get; set; }
			public string NombreRegion { get; set; }
			public string NombreDepartamento { get; set; }
			public string NombreMunicipio { get; set; }
			public string TextoCompuesto { get; set; }
			public string NombreRecurso { get; set; }
			public decimal? Cantidad { get; set; }
			public string UnidadDeMedida { get; set; }
		}

		#endregion

		#region ObtenerProduccionPorDepartamentoPorFiltros

		public static IEnumerable<ObtenerProduccionPorDepartamentoPorFiltrosResult> ObtenerProduccionPorDepartamentoPorFiltros(this TransparenciaDB dataConnection, string @IdRegion, string @IdDpto, string @IdMunicipio, string @IdRecurso, string @IdCampoOMina, string @periodosList, SqlGeography @CuadradoVisualIntersectar)
		{
			return dataConnection.QueryProc<ObtenerProduccionPorDepartamentoPorFiltrosResult>("[dbo].[ObtenerProduccionPorDepartamentoPorFiltros]",
				new DataParameter("@IdRegion", @IdRegion, LinqToDB.DataType.VarChar),
				new DataParameter("@IdDpto", @IdDpto, LinqToDB.DataType.VarChar),
				new DataParameter("@IdMunicipio", @IdMunicipio, LinqToDB.DataType.VarChar),
				new DataParameter("@IdRecurso", @IdRecurso, LinqToDB.DataType.VarChar),
				new DataParameter("@IdCampoOMina", @IdCampoOMina, LinqToDB.DataType.NVarChar),
				new DataParameter("@periodosList", @periodosList, LinqToDB.DataType.VarChar),
				new DataParameter("@CuadradoVisualIntersectar", @CuadradoVisualIntersectar, LinqToDB.DataType.Udt));
		}

		public partial class ObtenerProduccionPorDepartamentoPorFiltrosResult
		{
			public string IdEntidad { get; set; }
			public string NombreEntidad { get; set; }
			public string Url { get; set; }
			public string NombreRecurso { get; set; }
			public decimal? Cantidad { get; set; }
			public string UnidadDeMedida { get; set; }
		}

		#endregion

		#region ObtenerProduccionPorMunicipioPorFiltros

		public static IEnumerable<ObtenerProduccionPorMunicipioPorFiltrosResult> ObtenerProduccionPorMunicipioPorFiltros(this TransparenciaDB dataConnection, string @IdRegion, string @IdDpto, string @IdMunicipio, string @IdRecurso, string @IdCampoOMina, string @periodosList, SqlGeography @CuadradoVisualIntersectar)
		{
			return dataConnection.QueryProc<ObtenerProduccionPorMunicipioPorFiltrosResult>("[dbo].[ObtenerProduccionPorMunicipioPorFiltros]",
				new DataParameter("@IdRegion", @IdRegion, LinqToDB.DataType.VarChar),
				new DataParameter("@IdDpto", @IdDpto, LinqToDB.DataType.VarChar),
				new DataParameter("@IdMunicipio", @IdMunicipio, LinqToDB.DataType.VarChar),
				new DataParameter("@IdRecurso", @IdRecurso, LinqToDB.DataType.VarChar),
				new DataParameter("@IdCampoOMina", @IdCampoOMina, LinqToDB.DataType.NVarChar),
				new DataParameter("@periodosList", @periodosList, LinqToDB.DataType.VarChar),
				new DataParameter("@CuadradoVisualIntersectar", @CuadradoVisualIntersectar, LinqToDB.DataType.Udt));
		}

		public partial class ObtenerProduccionPorMunicipioPorFiltrosResult
		{
			public string IdEntidad { get; set; }
			public string NombreEntidad { get; set; }
			public string Url { get; set; }
			public string NombreRecurso { get; set; }
			public decimal? Cantidad { get; set; }
			public string UnidadDeMedida { get; set; }
		}

		#endregion

		#region ObtenerProduccionPorRegionPorFiltros

		public static IEnumerable<ObtenerProduccionPorRegionPorFiltrosResult> ObtenerProduccionPorRegionPorFiltros(this TransparenciaDB dataConnection, string @IdRegion, string @IdDpto, string @IdMunicipio, string @IdRecurso, string @IdCampoOMina, string @periodosList, SqlGeography @CuadradoVisualIntersectar)
		{
			return dataConnection.QueryProc<ObtenerProduccionPorRegionPorFiltrosResult>("[dbo].[ObtenerProduccionPorRegionPorFiltros]",
				new DataParameter("@IdRegion", @IdRegion, LinqToDB.DataType.VarChar),
				new DataParameter("@IdDpto", @IdDpto, LinqToDB.DataType.VarChar),
				new DataParameter("@IdMunicipio", @IdMunicipio, LinqToDB.DataType.VarChar),
				new DataParameter("@IdRecurso", @IdRecurso, LinqToDB.DataType.VarChar),
				new DataParameter("@IdCampoOMina", @IdCampoOMina, LinqToDB.DataType.NVarChar),
				new DataParameter("@periodosList", @periodosList, LinqToDB.DataType.VarChar),
				new DataParameter("@CuadradoVisualIntersectar", @CuadradoVisualIntersectar, LinqToDB.DataType.Udt));
		}

		public partial class ObtenerProduccionPorRegionPorFiltrosResult
		{
			public string IdEntidad { get; set; }
			public string NombreEntidad { get; set; }
			public string Url { get; set; }
			public string NombreRecurso { get; set; }
			public decimal? Cantidad { get; set; }
			public string UnidadDeMedida { get; set; }
		}

		#endregion

		#region ObtenerRecursosFiscalizacionPorGeografia

		public static IEnumerable<ObtenerRecursosFiscalizacionPorGeografiaResult> ObtenerRecursosFiscalizacionPorGeografia(this TransparenciaDB dataConnection, string @IdRegion, string @IdDpto, string @IdMunicipio, string @IdTipoRecurso, string @IdCampoOMina)
		{
			return dataConnection.QueryProc<ObtenerRecursosFiscalizacionPorGeografiaResult>("[dbo].[ObtenerRecursosFiscalizacionPorGeografia]",
				new DataParameter("@IdRegion", @IdRegion, LinqToDB.DataType.VarChar),
				new DataParameter("@IdDpto", @IdDpto, LinqToDB.DataType.VarChar),
				new DataParameter("@IdMunicipio", @IdMunicipio, LinqToDB.DataType.VarChar),
				new DataParameter("@IdTipoRecurso", @IdTipoRecurso, LinqToDB.DataType.VarChar),
				new DataParameter("@IdCampoOMina", @IdCampoOMina, LinqToDB.DataType.NVarChar));
		}

		public partial class ObtenerRecursosFiscalizacionPorGeografiaResult
		{
			public int AñoLiquidado { get; set; }
			public string IdRecursoNatural { get; set; }
			public string NombreRecursoNatural { get; set; }
			public char IdTipoRecursoNatural { get; set; }
			public string NombreTipoDeRecurso { get; set; }
		}

		#endregion

		#region ObtenerRendimientosDirectasPorDepartamento

		public static IEnumerable<ObtenerRendimientosDirectasPorDepartamentoResult> ObtenerRendimientosDirectasPorDepartamento(this TransparenciaDB dataConnection, string @periodosList, string @IdDepartamento)
		{
			return dataConnection.QueryProc<ObtenerRendimientosDirectasPorDepartamentoResult>("[dbo].[ObtenerRendimientosDirectasPorDepartamento]",
				new DataParameter("@periodosList", @periodosList, LinqToDB.DataType.VarChar),
				new DataParameter("@IdDepartamento", @IdDepartamento, LinqToDB.DataType.VarChar));
		}

		public partial class ObtenerRendimientosDirectasPorDepartamentoResult
		{
			public int Periodo { get; set; }
			public string NombreTipoRecurso { get; set; }
			public decimal? ValorMonto { get; set; }
		}

		#endregion

		#region ObtenerRendimientosDirectasPorMunicipio

		public static IEnumerable<ObtenerRendimientosDirectasPorMunicipioResult> ObtenerRendimientosDirectasPorMunicipio(this TransparenciaDB dataConnection, string @periodosList, string @IdMunicipio)
		{
			return dataConnection.QueryProc<ObtenerRendimientosDirectasPorMunicipioResult>("[dbo].[ObtenerRendimientosDirectasPorMunicipio]",
				new DataParameter("@periodosList", @periodosList, LinqToDB.DataType.VarChar),
				new DataParameter("@IdMunicipio", @IdMunicipio, LinqToDB.DataType.VarChar));
		}

		public partial class ObtenerRendimientosDirectasPorMunicipioResult
		{
			public int Periodo { get; set; }
			public string NombreTipoRecurso { get; set; }
			public decimal? ValorMonto { get; set; }
		}

		#endregion

		#region ObtenerRendimientosDirectasPorRegion

		public static IEnumerable<ObtenerRendimientosDirectasPorRegionResult> ObtenerRendimientosDirectasPorRegion(this TransparenciaDB dataConnection, string @periodosList, string @IdRegion)
		{
			return dataConnection.QueryProc<ObtenerRendimientosDirectasPorRegionResult>("[dbo].[ObtenerRendimientosDirectasPorRegion]",
				new DataParameter("@periodosList", @periodosList, LinqToDB.DataType.VarChar),
				new DataParameter("@IdRegion", @IdRegion, LinqToDB.DataType.VarChar));
		}

		public partial class ObtenerRendimientosDirectasPorRegionResult
		{
			public int Periodo { get; set; }
			public string NombreTipoRecurso { get; set; }
			public decimal? ValorMonto { get; set; }
		}

		#endregion

		#region ObtenerResumenConsultaFiscalizacionesFichaPorFiltros

		public static IEnumerable<ObtenerResumenConsultaFiscalizacionesFichaPorFiltrosResult> ObtenerResumenConsultaFiscalizacionesFichaPorFiltros(this TransparenciaDB dataConnection, string @IdRegion, string @IdDpto, string @IdMunicipio, string @IdRecurso, int? @AñoLiquidado, int? @IdTipoFiscalizacion, string @TextoBusqueda, string @IdTipoRecurso, int? @IdEtapaCampoMina)
		{
			return dataConnection.QueryProc<ObtenerResumenConsultaFiscalizacionesFichaPorFiltrosResult>("[dbo].[ObtenerResumenConsultaFiscalizacionesFichaPorFiltros]",
				new DataParameter("@IdRegion", @IdRegion, LinqToDB.DataType.VarChar),
				new DataParameter("@IdDpto", @IdDpto, LinqToDB.DataType.VarChar),
				new DataParameter("@IdMunicipio", @IdMunicipio, LinqToDB.DataType.VarChar),
				new DataParameter("@IdRecurso", @IdRecurso, LinqToDB.DataType.VarChar),
				new DataParameter("@AñoLiquidado", @AñoLiquidado, LinqToDB.DataType.Int32),
				new DataParameter("@IdTipoFiscalizacion", @IdTipoFiscalizacion, LinqToDB.DataType.Int32),
				new DataParameter("@TextoBusqueda", @TextoBusqueda, LinqToDB.DataType.NVarChar),
				new DataParameter("@IdTipoRecurso", @IdTipoRecurso, LinqToDB.DataType.VarChar),
				new DataParameter("@IdEtapaCampoMina", @IdEtapaCampoMina, LinqToDB.DataType.Int32));
		}

		public partial class ObtenerResumenConsultaFiscalizacionesFichaPorFiltrosResult
		{
			public int? TotalCamposMinas { get; set; }
			public int? TotalFiscalizaciones { get; set; }
		}

		#endregion

		#region ObtenerSubsidiosxLocalizacion

		public static IEnumerable<ObtenerSubsidiosxLocalizacionResult> ObtenerSubsidiosxLocalizacion(this TransparenciaDB dataConnection)
		{
			return dataConnection.QueryProc<ObtenerSubsidiosxLocalizacionResult>("[dbo].[ObtenerSubsidiosxLocalizacion]");
		}

		public partial class ObtenerSubsidiosxLocalizacionResult
		{
			public string IdSubsidio { get; set; }
			public string IdDepartamento { get; set; }
			public string NombreDepartamento { get; set; }
			public char IdMunicipio { get; set; }
			public char NombreMunicipio { get; set; }
			public char CaracteristicaSubsidio { get; set; }
			public char ClaseSubsidio { get; set; }
			public decimal? ValorSubsidio { get; set; }
			public int? CantidadSubsidio { get; set; }
			public char GeoJson { get; set; }
			public char GeojsonDepto { get; set; }
			public decimal Latitud { get; set; }
			public decimal LONGITUD { get; set; }
			public char PuntoUbicacion { get; set; }
		}

		#endregion

		#region ObtenerTipologiasPorComentario

		public static IEnumerable<ObtenerTipologiasPorComentarioResult> ObtenerTipologiasPorComentario(this TransparenciaDB dataConnection, int? @IDCOMENTARIO)
		{
			return dataConnection.QueryProc<ObtenerTipologiasPorComentarioResult>("[dbo].[ObtenerTipologiasPorComentario]",
				new DataParameter("@IDCOMENTARIO", @IDCOMENTARIO, LinqToDB.DataType.Int32));
		}

		public partial class ObtenerTipologiasPorComentarioResult
		{
			public int IdTipologia { get; set; }
			public string Tipologia { get; set; }
			public int Relacion { get; set; }
		}

		#endregion

		#region ObtenerURLAuditoriaVisiblePorProyecto

		public static IEnumerable<ObtenerURLAuditoriaVisiblePorProyectoResult> ObtenerURLAuditoriaVisiblePorProyecto(this TransparenciaDB dataConnection, int? @IdProyecto)
		{
			return dataConnection.QueryProc<ObtenerURLAuditoriaVisiblePorProyectoResult>("[dbo].[ObtenerURLAuditoriaVisiblePorProyecto]",
				new DataParameter("@IdProyecto", @IdProyecto, LinqToDB.DataType.Int32));
		}

		public partial class ObtenerURLAuditoriaVisiblePorProyectoResult
		{
			public string URLAuditoria { get; set; }
		}

		#endregion

		#region ObtenerValoresConsolidadosContratos

		public static IEnumerable<ObtenerValoresConsolidadosContratosResult> ObtenerValoresConsolidadosContratos(this TransparenciaDB dataConnection)
		{
			return dataConnection.QueryProc<ObtenerValoresConsolidadosContratosResult>("[dbo].[ObtenerValoresConsolidadosContratos]");
		}

		public partial class ObtenerValoresConsolidadosContratosResult
		{
			public int? CantidadProgramas { get; set; }
			public long? ValorContrato { get; set; }
			public long ValorEjecutado { get; set; }
			public int CantidadBeneficiario { get; set; }
		}

		#endregion

		#region ObtenerValoresConsolidadosContratosPorPrograma

		public static IEnumerable<ObtenerValoresConsolidadosContratosPorProgramaResult> ObtenerValoresConsolidadosContratosPorPrograma(this TransparenciaDB dataConnection, int? @IDPROGRAMA)
		{
			return dataConnection.QueryProc<ObtenerValoresConsolidadosContratosPorProgramaResult>("[dbo].[ObtenerValoresConsolidadosContratosPorPrograma]",
				new DataParameter("@IDPROGRAMA", @IDPROGRAMA, LinqToDB.DataType.Int32));
		}

		public partial class ObtenerValoresConsolidadosContratosPorProgramaResult
		{
			public int? CodigoPrograma { get; set; }
			public int? CantidadProgramas { get; set; }
			public long? ValorContrato { get; set; }
			public long ValorEjecutado { get; set; }
			public int CantidadBeneficiario { get; set; }
		}

		#endregion

		#region ObtenerValoresIndicadoresContratos

		public static IEnumerable<ObtenerValoresIndicadoresContratosResult> ObtenerValoresIndicadoresContratos(this TransparenciaDB dataConnection)
		{
			return dataConnection.QueryProc<ObtenerValoresIndicadoresContratosResult>("[dbo].[ObtenerValoresIndicadoresContratos]");
		}

		public partial class ObtenerValoresIndicadoresContratosResult
		{
			public decimal? ValorIndicador { get; set; }
			public decimal? AvanceIndicador { get; set; }
			public decimal? ProcentajeAvance { get; set; }
		}

		#endregion

		#region ObtenerValoresIndicadoresContratosPorPrograma

		public static IEnumerable<ObtenerValoresIndicadoresContratosPorProgramaResult> ObtenerValoresIndicadoresContratosPorPrograma(this TransparenciaDB dataConnection, int? @IDPROGRAMA)
		{
			return dataConnection.QueryProc<ObtenerValoresIndicadoresContratosPorProgramaResult>("[dbo].[ObtenerValoresIndicadoresContratosPorPrograma]",
				new DataParameter("@IDPROGRAMA", @IDPROGRAMA, LinqToDB.DataType.Int32));
		}

		public partial class ObtenerValoresIndicadoresContratosPorProgramaResult
		{
			public decimal? ValorIndicador { get; set; }
			public decimal? AvanceIndicador { get; set; }
			public decimal? ProcentajeAvance { get; set; }
		}

		#endregion

		#region ObtenerValorSubsidioPorDepartamento

		public static IEnumerable<ObtenerValorSubsidioPorDepartamentoResult> ObtenerValorSubsidioPorDepartamento(this TransparenciaDB dataConnection, string @IdSubsidio)
		{
			return dataConnection.QueryProc<ObtenerValorSubsidioPorDepartamentoResult>("[dbo].[ObtenerValorSubsidioPorDepartamento]",
				new DataParameter("@IdSubsidio", @IdSubsidio, LinqToDB.DataType.VarChar));
		}

		public partial class ObtenerValorSubsidioPorDepartamentoResult
		{
			public string NombreDepartamento { get; set; }
			public decimal? ValorSubsidio { get; set; }
			public int? CantidadSubsidio { get; set; }
		}

		#endregion

		#region SpAlterdiagram

		public static int SpAlterdiagram(this TransparenciaDB dataConnection, string @diagramname, int? @owner_id, int? @version, byte[] @definition)
		{
			return dataConnection.ExecuteProc("[dbo].[sp_alterdiagram]",
				new DataParameter("@diagramname", @diagramname, LinqToDB.DataType.NVarChar),
				new DataParameter("@owner_id", @owner_id, LinqToDB.DataType.Int32),
				new DataParameter("@version", @version, LinqToDB.DataType.Int32),
				new DataParameter("@definition", @definition, LinqToDB.DataType.VarBinary));
		}

		#endregion

		#region SpCreatediagram

		public static int SpCreatediagram(this TransparenciaDB dataConnection, string @diagramname, int? @owner_id, int? @version, byte[] @definition)
		{
			return dataConnection.ExecuteProc("[dbo].[sp_creatediagram]",
				new DataParameter("@diagramname", @diagramname, LinqToDB.DataType.NVarChar),
				new DataParameter("@owner_id", @owner_id, LinqToDB.DataType.Int32),
				new DataParameter("@version", @version, LinqToDB.DataType.Int32),
				new DataParameter("@definition", @definition, LinqToDB.DataType.VarBinary));
		}

		#endregion

		#region SpDropdiagram

		public static int SpDropdiagram(this TransparenciaDB dataConnection, string @diagramname, int? @owner_id)
		{
			return dataConnection.ExecuteProc("[dbo].[sp_dropdiagram]",
				new DataParameter("@diagramname", @diagramname, LinqToDB.DataType.NVarChar),
				new DataParameter("@owner_id", @owner_id, LinqToDB.DataType.Int32));
		}

		#endregion

		#region SpHelpdiagramdefinition

		public static IEnumerable<SpHelpdiagramdefinitionResult> SpHelpdiagramdefinition(this TransparenciaDB dataConnection, string @diagramname, int? @owner_id)
		{
			return dataConnection.QueryProc<SpHelpdiagramdefinitionResult>("[dbo].[sp_helpdiagramdefinition]",
				new DataParameter("@diagramname", @diagramname, LinqToDB.DataType.NVarChar),
				new DataParameter("@owner_id", @owner_id, LinqToDB.DataType.Int32));
		}

		public partial class SpHelpdiagramdefinitionResult
		{
			public int? version { get; set; }
			public byte[] definition { get; set; }
		}

		#endregion

		#region SpHelpdiagrams

		public static IEnumerable<SpHelpdiagramsResult> SpHelpdiagrams(this TransparenciaDB dataConnection, string @diagramname, int? @owner_id)
		{
			return dataConnection.QueryProc<SpHelpdiagramsResult>("[dbo].[sp_helpdiagrams]",
				new DataParameter("@diagramname", @diagramname, LinqToDB.DataType.NVarChar),
				new DataParameter("@owner_id", @owner_id, LinqToDB.DataType.Int32));
		}

		public partial class SpHelpdiagramsResult
		{
			public string Database { get; set; }
			public string Name { get; set; }
			public int ID { get; set; }
			public string Owner { get; set; }
			public int OwnerID { get; set; }
		}

		#endregion

		#region SpObtenerCodigosProyectosPorEnteTerritorialSP

		public static IEnumerable<SpObtenerCodigosProyectosPorEnteTerritorialSPResult> SpObtenerCodigosProyectosPorEnteTerritorialSP(this TransparenciaDB dataConnection, string @filtro)
		{
			return dataConnection.QueryProc<SpObtenerCodigosProyectosPorEnteTerritorialSPResult>("[dbo].[sp_ObtenerCodigosProyectosPorEnteTerritorialSP]",
				new DataParameter("@filtro", @filtro, LinqToDB.DataType.VarChar));
		}

		public partial class SpObtenerCodigosProyectosPorEnteTerritorialSPResult
		{
			public int IdProyecto { get; set; }
			public string CodigoBPIN { get; set; }
			public string NombreProyecto { get; set; }
		}

		#endregion

		#region SpObtenerCodigosProyectosPorNombreProyectoSP

		public static IEnumerable<SpObtenerCodigosProyectosPorNombreProyectoSPResult> SpObtenerCodigosProyectosPorNombreProyectoSP(this TransparenciaDB dataConnection, string @filtro)
		{
			return dataConnection.QueryProc<SpObtenerCodigosProyectosPorNombreProyectoSPResult>("[dbo].[sp_ObtenerCodigosProyectosPorNombreProyectoSP]",
				new DataParameter("@filtro", @filtro, LinqToDB.DataType.VarChar));
		}

		public partial class SpObtenerCodigosProyectosPorNombreProyectoSPResult
		{
			public int IdProyecto { get; set; }
			public string CodigoBPIN { get; set; }
			public string NombreProyecto { get; set; }
		}

		#endregion

		#region SpObtenerFiscalizacionPorTipoRecursoPorDepartamentoV2

		public static IEnumerable<SpObtenerFiscalizacionPorTipoRecursoPorDepartamentoV2Result> SpObtenerFiscalizacionPorTipoRecursoPorDepartamentoV2(this TransparenciaDB dataConnection, int? @AñoLiquidado, string @IdTipoRecurso)
		{
			return dataConnection.QueryProc<SpObtenerFiscalizacionPorTipoRecursoPorDepartamentoV2Result>("[dbo].[sp_ObtenerFiscalizacionPorTipoRecursoPorDepartamentoV2]",
				new DataParameter("@AñoLiquidado", @AñoLiquidado, LinqToDB.DataType.Int32),
				new DataParameter("@IdTipoRecurso", @IdTipoRecurso, LinqToDB.DataType.VarChar));
		}

		public partial class SpObtenerFiscalizacionPorTipoRecursoPorDepartamentoV2Result
		{
			public string NombreEntidad { get; set; }
			public int? TotalCamposMinas { get; set; }
			public int? TotalFiscalizaciones { get; set; }
			public decimal? Porcentaje { get; set; }
		}

		#endregion

		#region SpObtenerRecursosFiscalizacionPorDepartamento

		public static IEnumerable<SpObtenerRecursosFiscalizacionPorDepartamentoResult> SpObtenerRecursosFiscalizacionPorDepartamento(this TransparenciaDB dataConnection, string @IdDepartamento, string @IdTipoRecurso, string @IdCampoOMina)
		{
			return dataConnection.QueryProc<SpObtenerRecursosFiscalizacionPorDepartamentoResult>("[dbo].[sp_ObtenerRecursosFiscalizacionPorDepartamento]",
				new DataParameter("@IdDepartamento", @IdDepartamento, LinqToDB.DataType.VarChar),
				new DataParameter("@IdTipoRecurso", @IdTipoRecurso, LinqToDB.DataType.VarChar),
				new DataParameter("@IdCampoOMina", @IdCampoOMina, LinqToDB.DataType.NVarChar));
		}

		public partial class SpObtenerRecursosFiscalizacionPorDepartamentoResult
		{
			public string IdRecursoNatural { get; set; }
			public string NombreRecursoNatural { get; set; }
			public char IdTipoRecursoNatural { get; set; }
			public string NombreTipoDeRecurso { get; set; }
		}

		#endregion

		#region SpObtenerRecursosFiscalizacionPorMunicipio

		public static IEnumerable<SpObtenerRecursosFiscalizacionPorMunicipioResult> SpObtenerRecursosFiscalizacionPorMunicipio(this TransparenciaDB dataConnection, string @IdMunicipio, string @IdTipoRecurso, string @IdCampoOMina)
		{
			return dataConnection.QueryProc<SpObtenerRecursosFiscalizacionPorMunicipioResult>("[dbo].[sp_ObtenerRecursosFiscalizacionPorMunicipio]",
				new DataParameter("@IdMunicipio", @IdMunicipio, LinqToDB.DataType.VarChar),
				new DataParameter("@IdTipoRecurso", @IdTipoRecurso, LinqToDB.DataType.VarChar),
				new DataParameter("@IdCampoOMina", @IdCampoOMina, LinqToDB.DataType.NVarChar));
		}

		public partial class SpObtenerRecursosFiscalizacionPorMunicipioResult
		{
			public string IdRecursoNatural { get; set; }
			public string NombreRecursoNatural { get; set; }
			public char IdTipoRecursoNatural { get; set; }
			public string NombreTipoDeRecurso { get; set; }
		}

		#endregion

		#region SpObtenerRecursosFiscalizacionPorRegion

		public static IEnumerable<SpObtenerRecursosFiscalizacionPorRegionResult> SpObtenerRecursosFiscalizacionPorRegion(this TransparenciaDB dataConnection, string @IdRegion, string @IdTipoRecurso, string @IdCampoOMina)
		{
			return dataConnection.QueryProc<SpObtenerRecursosFiscalizacionPorRegionResult>("[dbo].[sp_ObtenerRecursosFiscalizacionPorRegion]",
				new DataParameter("@IdRegion", @IdRegion, LinqToDB.DataType.VarChar),
				new DataParameter("@IdTipoRecurso", @IdTipoRecurso, LinqToDB.DataType.VarChar),
				new DataParameter("@IdCampoOMina", @IdCampoOMina, LinqToDB.DataType.NVarChar));
		}

		public partial class SpObtenerRecursosFiscalizacionPorRegionResult
		{
			public string IdRecursoNatural { get; set; }
			public string NombreRecursoNatural { get; set; }
			public char IdTipoRecursoNatural { get; set; }
			public string NombreTipoDeRecurso { get; set; }
		}

		#endregion

		#region SpObtenerResumenFiscalizacionPorDepartamento

		public static IEnumerable<SpObtenerResumenFiscalizacionPorDepartamentoResult> SpObtenerResumenFiscalizacionPorDepartamento(this TransparenciaDB dataConnection, string @IdDepartamento, string @IdTipoRecurso, string @IdCampoOMina)
		{
			return dataConnection.QueryProc<SpObtenerResumenFiscalizacionPorDepartamentoResult>("[dbo].[sp_ObtenerResumenFiscalizacionPorDepartamento]",
				new DataParameter("@IdDepartamento", @IdDepartamento, LinqToDB.DataType.VarChar),
				new DataParameter("@IdTipoRecurso", @IdTipoRecurso, LinqToDB.DataType.VarChar),
				new DataParameter("@IdCampoOMina", @IdCampoOMina, LinqToDB.DataType.NVarChar));
		}

		public partial class SpObtenerResumenFiscalizacionPorDepartamentoResult
		{
			public int Periodo { get; set; }
			public string Tipo { get; set; }
			public int? Total { get; set; }
		}

		#endregion

		#region SpObtenerResumenFiscalizacionPorMunicipio

		public static IEnumerable<SpObtenerResumenFiscalizacionPorMunicipioResult> SpObtenerResumenFiscalizacionPorMunicipio(this TransparenciaDB dataConnection, string @IdMunicipio, string @IdTipoRecurso, string @IdCampoOMina)
		{
			return dataConnection.QueryProc<SpObtenerResumenFiscalizacionPorMunicipioResult>("[dbo].[sp_ObtenerResumenFiscalizacionPorMunicipio]",
				new DataParameter("@IdMunicipio", @IdMunicipio, LinqToDB.DataType.VarChar),
				new DataParameter("@IdTipoRecurso", @IdTipoRecurso, LinqToDB.DataType.VarChar),
				new DataParameter("@IdCampoOMina", @IdCampoOMina, LinqToDB.DataType.NVarChar));
		}

		public partial class SpObtenerResumenFiscalizacionPorMunicipioResult
		{
			public int Periodo { get; set; }
			public string Tipo { get; set; }
			public int? Total { get; set; }
		}

		#endregion

		#region SpObtenerResumenFiscalizacionPorRegion

		public static IEnumerable<SpObtenerResumenFiscalizacionPorRegionResult> SpObtenerResumenFiscalizacionPorRegion(this TransparenciaDB dataConnection, string @IdRegion, string @IdTipoRecurso, string @IdCampoOMina)
		{
			return dataConnection.QueryProc<SpObtenerResumenFiscalizacionPorRegionResult>("[dbo].[sp_ObtenerResumenFiscalizacionPorRegion]",
				new DataParameter("@IdRegion", @IdRegion, LinqToDB.DataType.VarChar),
				new DataParameter("@IdTipoRecurso", @IdTipoRecurso, LinqToDB.DataType.VarChar),
				new DataParameter("@IdCampoOMina", @IdCampoOMina, LinqToDB.DataType.NVarChar));
		}

		public partial class SpObtenerResumenFiscalizacionPorRegionResult
		{
			public int Periodo { get; set; }
			public string Tipo { get; set; }
			public int? Total { get; set; }
		}

		#endregion

		#region SpProyectosAprobadosPorFuenteFinanciacionPorDepartamento

		public static IEnumerable<SpProyectosAprobadosPorFuenteFinanciacionPorDepartamentoResult> SpProyectosAprobadosPorFuenteFinanciacionPorDepartamento(this TransparenciaDB dataConnection, string @Periodos, string @IdDepartamento, int? @IdTipoRecurso)
		{
			return dataConnection.QueryProc<SpProyectosAprobadosPorFuenteFinanciacionPorDepartamentoResult>("[dbo].[sp_ProyectosAprobadosPorFuenteFinanciacionPorDepartamento]",
				new DataParameter("@Periodos", @Periodos, LinqToDB.DataType.VarChar),
				new DataParameter("@IdDepartamento", @IdDepartamento, LinqToDB.DataType.VarChar),
				new DataParameter("@IdTipoRecurso", @IdTipoRecurso, LinqToDB.DataType.Int32));
		}

		public partial class SpProyectosAprobadosPorFuenteFinanciacionPorDepartamentoResult
		{
			public int? Periodo { get; set; }
			public int IdProyecto { get; set; }
			public string Proyecto { get; set; }
			public string NombreRegion { get; set; }
			public string NombreDepartamento { get; set; }
			public string NombreMunicipio { get; set; }
			public string Estado { get; set; }
			public decimal? Valor { get; set; }
			public string Ejecutor { get; set; }
		}

		#endregion

		#region SpProyectosAprobadosPorFuenteFinanciacionPorMunicipio

		public static IEnumerable<SpProyectosAprobadosPorFuenteFinanciacionPorMunicipioResult> SpProyectosAprobadosPorFuenteFinanciacionPorMunicipio(this TransparenciaDB dataConnection, string @Periodos, string @IdMunicipio, int? @IdTipoRecurso)
		{
			return dataConnection.QueryProc<SpProyectosAprobadosPorFuenteFinanciacionPorMunicipioResult>("[dbo].[sp_ProyectosAprobadosPorFuenteFinanciacionPorMunicipio]",
				new DataParameter("@Periodos", @Periodos, LinqToDB.DataType.VarChar),
				new DataParameter("@IdMunicipio", @IdMunicipio, LinqToDB.DataType.VarChar),
				new DataParameter("@IdTipoRecurso", @IdTipoRecurso, LinqToDB.DataType.Int32));
		}

		public partial class SpProyectosAprobadosPorFuenteFinanciacionPorMunicipioResult
		{
			public int? Periodo { get; set; }
			public int IdProyecto { get; set; }
			public string Proyecto { get; set; }
			public string NombreRegion { get; set; }
			public string NombreDepartamento { get; set; }
			public string NombreMunicipio { get; set; }
			public string Estado { get; set; }
			public decimal? Valor { get; set; }
			public string Ejecutor { get; set; }
		}

		#endregion

		#region SpProyectosAprobadosPorFuenteFinanciacionPorRegion

		public static IEnumerable<SpProyectosAprobadosPorFuenteFinanciacionPorRegionResult> SpProyectosAprobadosPorFuenteFinanciacionPorRegion(this TransparenciaDB dataConnection, string @Periodos, string @IdRegion, int? @IdTipoRecurso)
		{
			return dataConnection.QueryProc<SpProyectosAprobadosPorFuenteFinanciacionPorRegionResult>("[dbo].[sp_ProyectosAprobadosPorFuenteFinanciacionPorRegion]",
				new DataParameter("@Periodos", @Periodos, LinqToDB.DataType.VarChar),
				new DataParameter("@IdRegion", @IdRegion, LinqToDB.DataType.VarChar),
				new DataParameter("@IdTipoRecurso", @IdTipoRecurso, LinqToDB.DataType.Int32));
		}

		public partial class SpProyectosAprobadosPorFuenteFinanciacionPorRegionResult
		{
			public int? Periodo { get; set; }
			public int IdProyecto { get; set; }
			public string Proyecto { get; set; }
			public string NombreRegion { get; set; }
			public string NombreDepartamento { get; set; }
			public string NombreMunicipio { get; set; }
			public string Estado { get; set; }
			public decimal? Valor { get; set; }
			public string Ejecutor { get; set; }
		}

		#endregion

		#region SpRenamediagram

		public static int SpRenamediagram(this TransparenciaDB dataConnection, string @diagramname, int? @owner_id, string @new_diagramname)
		{
			return dataConnection.ExecuteProc("[dbo].[sp_renamediagram]",
				new DataParameter("@diagramname", @diagramname, LinqToDB.DataType.NVarChar),
				new DataParameter("@owner_id", @owner_id, LinqToDB.DataType.Int32),
				new DataParameter("@new_diagramname", @new_diagramname, LinqToDB.DataType.NVarChar));
		}

		#endregion

		#region SpUbicacionGeograficaPorEnteTerritorial

		public static IEnumerable<SpUbicacionGeograficaPorEnteTerritorialResult> SpUbicacionGeograficaPorEnteTerritorial(this TransparenciaDB dataConnection, string @IdMunicipio, string @IdDepartamento, string @IdRegion)
		{
			return dataConnection.QueryProc<SpUbicacionGeograficaPorEnteTerritorialResult>("[dbo].[sp_UbicacionGeograficaPorEnteTerritorial]",
				new DataParameter("@IdMunicipio", @IdMunicipio, LinqToDB.DataType.VarChar),
				new DataParameter("@IdDepartamento", @IdDepartamento, LinqToDB.DataType.VarChar),
				new DataParameter("@IdRegion", @IdRegion, LinqToDB.DataType.VarChar));
		}

		public partial class SpUbicacionGeograficaPorEnteTerritorialResult
		{
			public string NombreEntidad { get; set; }
			public decimal Latitud { get; set; }
			public decimal Longitud { get; set; }
			public object PuntoUbicacion { get; set; }
		}

		#endregion

		#region SpointObtenerProyectosPorFiltros

		public static IEnumerable<SpointObtenerProyectosPorFiltrosResult> SpointObtenerProyectosPorFiltros(this TransparenciaDB dataConnection, string @CodigosProyectosI, string @filtroNombre, string @BPINE, string @EntidadTerritorial)
		{
			return dataConnection.QueryProc<SpointObtenerProyectosPorFiltrosResult>("[dbo].[SPOINT_ObtenerProyectosPorFiltros]",
				new DataParameter("@CodigosProyectosI", @CodigosProyectosI, LinqToDB.DataType.VarChar),
				new DataParameter("@filtroNombre", @filtroNombre, LinqToDB.DataType.VarChar),
				new DataParameter("@BPINE", @BPINE, LinqToDB.DataType.VarChar),
				new DataParameter("@EntidadTerritorial", @EntidadTerritorial, LinqToDB.DataType.VarChar));
		}

		public partial class SpointObtenerProyectosPorFiltrosResult
		{
			public int IdProyecto { get; set; }
			public string CodigoBPIN { get; set; }
			public string NombreProyecto { get; set; }
			public string NombreMunicipio { get; set; }
			public string NombreDepartamento { get; set; }
			public string NombreRegion { get; set; }
		}

		#endregion

		#region SptDataConsolidatedContractCargarDatosContratoProjectsPerSector

		public static IEnumerable<SptDataConsolidatedContractCargarDatosContratoProjectsPerSectorResult> SptDataConsolidatedContractCargarDatosContratoProjectsPerSector(this TransparenciaDB dataConnection, int? @AnnioActual)
		{
			return dataConnection.QueryProc<SptDataConsolidatedContractCargarDatosContratoProjectsPerSectorResult>("[dbo].[spt_DataConsolidatedContractCargarDatosContratoProjectsPerSector]",
				new DataParameter("@AnnioActual", @AnnioActual, LinqToDB.DataType.Int32));
		}

		public partial class SptDataConsolidatedContractCargarDatosContratoProjectsPerSectorResult
		{
			public string NombreSector { get; set; }
			public int? numero_proyectos { get; set; }
			public decimal? porcentaje { get; set; }
		}

		#endregion

		#region SptDataConsolidatedContractCargarDatosContratoResourcesPerDepartment

		public static IEnumerable<SptDataConsolidatedContractCargarDatosContratoResourcesPerDepartmentResult> SptDataConsolidatedContractCargarDatosContratoResourcesPerDepartment(this TransparenciaDB dataConnection, int? @Annio)
		{
			return dataConnection.QueryProc<SptDataConsolidatedContractCargarDatosContratoResourcesPerDepartmentResult>("[dbo].[spt_DataConsolidatedContractCargarDatosContratoResourcesPerDepartment]",
				new DataParameter("@Annio", @Annio, LinqToDB.DataType.Int32));
		}

		public partial class SptDataConsolidatedContractCargarDatosContratoResourcesPerDepartmentResult
		{
			public string nombre_departamento { get; set; }
			public decimal? total_departamento { get; set; }
			public decimal? porcentaje { get; set; }
		}

		#endregion

		#region SptDataConsolidatedContractCargarDatosContratoResourcesPerRegion

		public static IEnumerable<SptDataConsolidatedContractCargarDatosContratoResourcesPerRegionResult> SptDataConsolidatedContractCargarDatosContratoResourcesPerRegion(this TransparenciaDB dataConnection, int? @Annio)
		{
			var ms = dataConnection.MappingSchema;

			return dataConnection.QueryProc(dataReader =>
				new SptDataConsolidatedContractCargarDatosContratoResourcesPerRegionResult
				{
					NombreRegion = Converter.ChangeTypeTo<string>(dataReader.GetValue(0), ms),
					Column2 = Converter.ChangeTypeTo<decimal?>(dataReader.GetValue(1), ms),
				},
				"[dbo].[spt_DataConsolidatedContractCargarDatosContratoResourcesPerRegion]",
				new DataParameter("@Annio", @Annio, LinqToDB.DataType.Int32));
		}

		public partial class SptDataConsolidatedContractCargarDatosContratoResourcesPerRegionResult
		{
			public string NombreRegion { get; set; }
			[Column("")] public decimal? Column2 { get; set; }
		}

		#endregion

		#region SptDataConsolidatedContractCargarDatosContratoResourcesPerSector

		public static IEnumerable<SptDataConsolidatedContractCargarDatosContratoResourcesPerSectorResult> SptDataConsolidatedContractCargarDatosContratoResourcesPerSector(this TransparenciaDB dataConnection, int? @Annio)
		{
			return dataConnection.QueryProc<SptDataConsolidatedContractCargarDatosContratoResourcesPerSectorResult>("[dbo].[spt_DataConsolidatedContractCargarDatosContratoResourcesPerSector]",
				new DataParameter("@Annio", @Annio, LinqToDB.DataType.Int32));
		}

		public partial class SptDataConsolidatedContractCargarDatosContratoResourcesPerSectorResult
		{
			public string NombreSector { get; set; }
			public decimal? dinero_aprobado { get; set; }
			public decimal? porcentaje { get; set; }
		}

		#endregion

		#region SptFiltersContractUnitTestExisteFiltroDepartamento

		public static IEnumerable<SptFiltersContractUnitTestExisteFiltroDepartamentoResult> SptFiltersContractUnitTestExisteFiltroDepartamento(this TransparenciaDB dataConnection)
		{
			return dataConnection.QueryProc<SptFiltersContractUnitTestExisteFiltroDepartamentoResult>("[dbo].[spt_FiltersContractUnitTestExisteFiltroDepartamento]");
		}

		public partial class SptFiltersContractUnitTestExisteFiltroDepartamentoResult
		{
			public string IdDepartamento { get; set; }
			public string NombreDepartamento { get; set; }
		}

		#endregion

		#region SptFiltersContractUnitTestExisteFiltroEstado

		public static IEnumerable<SptFiltersContractUnitTestExisteFiltroEstadoResult> SptFiltersContractUnitTestExisteFiltroEstado(this TransparenciaDB dataConnection)
		{
			return dataConnection.QueryProc<SptFiltersContractUnitTestExisteFiltroEstadoResult>("[dbo].[spt_FiltersContractUnitTestExisteFiltroEstado]");
		}

		public partial class SptFiltersContractUnitTestExisteFiltroEstadoResult
		{
			public int IdEstado { get; set; }
			public string NombreEstado { get; set; }
		}

		#endregion

		#region SptFiltersContractUnitTestExisteFiltroMunicipio

		public static IEnumerable<SptFiltersContractUnitTestExisteFiltroMunicipioResult> SptFiltersContractUnitTestExisteFiltroMunicipio(this TransparenciaDB dataConnection)
		{
			return dataConnection.QueryProc<SptFiltersContractUnitTestExisteFiltroMunicipioResult>("[dbo].[spt_FiltersContractUnitTestExisteFiltroMunicipio]");
		}

		public partial class SptFiltersContractUnitTestExisteFiltroMunicipioResult
		{
			public string IdMunicipio { get; set; }
			public string NombreMunicipio { get; set; }
		}

		#endregion

		#region SptFiltersContractUnitTestExisteFiltroRegion

		public static IEnumerable<SptFiltersContractUnitTestExisteFiltroRegionResult> SptFiltersContractUnitTestExisteFiltroRegion(this TransparenciaDB dataConnection)
		{
			return dataConnection.QueryProc<SptFiltersContractUnitTestExisteFiltroRegionResult>("[dbo].[spt_FiltersContractUnitTestExisteFiltroRegion]");
		}

		public partial class SptFiltersContractUnitTestExisteFiltroRegionResult
		{
			public string IdRegion { get; set; }
			public string NombreRegion { get; set; }
		}

		#endregion

		#region SptFiltersContractUnitTestExisteFiltroSector

		public static IEnumerable<SptFiltersContractUnitTestExisteFiltroSectorResult> SptFiltersContractUnitTestExisteFiltroSector(this TransparenciaDB dataConnection)
		{
			return dataConnection.QueryProc<SptFiltersContractUnitTestExisteFiltroSectorResult>("[dbo].[spt_FiltersContractUnitTestExisteFiltroSector]");
		}

		public partial class SptFiltersContractUnitTestExisteFiltroSectorResult
		{
			public int IdSector { get; set; }
			public string NombreSector { get; set; }
		}

		#endregion

		#region SptHowToContractUnitTestCargarDatosHowToContract

		public static IEnumerable<FuncionamientoSitio> SptHowToContractUnitTestCargarDatosHowToContract(this TransparenciaDB dataConnection)
		{
			return dataConnection.QueryProc<FuncionamientoSitio>("[dbo].[spt_HowToContractUnitTest_CargarDatosHowToContract]");
		}

		#endregion

		#region SptProjectProfileContractUnitTestCargarDatosGetListImagesbyId

		public static IEnumerable<SptProjectProfileContractUnitTestCargarDatosGetListImagesbyIdResult> SptProjectProfileContractUnitTestCargarDatosGetListImagesbyId(this TransparenciaDB dataConnection, int? @IdProyecto)
		{
			var ms = dataConnection.MappingSchema;

			return dataConnection.QueryProc(dataReader =>
				new SptProjectProfileContractUnitTestCargarDatosGetListImagesbyIdResult
				{
					IdProyecto = Converter.ChangeTypeTo<int>(dataReader.GetValue(0), ms),
					Column2 = Converter.ChangeTypeTo<int>(dataReader.GetValue(1), ms),
					RutaFotoGrande = Converter.ChangeTypeTo<string>(dataReader.GetValue(2), ms),
					RutaFotoMediano = Converter.ChangeTypeTo<string>(dataReader.GetValue(3), ms),
					RutaFotoPequeno = Converter.ChangeTypeTo<string>(dataReader.GetValue(4), ms),
				},
				"[dbo].[spt_ProjectProfileContractUnitTestCargarDatosGetListImagesbyId]",
				new DataParameter("@IdProyecto", @IdProyecto, LinqToDB.DataType.Int32));
		}

		public partial class SptProjectProfileContractUnitTestCargarDatosGetListImagesbyIdResult
		{
			public int IdProyecto { get; set; }
			[Column("IdProyecto")] public int Column2 { get; set; }
			public string RutaFotoGrande { get; set; }
			public string RutaFotoMediano { get; set; }
			public string RutaFotoPequeno { get; set; }
		}

		#endregion

		#region SptProjectProfileContractUnitTestCargarDatosGetListMetricbyId

		public static IEnumerable<SptProjectProfileContractUnitTestCargarDatosGetListMetricbyIdResult> SptProjectProfileContractUnitTestCargarDatosGetListMetricbyId(this TransparenciaDB dataConnection, int? @IdProyecto)
		{
			return dataConnection.QueryProc<SptProjectProfileContractUnitTestCargarDatosGetListMetricbyIdResult>("[dbo].[spt_ProjectProfileContractUnitTestCargarDatosGetListMetricbyId]",
				new DataParameter("@IdProyecto", @IdProyecto, LinqToDB.DataType.Int32));
		}

		public partial class SptProjectProfileContractUnitTestCargarDatosGetListMetricbyIdResult
		{
			public int idProducto { get; set; }
			public string NombreProducto { get; set; }
			public int? año { get; set; }
			public double? valor_meta { get; set; }
			public double? valor_reportado { get; set; }
			public decimal? porcentaje { get; set; }
		}

		#endregion

		#region SptProjectProfileContractUnitTestCargarDatosGetOtherProjectsbyId

		public static IEnumerable<SptProjectProfileContractUnitTestCargarDatosGetOtherProjectsbyIdResult> SptProjectProfileContractUnitTestCargarDatosGetOtherProjectsbyId(this TransparenciaDB dataConnection, int? @IdProyecto)
		{
			var ms = dataConnection.MappingSchema;

			return dataConnection.QueryProc(dataReader =>
				new SptProjectProfileContractUnitTestCargarDatosGetOtherProjectsbyIdResult
				{
					IdProyecto = Converter.ChangeTypeTo<int>(dataReader.GetValue(0), ms),
					CodigoBPIN = Converter.ChangeTypeTo<string>(dataReader.GetValue(1), ms),
					NombreProyecto = Converter.ChangeTypeTo<string>(dataReader.GetValue(2), ms),
					FechaInicioProyecto = Converter.ChangeTypeTo<DateTime>(dataReader.GetValue(3), ms),
					FechaFinProyecto = Converter.ChangeTypeTo<DateTime>(dataReader.GetValue(4), ms),
					VlrTotalProyectoFuenteRegalias = Converter.ChangeTypeTo<decimal>(dataReader.GetValue(5), ms),
					VlrTotalProyectoTodasLasFuentes = Converter.ChangeTypeTo<decimal>(dataReader.GetValue(6), ms),
					ObjetivoGeneral = Converter.ChangeTypeTo<string>(dataReader.GetValue(7), ms),
					IdSector = Converter.ChangeTypeTo<int>(dataReader.GetValue(8), ms),
					TipoDeProyecto = Converter.ChangeTypeTo<string>(dataReader.GetValue(9), ms),
					NumeroBeneficiarios = Converter.ChangeTypeTo<long>(dataReader.GetValue(10), ms),
					IdOCAD = Converter.ChangeTypeTo<int>(dataReader.GetValue(11), ms),
					NombreOCAD = Converter.ChangeTypeTo<string>(dataReader.GetValue(12), ms),
					FechaUltimaModificacion = Converter.ChangeTypeTo<DateTime>(dataReader.GetValue(13), ms),
					ConsecutivoCarga = Converter.ChangeTypeTo<int>(dataReader.GetValue(14), ms),
					Modificadopor = Converter.ChangeTypeTo<string>(dataReader.GetValue(15), ms),
					PorcentajeAvanceFisico = Converter.ChangeTypeTo<decimal>(dataReader.GetValue(16), ms),
					PorcentajeAvanceFinanciero = Converter.ChangeTypeTo<decimal?>(dataReader.GetValue(17), ms),
					idHistoriaEstado = Converter.ChangeTypeTo<int>(dataReader.GetValue(18), ms),
					Column20 = Converter.ChangeTypeTo<int>(dataReader.GetValue(19), ms),
					IdEstado = Converter.ChangeTypeTo<int>(dataReader.GetValue(20), ms),
					FechaRegistro = Converter.ChangeTypeTo<DateTime>(dataReader.GetValue(21), ms),
					ActualSiNo = Converter.ChangeTypeTo<bool>(dataReader.GetValue(22), ms),
					IdFase = Converter.ChangeTypeTo<int>(dataReader.GetValue(23), ms),
					IdEtapa = Converter.ChangeTypeTo<int>(dataReader.GetValue(24), ms),
					Column26 = Converter.ChangeTypeTo<DateTime>(dataReader.GetValue(25), ms),
					Column27 = Converter.ChangeTypeTo<int>(dataReader.GetValue(26), ms),
					Column28 = Converter.ChangeTypeTo<string>(dataReader.GetValue(27), ms),
					Column29 = Converter.ChangeTypeTo<int>(dataReader.GetValue(28), ms),
					NombreEstado = Converter.ChangeTypeTo<string>(dataReader.GetValue(29), ms),
					Column31 = Converter.ChangeTypeTo<DateTime>(dataReader.GetValue(30), ms),
					Column32 = Converter.ChangeTypeTo<int>(dataReader.GetValue(31), ms),
					Column33 = Converter.ChangeTypeTo<string>(dataReader.GetValue(32), ms),
				},
				"[dbo].[spt_ProjectProfileContractUnitTestCargarDatosGetOtherProjectsbyId]",
				new DataParameter("@IdProyecto", @IdProyecto, LinqToDB.DataType.Int32));
		}

		public partial class SptProjectProfileContractUnitTestCargarDatosGetOtherProjectsbyIdResult
		{
			public int IdProyecto { get; set; }
			public string CodigoBPIN { get; set; }
			public string NombreProyecto { get; set; }
			public DateTime FechaInicioProyecto { get; set; }
			public DateTime FechaFinProyecto { get; set; }
			public decimal VlrTotalProyectoFuenteRegalias { get; set; }
			public decimal VlrTotalProyectoTodasLasFuentes { get; set; }
			public string ObjetivoGeneral { get; set; }
			public int IdSector { get; set; }
			public string TipoDeProyecto { get; set; }
			public long NumeroBeneficiarios { get; set; }
			public int IdOCAD { get; set; }
			public string NombreOCAD { get; set; }
			public DateTime FechaUltimaModificacion { get; set; }
			public int ConsecutivoCarga { get; set; }
			public string Modificadopor { get; set; }
			public decimal PorcentajeAvanceFisico { get; set; }
			public decimal? PorcentajeAvanceFinanciero { get; set; }
			public int idHistoriaEstado { get; set; }
			[Column("IdProyecto")] public int Column20 { get; set; }
			public int IdEstado { get; set; }
			public DateTime FechaRegistro { get; set; }
			public bool ActualSiNo { get; set; }
			public int IdFase { get; set; }
			public int IdEtapa { get; set; }
			[Column("FechaUltimaModificacion")] public DateTime Column26 { get; set; }
			[Column("ConsecutivoCarga")] public int Column27 { get; set; }
			[Column("Modificadopor")] public string Column28 { get; set; }
			[Column("IdEstado")] public int Column29 { get; set; }
			public string NombreEstado { get; set; }
			[Column("FechaUltimaModificacion")] public DateTime Column31 { get; set; }
			[Column("ConsecutivoCarga")] public int Column32 { get; set; }
			[Column("Modificadopor")] public string Column33 { get; set; }
		}

		#endregion

		#region SptProjectProfileContractUnitTestCargarDatosGetProgressProject

		public static IEnumerable<Proyecto> SptProjectProfileContractUnitTestCargarDatosGetProgressProject(this TransparenciaDB dataConnection, int? @IdProyecto)
		{
			return dataConnection.QueryProc<Proyecto>("[dbo].[spt_ProjectProfileContractUnitTestCargarDatosGetProgressProject]",
				new DataParameter("@IdProyecto", @IdProyecto, LinqToDB.DataType.Int32));
		}

		#endregion

		#region SptProjectProfileContractUnitTestCargarDatosGetProjectInformation

		public static IEnumerable<SptProjectProfileContractUnitTestCargarDatosGetProjectInformationResult> SptProjectProfileContractUnitTestCargarDatosGetProjectInformation(this TransparenciaDB dataConnection, int? @IdProyecto)
		{
			return dataConnection.QueryProc<SptProjectProfileContractUnitTestCargarDatosGetProjectInformationResult>("[dbo].[spt_ProjectProfileContractUnitTestCargarDatosGetProjectInformation]",
				new DataParameter("@IdProyecto", @IdProyecto, LinqToDB.DataType.Int32));
		}

		public partial class SptProjectProfileContractUnitTestCargarDatosGetProjectInformationResult
		{
			public int IdProyecto { get; set; }
			public string NombreSector { get; set; }
			public DateTime FechaInicioProyecto { get; set; }
			public DateTime FechaFinProyecto { get; set; }
			public string CodigoBPIN { get; set; }
			public decimal VlrTotalProyectoFuenteRegalias { get; set; }
			public string NombreProyecto { get; set; }
			public string NombreEstado { get; set; }
		}

		#endregion

		#region SptProjectProfileContractUnitTestCargarDatosGetSourcesByProject

		public static IEnumerable<Proyecto> SptProjectProfileContractUnitTestCargarDatosGetSourcesByProject(this TransparenciaDB dataConnection, int? @IdProyecto)
		{
			return dataConnection.QueryProc<Proyecto>("[dbo].[spt_ProjectProfileContractUnitTestCargarDatosGetSourcesByProject]",
				new DataParameter("@IdProyecto", @IdProyecto, LinqToDB.DataType.Int32));
		}

		#endregion

		#region SptProjectsSearchListContractUnitTestCargarListadoPorProyectos

		public static IEnumerable<SptProjectsSearchListContractUnitTestCargarListadoPorProyectosResult> SptProjectsSearchListContractUnitTestCargarListadoPorProyectos(this TransparenciaDB dataConnection, int? @p_IdEstado, int? @p_annio, int? @p_sector)
		{
			return dataConnection.QueryProc<SptProjectsSearchListContractUnitTestCargarListadoPorProyectosResult>("[dbo].[spt_ProjectsSearchListContractUnitTestCargarListadoPorProyectos]",
				new DataParameter("@p_IdEstado", @p_IdEstado, LinqToDB.DataType.Int32),
				new DataParameter("@p_annio", @p_annio, LinqToDB.DataType.Int32),
				new DataParameter("@p_sector", @p_sector, LinqToDB.DataType.Int32));
		}

		public partial class SptProjectsSearchListContractUnitTestCargarListadoPorProyectosResult
		{
			public string NombreProyecto { get; set; }
			public decimal VlrTotalProyectoFuenteRegalias { get; set; }
			public string NombreEstado { get; set; }
		}

		#endregion

		#region SptProjectsSearchMapContractUnitTestCargarProyectosEnElMapaDepartamento

		public static IEnumerable<SptProjectsSearchMapContractUnitTestCargarProyectosEnElMapaDepartamentoResult> SptProjectsSearchMapContractUnitTestCargarProyectosEnElMapaDepartamento(this TransparenciaDB dataConnection, string @departamentos)
		{
			return dataConnection.QueryProc<SptProjectsSearchMapContractUnitTestCargarProyectosEnElMapaDepartamentoResult>("[dbo].[spt_ProjectsSearchMapContractUnitTestCargarProyectosEnElMapaDepartamento]",
				new DataParameter("@departamentos", @departamentos, LinqToDB.DataType.VarChar));
		}

		public partial class SptProjectsSearchMapContractUnitTestCargarProyectosEnElMapaDepartamentoResult
		{
			public int IdProyecto { get; set; }
			public string NombreProyecto { get; set; }
			public DateTime FechaInicioProyecto { get; set; }
			public decimal VlrTotalProyectoFuenteRegalias { get; set; }
			public decimal VlrTotalProyectoTodasLasFuentes { get; set; }
			public string NombreEstado { get; set; }
		}

		#endregion

		#region SptProjectsSearchMapContractUnitTestCargarProyectosEnElMapaMunicipio

		public static IEnumerable<SptProjectsSearchMapContractUnitTestCargarProyectosEnElMapaMunicipioResult> SptProjectsSearchMapContractUnitTestCargarProyectosEnElMapaMunicipio(this TransparenciaDB dataConnection, string @departamentos)
		{
			return dataConnection.QueryProc<SptProjectsSearchMapContractUnitTestCargarProyectosEnElMapaMunicipioResult>("[dbo].[spt_ProjectsSearchMapContractUnitTestCargarProyectosEnElMapaMunicipio]",
				new DataParameter("@departamentos", @departamentos, LinqToDB.DataType.VarChar));
		}

		public partial class SptProjectsSearchMapContractUnitTestCargarProyectosEnElMapaMunicipioResult
		{
			public int IdProyecto { get; set; }
			public string NombreProyecto { get; set; }
			public DateTime FechaInicioProyecto { get; set; }
			public decimal VlrTotalProyectoFuenteRegalias { get; set; }
			public decimal VlrTotalProyectoTodasLasFuentes { get; set; }
			public string NombreEstado { get; set; }
		}

		#endregion

		#region SptProjectsSearchMapContractUnitTestCargarProyectosEnElMapaRegion

		public static IEnumerable<SptProjectsSearchMapContractUnitTestCargarProyectosEnElMapaRegionResult> SptProjectsSearchMapContractUnitTestCargarProyectosEnElMapaRegion(this TransparenciaDB dataConnection, string @departamentos)
		{
			return dataConnection.QueryProc<SptProjectsSearchMapContractUnitTestCargarProyectosEnElMapaRegionResult>("[dbo].[spt_ProjectsSearchMapContractUnitTestCargarProyectosEnElMapaRegion]",
				new DataParameter("@departamentos", @departamentos, LinqToDB.DataType.VarChar));
		}

		public partial class SptProjectsSearchMapContractUnitTestCargarProyectosEnElMapaRegionResult
		{
			public int IdProyecto { get; set; }
			public string NombreProyecto { get; set; }
			public DateTime FechaInicioProyecto { get; set; }
			public decimal VlrTotalProyectoFuenteRegalias { get; set; }
			public decimal VlrTotalProyectoTodasLasFuentes { get; set; }
			public string NombreEstado { get; set; }
		}

		#endregion

		#region StpUpdateNombreIndicador

		public static int StpUpdateNombreIndicador(this TransparenciaDB dataConnection)
		{
			return dataConnection.ExecuteProc("[dbo].[stp_updateNombreIndicador]");
		}

		#endregion

		#region TestObtenerEsquemaFinanciacionPorDepto

		public static IEnumerable<TestObtenerEsquemaFinanciacionPorDeptoResult> TestObtenerEsquemaFinanciacionPorDepto(this TransparenciaDB dataConnection, int? @CodDepto)
		{
			return dataConnection.QueryProc<TestObtenerEsquemaFinanciacionPorDeptoResult>("[dbo].[TestObtenerEsquemaFinanciacionPorDepto]",
				new DataParameter("@CodDepto", @CodDepto, LinqToDB.DataType.Int32));
		}

		public partial class TestObtenerEsquemaFinanciacionPorDeptoResult
		{
			public int IdProyecto { get; set; }
			public int IdTipoRecurso { get; set; }
		}

		#endregion

		#region TestObtenerResumenConsolidadoNacional

		public static IEnumerable<TestObtenerResumenConsolidadoNacionalResult> TestObtenerResumenConsolidadoNacional(this TransparenciaDB dataConnection, int? @AñoInicial, int? @AñoFinal)
		{
			return dataConnection.QueryProc<TestObtenerResumenConsolidadoNacionalResult>("[dbo].[TestObtenerResumenConsolidadoNacional]",
				new DataParameter("@AñoInicial", @AñoInicial, LinqToDB.DataType.Int32),
				new DataParameter("@AñoFinal", @AñoFinal, LinqToDB.DataType.Int32));
		}

		public partial class TestObtenerResumenConsolidadoNacionalResult
		{
			public decimal? Aprobado { get; set; }
			public decimal? aprobadoTotal { get; set; }
			public int? NumProyectos { get; set; }
		}

		#endregion

		#region TOJSONDEPARTAMENTO

		public static IEnumerable<TOJSONDEPARTAMENTOResult> TOJSONDEPARTAMENTO(this TransparenciaDB dataConnection, ref string @JsonOutput)
		{
			var ms = dataConnection.MappingSchema;

			var ret = dataConnection.QueryProc(dataReader =>
				new TOJSONDEPARTAMENTOResult
				{
					Column1 = Converter.ChangeTypeTo<string>(dataReader.GetValue(0), ms),
				},
				"[dbo].[TOJSONDEPARTAMENTO]",
				new DataParameter("@JsonOutput", @JsonOutput, LinqToDB.DataType.VarChar) { Direction = ParameterDirection.InputOutput, Size = -1 }).ToList();

			@JsonOutput = Converter.ChangeTypeTo<string>(((IDbDataParameter)dataConnection.Command.Parameters["@JsonOutput"]).Value);

			return ret;
		}

		public partial class TOJSONDEPARTAMENTOResult
		{
			[Column("")] public string Column1 { get; set; }
		}

		#endregion

		#region TOJSONMUNICIPIO

		public static IEnumerable<TOJSONMUNICIPIOResult> TOJSONMUNICIPIO(this TransparenciaDB dataConnection, ref string @JsonOutput)
		{
			var ms = dataConnection.MappingSchema;

			var ret = dataConnection.QueryProc(dataReader =>
				new TOJSONMUNICIPIOResult
				{
					Column1 = Converter.ChangeTypeTo<string>(dataReader.GetValue(0), ms),
				},
				"[dbo].[TOJSONMUNICIPIO]",
				new DataParameter("@JsonOutput", @JsonOutput, LinqToDB.DataType.VarChar) { Direction = ParameterDirection.InputOutput, Size = -1 }).ToList();

			@JsonOutput = Converter.ChangeTypeTo<string>(((IDbDataParameter)dataConnection.Command.Parameters["@JsonOutput"]).Value);

			return ret;
		}

		public partial class TOJSONMUNICIPIOResult
		{
			[Column("")] public string Column1 { get; set; }
		}

		#endregion

		#region TOJSONPROYECTO

		public static IEnumerable<TOJSONPROYECTOResult> TOJSONPROYECTO(this TransparenciaDB dataConnection, ref string @JsonOutput)
		{
			var ms = dataConnection.MappingSchema;

			var ret = dataConnection.QueryProc(dataReader =>
				new TOJSONPROYECTOResult
				{
					Column1 = Converter.ChangeTypeTo<string>(dataReader.GetValue(0), ms),
				},
				"[dbo].[TOJSONPROYECTO]",
				new DataParameter("@JsonOutput", @JsonOutput, LinqToDB.DataType.VarChar) { Direction = ParameterDirection.InputOutput, Size = -1 }).ToList();

			@JsonOutput = Converter.ChangeTypeTo<string>(((IDbDataParameter)dataConnection.Command.Parameters["@JsonOutput"]).Value);

			return ret;
		}

		public partial class TOJSONPROYECTOResult
		{
			[Column("")] public string Column1 { get; set; }
		}

		#endregion

		#region VerificarCodigoBPIN

		public static IEnumerable<VerificarCodigoBPINResult> VerificarCodigoBPIN(this TransparenciaDB dataConnection, string @BPIN)
		{
			return dataConnection.QueryProc<VerificarCodigoBPINResult>("[dbo].[VerificarCodigoBPIN]",
				new DataParameter("@BPIN", @BPIN, LinqToDB.DataType.VarChar));
		}

		public partial class VerificarCodigoBPINResult
		{
			public int ReturnValue { get; set; }
		}

		#endregion
	}

	public static partial class SqlFunctions
	{
		#region Duration

		[Sql.Function(Name = "dbo.duration", ServerSideOnly = true)]
		public static decimal? Duration(DateTime? @start, DateTime? @end)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region FnDiagramobjects

		[Sql.Function(Name = "dbo.fn_diagramobjects", ServerSideOnly = true)]
		public static int? FnDiagramobjects()
		{
			throw new InvalidOperationException();
		}

		#endregion
	}

	public static partial class TableExtensions
	{
		public static Actividad Find(this ITable<Actividad> table, int IdActividad)
		{
			return table.FirstOrDefault(t =>
				t.IdActividad == IdActividad);
		}

		public static Actor Find(this ITable<Actor> table, string IdActor, int IDRol)
		{
			return table.FirstOrDefault(t =>
				t.IdActor == IdActor &&
				t.IDRol == IDRol);
		}

		public static ActorXProyecto Find(this ITable<ActorXProyecto> table, string IDActor, int IDProyecto, int IDRol)
		{
			return table.FirstOrDefault(t =>
				t.IDActor == IDActor &&
				t.IDProyecto == IDProyecto &&
				t.IDRol == IDRol);
		}

		public static Alerta Find(this ITable<Alerta> table, string NombreAlerta)
		{
			return table.FirstOrDefault(t =>
				t.NombreAlerta == NombreAlerta);
		}

		public static Asociacioncomentario Find(this ITable<Asociacioncomentario> table, int IdAsociacion)
		{
			return table.FirstOrDefault(t =>
				t.IdAsociacion == IdAsociacion);
		}

		public static CabeceraMunicipio Find(this ITable<CabeceraMunicipio> table, string CodigoDane)
		{
			return table.FirstOrDefault(t =>
				t.CodigoDane == CodigoDane);
		}

		public static CampoOProyecto Find(this ITable<CampoOProyecto> table, string IdCampoOProyecto, string IdTipoCampoOProyecto)
		{
			return table.FirstOrDefault(t =>
				t.IdCampoOProyecto == IdCampoOProyecto &&
				t.IdTipoCampoOProyecto == IdTipoCampoOProyecto);
		}

		public static CampoOProyectoFiscalizacion Find(this ITable<CampoOProyectoFiscalizacion> table, string IdCampoOProyecto, string IdTipoCampoOProyecto)
		{
			return table.FirstOrDefault(t =>
				t.IdCampoOProyecto == IdCampoOProyecto &&
				t.IdTipoCampoOProyecto == IdTipoCampoOProyecto);
		}

		public static Comentario Find(this ITable<Comentario> table, int IdComentario)
		{
			return table.FirstOrDefault(t =>
				t.IdComentario == IdComentario);
		}

		public static Contrato Find(this ITable<Contrato> table, string CodigoContrato)
		{
			return table.FirstOrDefault(t =>
				t.CodigoContrato == CodigoContrato);
		}

		public static ContratosEjecucionFinanciera Find(this ITable<ContratosEjecucionFinanciera> table, string CodigoContrato, int TipoPrograma, int ObjetoGasto, int SubPrograma, int FuenteFinanciamiento, int CodigoEntidad, int CodigoPrograma, int CodigoProyecto, string CodigoDepartamento, int AnioContrato, int CodigoFinanciador, string CodigoFinanciero)
		{
			return table.FirstOrDefault(t =>
				t.CodigoContrato == CodigoContrato &&
				t.TipoPrograma == TipoPrograma &&
				t.ObjetoGasto == ObjetoGasto &&
				t.SubPrograma == SubPrograma &&
				t.FuenteFinanciamiento == FuenteFinanciamiento &&
				t.CodigoEntidad == CodigoEntidad &&
				t.CodigoPrograma == CodigoPrograma &&
				t.CodigoProyecto == CodigoProyecto &&
				t.CodigoDepartamento == CodigoDepartamento &&
				t.AnioContrato == AnioContrato &&
				t.CodigoFinanciador == CodigoFinanciador &&
				t.CodigoFinanciero == CodigoFinanciero);
		}

		public static DatosAdicionalesAprobacion Find(this ITable<DatosAdicionalesAprobacion> table, int IdDatoAdicional)
		{
			return table.FirstOrDefault(t =>
				t.IdDatoAdicional == IdDatoAdicional);
		}

		public static DatosAdicionalesEjecutore Find(this ITable<DatosAdicionalesEjecutore> table, int IdProyecto, string NitEjecutor)
		{
			return table.FirstOrDefault(t =>
				t.IdProyecto == IdProyecto &&
				t.NitEjecutor == NitEjecutor);
		}

		public static Distribucion Find(this ITable<Distribucion> table, int IdTipoRecurso, int IdTipoEntidad, string IdEntidad, int MesDistribucion, int AñoDistribucion)
		{
			return table.FirstOrDefault(t =>
				t.IdTipoRecurso == IdTipoRecurso &&
				t.IdTipoEntidad == IdTipoEntidad &&
				t.IdEntidad == IdEntidad &&
				t.MesDistribucion == MesDistribucion &&
				t.AñoDistribucion == AñoDistribucion);
		}

		public static DonacionProveedor Find(this ITable<DonacionProveedor> table, int Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static EnteTerritorial Find(this ITable<EnteTerritorial> table, string IdDepartamento, string IdMunicipio)
		{
			return table.FirstOrDefault(t =>
				t.IdDepartamento == IdDepartamento &&
				t.IdMunicipio == IdMunicipio);
		}

		public static EntidadContrato Find(this ITable<EntidadContrato> table, string Codigo)
		{
			return table.FirstOrDefault(t =>
				t.Codigo == Codigo);
		}

		public static EntidadesEjecutorasGesProy Find(this ITable<EntidadesEjecutorasGesProy> table, string NIT, char DigitoVerificacion)
		{
			return table.FirstOrDefault(t =>
				t.NIT == NIT &&
				t.DigitoVerificacion == DigitoVerificacion);
		}

		public static EsquemaFinanciacionProyecto Find(this ITable<EsquemaFinanciacionProyecto> table, int IdEsquemaFinanciacion)
		{
			return table.FirstOrDefault(t =>
				t.IdEsquemaFinanciacion == IdEsquemaFinanciacion);
		}

		public static Estado Find(this ITable<Estado> table, int IdEstado)
		{
			return table.FirstOrDefault(t =>
				t.IdEstado == IdEstado);
		}

		public static EstadoComentario Find(this ITable<EstadoComentario> table, int Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static EstadoGesproyProyecto Find(this ITable<EstadoGesproyProyecto> table, int IdProyecto)
		{
			return table.FirstOrDefault(t =>
				t.IdProyecto == IdProyecto);
		}

		public static EstadoHomologado Find(this ITable<EstadoHomologado> table, int IdEstado)
		{
			return table.FirstOrDefault(t =>
				t.IdEstado == IdEstado);
		}

		public static EstadoJuridicoCampoOProyecto Find(this ITable<EstadoJuridicoCampoOProyecto> table, string IdCampoOProyecto, string IdTipoCampoOProyecto, string IdEstadoJuridicoCampoOProyecto)
		{
			return table.FirstOrDefault(t =>
				t.IdCampoOProyecto == IdCampoOProyecto &&
				t.IdTipoCampoOProyecto == IdTipoCampoOProyecto &&
				t.IdEstadoJuridicoCampoOProyecto == IdEstadoJuridicoCampoOProyecto);
		}

		public static Etapa Find(this ITable<Etapa> table, int IdEtapa)
		{
			return table.FirstOrDefault(t =>
				t.IdEtapa == IdEtapa);
		}

		public static EtapaCampoOProyecto Find(this ITable<EtapaCampoOProyecto> table, string IdCampoOProyecto, string IdTipoCampoOProyecto, int IdEtapaCampoOProyecto)
		{
			return table.FirstOrDefault(t =>
				t.IdCampoOProyecto == IdCampoOProyecto &&
				t.IdTipoCampoOProyecto == IdTipoCampoOProyecto &&
				t.IdEtapaCampoOProyecto == IdEtapaCampoOProyecto);
		}

		public static Fase Find(this ITable<Fase> table, int IdFase)
		{
			return table.FirstOrDefault(t =>
				t.IdFase == IdFase);
		}

		public static Fiscalizacion Find(this ITable<Fiscalizacion> table, int Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static Foto Find(this ITable<Foto> table, int IdFoto)
		{
			return table.FirstOrDefault(t =>
				t.IdFoto == IdFoto);
		}

		public static FotoUsuario Find(this ITable<FotoUsuario> table, int IdFotoUsuario)
		{
			return table.FirstOrDefault(t =>
				t.IdFotoUsuario == IdFotoUsuario);
		}

		public static Fuente Find(this ITable<Fuente> table, int IdTipoRecurso, int IdTipoEntidad, string IdEntidad)
		{
			return table.FirstOrDefault(t =>
				t.IdTipoRecurso == IdTipoRecurso &&
				t.IdTipoEntidad == IdTipoEntidad &&
				t.IdEntidad == IdEntidad);
		}

		public static FuenteDeLosRecurso Find(this ITable<FuenteDeLosRecurso> table, int IdFuente)
		{
			return table.FirstOrDefault(t =>
				t.IdFuente == IdFuente);
		}

		public static FuenteFinancieraPrograma Find(this ITable<FuenteFinancieraPrograma> table, int CodigoFuenteFinanciamiento)
		{
			return table.FirstOrDefault(t =>
				t.CodigoFuenteFinanciamiento == CodigoFuenteFinanciamiento);
		}

		public static FuncionamientoSitio Find(this ITable<FuncionamientoSitio> table, int IDFuncionamientoSitio)
		{
			return table.FirstOrDefault(t =>
				t.IDFuncionamientoSitio == IDFuncionamientoSitio);
		}

		public static GeneroUsuario Find(this ITable<GeneroUsuario> table, int IdGeneroUsuario)
		{
			return table.FirstOrDefault(t =>
				t.IdGeneroUsuario == IdGeneroUsuario);
		}

		public static Georreferenciacion Find(this ITable<Georreferenciacion> table, int IdGeorreferencia)
		{
			return table.FirstOrDefault(t =>
				t.IdGeorreferencia == IdGeorreferencia);
		}

		public static Giro Find(this ITable<Giro> table, int IdGiro)
		{
			return table.FirstOrDefault(t =>
				t.IdGiro == IdGiro);
		}

		public static HistoriaEstado Find(this ITable<HistoriaEstado> table, int IdHistoriaEstado)
		{
			return table.FirstOrDefault(t =>
				t.IdHistoriaEstado == IdHistoriaEstado);
		}
        public static consulta_HistoricoAvanceIndicadoresPNDStp Find(this ITable<consulta_HistoricoAvanceIndicadoresPNDStp> table, int Id)
        {
            return table.FirstOrDefault(t =>
                t.Id == Id);
        }
        public static Idea Find(this ITable<Idea> table, int IdIdea)
		{
			return table.FirstOrDefault(t =>
				t.IdIdea == IdIdea);
		}

		public static IdeaMejora Find(this ITable<IdeaMejora> table, int IdeaMejoraID)
		{
			return table.FirstOrDefault(t =>
				t.IdeaMejoraID == IdeaMejoraID);
		}

		public static ImagenesXEnteTerritorial Find(this ITable<ImagenesXEnteTerritorial> table, int IdImageXEnteTerritorial, string IdImage)
		{
			return table.FirstOrDefault(t =>
				t.IdImageXEnteTerritorial == IdImageXEnteTerritorial &&
				t.IdImage == IdImage);
		}

		public static Indicadore Find(this ITable<Indicadore> table, int Anio, int IdPrograma, int CodigoIndicador)
		{
			return table.FirstOrDefault(t =>
				t.Anio == Anio &&
				t.IdPrograma == IdPrograma &&
				t.CodigoIndicador == CodigoIndicador);
		}

		public static IndicadoresTexto Find(this ITable<IndicadoresTexto> table, int CodigoIndicador)
		{
			return table.FirstOrDefault(t =>
				t.CodigoIndicador == CodigoIndicador);
		}

		public static InformeAvanceFisicoProyecto Find(this ITable<InformeAvanceFisicoProyecto> table, int IdInformeAvanceFisico)
		{
			return table.FirstOrDefault(t =>
				t.IdInformeAvanceFisico == IdInformeAvanceFisico);
		}

		public static Liquidacion Find(this ITable<Liquidacion> table, int IdLiquidación)
		{
			return table.FirstOrDefault(t =>
				t.IdLiquidación == IdLiquidación);
		}

		public static MedioMapaIUsuario Find(this ITable<MedioMapaIUsuario> table, int IdMedioMapaIUsuario)
		{
			return table.FirstOrDefault(t =>
				t.IdMedioMapaIUsuario == IdMedioMapaIUsuario);
		}

		public static MeGusta Find(this ITable<MeGusta> table, int IdMeGusta)
		{
			return table.FirstOrDefault(t =>
				t.IdMeGusta == IdMeGusta);
		}

		public static MetaIndicadorProducto Find(this ITable<MetaIndicadorProducto> table, int IdMetaIndicadorProducto)
		{
			return table.FirstOrDefault(t =>
				t.IdMetaIndicadorProducto == IdMetaIndicadorProducto);
		}

		public static ObjetivoEspecifico Find(this ITable<ObjetivoEspecifico> table, int IdObjetivoEspecifico)
		{
			return table.FirstOrDefault(t =>
				t.IdObjetivoEspecifico == IdObjetivoEspecifico);
		}

		public static Opcione Find(this ITable<Opcione> table, string Variable)
		{
			return table.FirstOrDefault(t =>
				t.Variable == Variable);
		}

		public static OpcionRespuesta Find(this ITable<OpcionRespuesta> table, int IdOpcionRespuestas)
		{
			return table.FirstOrDefault(t =>
				t.IdOpcionRespuestas == IdOpcionRespuestas);
		}

		public static ParametrizacionTitulo Find(this ITable<ParametrizacionTitulo> table, int IdParametrizacion)
		{
			return table.FirstOrDefault(t =>
				t.IdParametrizacion == IdParametrizacion);
		}

		public static Periodicidad Find(this ITable<Periodicidad> table, string IdPeriodicidad)
		{
			return table.FirstOrDefault(t =>
				t.IdPeriodicidad == IdPeriodicidad);
		}

		public static PreguntaCuestionario Find(this ITable<PreguntaCuestionario> table, int IdPregunta)
		{
			return table.FirstOrDefault(t =>
				t.IdPregunta == IdPregunta);
		}

		public static Presupuesto Find(this ITable<Presupuesto> table, int IdTipoRecurso, int IdTipoEntidad, string IdEntidad, string IdDepartamento, string IdMunicipio, DateTime InicioVigencia, DateTime FinVigencia)
		{
			return table.FirstOrDefault(t =>
				t.IdTipoRecurso == IdTipoRecurso &&
				t.IdTipoEntidad == IdTipoEntidad &&
				t.IdEntidad == IdEntidad &&
				t.IdDepartamento == IdDepartamento &&
				t.IdMunicipio == IdMunicipio &&
				t.InicioVigencia == InicioVigencia &&
				t.FinVigencia == FinVigencia);
		}

		public static Proceso Find(this ITable<Proceso> table, string IdProceso, string Ocid, string CodigoProveedor, string CodigoBpin, string Idprocesojson, string AwardId)
		{
			return table.FirstOrDefault(t =>
				t.IdProceso == IdProceso &&
				t.Ocid == Ocid &&
				t.CodigoProveedor == CodigoProveedor &&
				t.CodigoBpin == CodigoBpin &&
				t.Idprocesojson == Idprocesojson &&
				t.AwardId == AwardId);
		}

		public static Produccion Find(this ITable<Produccion> table, int IdProduccion)
		{
			return table.FirstOrDefault(t =>
				t.IdProduccion == IdProduccion);
		}

		public static ProduccionANH Find(this ITable<ProduccionANH> table, int IdProduccion)
		{
			return table.FirstOrDefault(t =>
				t.IdProduccion == IdProduccion);
		}

		public static ProduccionANM Find(this ITable<ProduccionANM> table, int IdProduccion)
		{
			return table.FirstOrDefault(t =>
				t.IdProduccion == IdProduccion);
		}

		public static Producto Find(this ITable<Producto> table, int IdProducto)
		{
			return table.FirstOrDefault(t =>
				t.IdProducto == IdProducto);
		}

		public static Programa Find(this ITable<Programa> table, int Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static ProgramaEjecucionContrato Find(this ITable<ProgramaEjecucionContrato> table, long Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static ProgramaMetasFinanciera Find(this ITable<ProgramaMetasFinanciera> table, DateTime FechaMeta, int IdPrograma, int CodigoProducto, int CodigoObjeto, int Fuente, int Financiador, int CodigoDepartamento)
		{
			return table.FirstOrDefault(t =>
				t.FechaMeta == FechaMeta &&
				t.IdPrograma == IdPrograma &&
				t.CodigoProducto == CodigoProducto &&
				t.CodigoObjeto == CodigoObjeto &&
				t.Fuente == Fuente &&
				t.Financiador == Financiador &&
				t.CodigoDepartamento == CodigoDepartamento);
		}

		public static ProgramaMetasFisica Find(this ITable<ProgramaMetasFisica> table, int IdPrograma, int CodigoProyecto, int CodigoProducto, DateTime FechaMeta)
		{
			return table.FirstOrDefault(t =>
				t.IdPrograma == IdPrograma &&
				t.CodigoProyecto == CodigoProyecto &&
				t.CodigoProducto == CodigoProducto &&
				t.FechaMeta == FechaMeta);
		}

		public static ProyeccionRecursosITEM Find(this ITable<ProyeccionRecursosITEM> table, int IdProyeccion)
		{
			return table.FirstOrDefault(t =>
				t.IdProyeccion == IdProyeccion);
		}

		public static Proyecto Find(this ITable<Proyecto> table, int IdProyecto)
		{
			return table.FirstOrDefault(t =>
				t.IdProyecto == IdProyecto);
		}

		public static ProyectoXEntidadTerritorial Find(this ITable<ProyectoXEntidadTerritorial> table, int IdProyecto, string IdDepartamento, string IdMunicipio)
		{
			return table.FirstOrDefault(t =>
				t.IdProyecto == IdProyecto &&
				t.IdDepartamento == IdDepartamento &&
				t.IdMunicipio == IdMunicipio);
		}

		public static PuntajeEvaluacionProyecto Find(this ITable<PuntajeEvaluacionProyecto> table, int IdProyecto)
		{
			return table.FirstOrDefault(t =>
				t.IdProyecto == IdProyecto);
		}

		public static RecursoNatural Find(this ITable<RecursoNatural> table, string IdRecursoNatural, char IdTipoRecursoNatural)
		{
			return table.FirstOrDefault(t =>
				t.IdRecursoNatural == IdRecursoNatural &&
				t.IdTipoRecursoNatural == IdTipoRecursoNatural);
		}

		public static RecursoNaturalFiscalizacion Find(this ITable<RecursoNaturalFiscalizacion> table, string IdRecursoNatural, char IdTipoRecursoNatural)
		{
			return table.FirstOrDefault(t =>
				t.IdRecursoNatural == IdRecursoNatural &&
				t.IdTipoRecursoNatural == IdTipoRecursoNatural);
		}

		public static RendimientosFinanciero Find(this ITable<RendimientosFinanciero> table, string IdDepartamento, string IdMunicipio, int AñoVigencia, int MesInicioVigencia, int MesFinVigencia)
		{
			return table.FirstOrDefault(t =>
				t.IdDepartamento == IdDepartamento &&
				t.IdMunicipio == IdMunicipio &&
				t.AñoVigencia == AñoVigencia &&
				t.MesInicioVigencia == MesInicioVigencia &&
				t.MesFinVigencia == MesFinVigencia);
		}

		public static RespuestaCuestionario Find(this ITable<RespuestaCuestionario> table, int IdRespuesta)
		{
			return table.FirstOrDefault(t =>
				t.IdRespuesta == IdRespuesta);
		}

		public static RespuestaCuestionarioTemp Find(this ITable<RespuestaCuestionarioTemp> table, int IdRespuesta)
		{
			return table.FirstOrDefault(t =>
				t.IdRespuesta == IdRespuesta);
		}

		public static ResumenEstadisticasNacional Find(this ITable<ResumenEstadisticasNacional> table, int Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static Rol Find(this ITable<Rol> table, int IdRol)
		{
			return table.FirstOrDefault(t =>
				t.IdRol == IdRol);
		}

		public static RolUsuario Find(this ITable<RolUsuario> table, int IdRolUsuario)
		{
			return table.FirstOrDefault(t =>
				t.IdRolUsuario == IdRolUsuario);
		}
        public static consulta_SearchResultParam Find(this ITable<consulta_SearchResultParam> table, int Id)
        {
            return table.FirstOrDefault(t =>
                t.Id == Id);
        }
        public static Sector Find(this ITable<Sector> table, int IdSector)
		{
			return table.FirstOrDefault(t =>
				t.IdSector == IdSector);
		}

		public static SeguimientoEsquemaFinanciacionProyecto Find(this ITable<SeguimientoEsquemaFinanciacionProyecto> table, int IdSeguimientoEsquemaFinanciacion)
		{
			return table.FirstOrDefault(t =>
				t.IdSeguimientoEsquemaFinanciacion == IdSeguimientoEsquemaFinanciacion);
		}

		public static SeguimientoMetaIndicadorProducto Find(this ITable<SeguimientoMetaIndicadorProducto> table, int IdSeguimientoMetaIndicadorProducto)
		{
			return table.FirstOrDefault(t =>
				t.IdSeguimientoMetaIndicadorProducto == IdSeguimientoMetaIndicadorProducto);
		}

		public static Tiempo Find(this ITable<Tiempo> table, int IdFecha)
		{
			return table.FirstOrDefault(t =>
				t.IdFecha == IdFecha);
		}

		public static TipoActividadFiscalizacion Find(this ITable<TipoActividadFiscalizacion> table, string Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static TipoCampoOProyecto Find(this ITable<TipoCampoOProyecto> table, string IdTipoCampoOProyecto)
		{
			return table.FirstOrDefault(t =>
				t.IdTipoCampoOProyecto == IdTipoCampoOProyecto);
		}

		public static TipoComentario Find(this ITable<TipoComentario> table, int Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static TipoContraprestacion Find(this ITable<TipoContraprestacion> table, string IdTipoContraprestacion)
		{
			return table.FirstOrDefault(t =>
				t.IdTipoContraprestacion == IdTipoContraprestacion);
		}

		public static TipoDeFinanciacion Find(this ITable<TipoDeFinanciacion> table, int IdTipoFinanciacion)
		{
			return table.FirstOrDefault(t =>
				t.IdTipoFinanciacion == IdTipoFinanciacion);
		}

		public static TipoDeRecursoNatural Find(this ITable<TipoDeRecursoNatural> table, char IdTipoRecursoNatural)
		{
			return table.FirstOrDefault(t =>
				t.IdTipoRecursoNatural == IdTipoRecursoNatural);
		}

		public static Tipologia Find(this ITable<Tipologia> table, int IdTipologia)
		{
			return table.FirstOrDefault(t =>
				t.IdTipologia == IdTipologia);
		}

		public static TipologiasComentario Find(this ITable<TipologiasComentario> table, int IdTipologiaComenario)
		{
			return table.FirstOrDefault(t =>
				t.IdTipologiaComenario == IdTipologiaComenario);
		}

		public static TipoPermiso Find(this ITable<TipoPermiso> table, int IdTipoPermiso)
		{
			return table.FirstOrDefault(t =>
				t.IdTipoPermiso == IdTipoPermiso);
		}

		public static TipoRespuesta Find(this ITable<TipoRespuesta> table, int Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static UnidadMedida Find(this ITable<UnidadMedida> table, string IdUnidadMedida)
		{
			return table.FirstOrDefault(t =>
				t.IdUnidadMedida == IdUnidadMedida);
		}

		public static Usuario Find(this ITable<Usuario> table, int IdUsuario)
		{
			return table.FirstOrDefault(t =>
				t.IdUsuario == IdUsuario);
		}

		public static UsuarioXEntidad Find(this ITable<UsuarioXEntidad> table, int Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}
	}
}

#pragma warning restore 1591




